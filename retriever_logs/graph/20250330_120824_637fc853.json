{
  "retriever": "graph",
  "query": "## Vulnerability Description\n**Incorrect Privilege Assignment** in M-Files Web (Classic) in M-Files before 22.8.11691.0 allows low privilege user to change some configuration.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **Incorrect Privilege Assignment**\n- **impact:** change some configuration\n- **attacker:** low privilege user\n- **product:** M-Files Web (Classic)\n- **version:** before 22.8.11691.0\n\n## CVE Reference Links Content Summary\nBased on the provided content, here's a breakdown of the vulnerability:\n\n**CVE ID:** CVE-2022-4264\n\n**Root Cause:** Incorrect privilege assignment in M-Files Web (Classic).\n\n**Weaknesses/Vulnerabilities:**\n*   Improper Privilege Management (CWE-269): The system allows users with low privileges to modify certain configuration settings.\n\n**Impact of Exploitation:**\n*   Low-privilege users can change some limited local web configuration data.\n*   This could lead to changes in the behavior of M-Files Web.\n*   The impact is classified as a high impact to integrity (I:H) according to CVSS vector but there is no impact to Confidentiality(C:N) or Availability(A:N).\n\n**Attack Vectors:**\n*   Network (AV:N): The vulnerability is exploitable over the network.\n*   Low-privilege user access (PR:L): Requires a low-privilege user account.\n*   No user interaction required (UI:N).\n\n**Required Attacker Capabilities/Position:**\n*   An attacker needs to have a low privilege user account on the affected M-Files system.\n*   The attacker needs network access to the M-Files Web (Classic) interface.\n\n**Affected Products:**\n*   M-Files Web Classic versions prior to 22.8.11691.0.\n\n**CVSS Score:** 6.5\n**CVSS Vector:** CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N\n\n**Additional Notes:**\n* CAPEC-176: Configuration/Environment Manipulation is noted as related to this vulnerability\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 266 | Incorrect Privilege Assignment | Base | Allowed | sparse | 0.263 |\n| 2 | 732 | Incorrect Permission Assignment for Critical Resource | Class | Allowed-with-Review | sparse | 0.161 |\n| 3 | 269 | Improper Privilege Management | Class | Discouraged | sparse | 0.125 |\n| 4 | 284 | Improper Access Control | Pillar | Discouraged | sparse | 0.123 |\n| 5 | 276 | Incorrect Default Permissions | Base | Allowed | sparse | 0.117 |\n| 6 | 286 | Incorrect User Management | Class | Allowed-with-Review | dense | 0.530 |\n| 7 | 842 | Placement of User into Incorrect Group | Base | Allowed | graph | 0.002 |\n| 8 | 915 | Improperly Controlled Modification of Dynamically-Determined Object Attributes | Base | Allowed | sparse | 0.114 |\n| 9 | 708 | Incorrect Ownership Assignment | Base | Allowed | sparse | 0.113 |\n| 10 | 863 | Incorrect Authorization | Class | Allowed-with-Review | sparse | 0.108 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-269\nCanAlsoBe -> CWE-286\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1193:** untrusted user placed in unix \"wheel\" group\n- **CVE-2005-2741:** Product allows users to grant themselves certain rights that can be used to escalate privileges.\n- **CVE-2005-2496:** Product uses group ID of a user instead of the group, causing it to run with different privileges. This is resultant from some other unknown issue.\n\n\n\n\n## CWE-732: Incorrect Permission Assignment for Critical Resource\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\n\n### Extended Description\nWhen a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution, or sensitive user data. For example, consider a misconfigured storage account for the cloud that can be read or written by a public or anonymous user.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-668\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** While the name itself indicates an assignment of permissions for resources, this is often misused for vulnerabilities in which \"permissions\" are not checked, which is an \"authorization\" weakness (CWE-285 or descendants) within CWE's model [REF-1287].\n**Comments:** Closely analyze the specific mistake that is allowing the resource to be exposed, and perform a CWE mapping for that mistake.\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n\n\n### Observed Examples\n- **CVE-2022-29527:** Go application for cloud management creates a world-writable sudoers file that allows local attackers to inject sudo rules and escalate privileges to root by winning a race condition.\n- **CVE-2009-3482:** Anti-virus product sets insecure \"Everyone: Full Control\" permissions for files under the \"Program Files\" folder, allowing attackers to replace executables with Trojan horses.\n- **CVE-2009-3897:** Product creates directories with 0777 permissions at installation, allowing users to gain privileges and access a socket used for authentication.\n\n\n\n\n## CWE-269: Improper Privilege Management\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-269 is commonly misused. It can be conflated with \"privilege escalation,\" which is a technical impact that is listed in many low-information vulnerability reports [REF-1287]. It is not useful for trend analysis.\n**Comments:** If an error or mistake allows privilege escalation, then use the CWE ID for that mistake. Avoid using CWE-269 when only phrases such as \"privilege escalation\" or \"gain privileges\" are available, as these indicate technical impact of the vulnerability - not the root cause weakness. If the root cause seems to be directly related to privileges, then examine the children of CWE-269 for additional hints, such as Execution with Unnecessary Privileges (CWE-250) or Incorrect Privilege Assignment (CWE-266).\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n\n\n### Observed Examples\n- **CVE-2001-1555:** Terminal privileges are not reset when a user logs out.\n- **CVE-2001-1514:** Does not properly pass security context to child processes in certain cases, allows privilege escalation.\n- **CVE-2001-0128:** Does not properly compute roles.\n\n\n\n\n## CWE-284: Improper Access Control\n**Abstraction:** Pillar\n**Status:** Incomplete\n\n### Description\nThe product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.\n\n### Extended Description\n\n\nAccess control involves the use of several protection mechanisms such as:\n\n\n  - Authentication (proving the identity of an actor)\n\n  - Authorization (ensuring that a given actor can access a resource), and\n\n  - Accountability (tracking of activities that were performed)\n\nWhen any mechanism is not applied or otherwise fails, attackers can compromise the security of the product by gaining privileges, reading sensitive information, executing commands, evading detection, etc.\n\nThere are two distinct behaviors that can introduce access control weaknesses:\n\n\n  - Specification: incorrect privileges, permissions, ownership, etc. are explicitly specified for either the user or the resource (for example, setting a password file to be world-writable, or giving administrator capabilities to a guest user). This action could be performed by the program or the administrator.\n\n  - Enforcement: the mechanism contains errors that prevent it from properly enforcing the specified access control requirements (e.g., allowing the user to specify their own privileges, or allowing a syntactically-incorrect ACL to produce insecure settings). This problem occurs within the program itself, in that it does not actually enforce the intended security policy that the administrator specifies.\n\n\n\n### Alternative Terms\nAuthorization: The terms \"access control\" and \"authorization\" are often used interchangeably, although many people have distinct definitions. The CWE usage of \"access control\" is intended as a general term for the various mechanisms that restrict which users can access which resources, and \"authorization\" is more narrowly defined. It is unlikely that there will be community consensus on the use of these terms.\n\n### Relationships\nNone\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-284 is extremely high-level, a Pillar. Its name, \"Improper Access Control,\" is often misused in low-information vulnerability reports [REF-1287] or by active use of the OWASP Top Ten, such as \"A01:2021-Broken Access Control\". It is not useful for trend analysis.\n**Comments:** Consider using descendants of CWE-284 that are more specific to the kind of access control involved, such as those involving authorization (Missing Authorization (CWE-862), Incorrect Authorization (CWE-863), Incorrect Permission Assignment for Critical Resource (CWE-732), etc.); authentication (Missing Authentication (CWE-306) or Weak Authentication (CWE-1390)); Incorrect User Management (CWE-286); Improper Restriction of Communication Channel to Intended Endpoints (CWE-923); etc.\n**Reasons:**\n- Frequent Misuse\n- Abstraction\n**Suggested Alternatives:**\n- CWE-862: Missing Authorization\n- CWE-863: Incorrect Authorization\n- CWE-732: Incorrect Permission Assignment for Critical Resource\n- CWE-306: Missing Authentication\n- CWE-1390: Weak Authentication\n- CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n\n\n### Additional Notes\n**[Maintenance]** \n\nThis entry needs more work. Possible sub-categories include:\n\n\n  - Trusted group includes undesired entities (partially covered by CWE-286)\n\n  - Group can perform undesired actions\n\n  - ACL parse error does not fail closed\n\n\n\n\n\n### Observed Examples\n- **CVE-2022-24985:** A form hosting website only checks the session authentication status for a single form, making it possible to bypass authentication when there are multiple forms\n- **CVE-2022-29238:** Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.\n- **CVE-2022-23607:** Python-based HTTP library did not scope cookies to a particular domain such that \"supercookies\" could be sent to any domain on redirect\n\n\n\n\n## CWE-276: Incorrect Default Permissions\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nDuring installation, installed file permissions are set to allow anyone to modify those files.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-732\nChildOf -> CWE-732\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2005-1941:** Executables installed world-writable.\n- **CVE-2002-1713:** Home directories installed world-readable.\n- **CVE-2001-1550:** World-writable log files allow information loss; world-readable file has cleartext passwords.\n\n\n\n\n## CWE-286: Incorrect User Management\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product does not properly manage a user within its environment.\n\n### Extended Description\nUsers can be assigned to the wrong group (class) of permissions resulting in unintended access rights to sensitive objects.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n**[Maintenance]** This item needs more work. Possible sub-categories include: user in wrong group, and user with insecure profile or \"configuration\". It also might be better expressed as a category than a weakness.\n\n\n\n### Observed Examples\n- **CVE-2022-36109:** Containerization product does not record a user's supplementary group ID, allowing bypass of group restrictions.\n- **CVE-1999-1193:** Operating system assigns user to privileged wheel group, allowing the user to gain root privileges.\n\n\n\n\n## CWE-842: Placement of User into Incorrect Group\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product or the administrator places a user into an incorrect group.\n\n### Extended Description\nIf the incorrect group has more access or privileges than the intended group, the user might be able to bypass intended security policy to access unexpected resources or perform unexpected actions. The access-control system might not be able to detect malicious usage of this group membership.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-286\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1193:** Operating system assigns user to privileged wheel group, allowing the user to gain root privileges.\n- **CVE-2010-3716:** Chain: drafted web request allows the creation of users with arbitrary group membership.\n- **CVE-2008-5397:** Chain: improper processing of configuration options causes users to contain unintended group memberships.\n\n\n\n\n## CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.\n\n### Extended Description\n\n\nIf the object contains attributes that were only intended for internal use, then their unexpected modification could lead to a vulnerability.\n\n\nThis weakness is sometimes known by the language-specific mechanisms that make it possible, such as mass assignment, autobinding, or object injection.\n\n\n### Alternative Terms\nMass Assignment: \"Mass assignment\" is the name of a feature in Ruby on Rails that allows simultaneous modification of multiple object attributes.\nAutoBinding: The \"Autobinding\" term is used in frameworks such as Spring MVC and ASP.NET MVC.\nPHP Object Injection: Some PHP application researchers use this term for attacking unsafe use of the unserialize() function, but it is also used for CWE-502.\n\n### Relationships\nChildOf -> CWE-913\nPeerOf -> CWE-502\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** The relationships between CWE-502 and CWE-915 need further exploration. CWE-915 is more narrowly scoped to object modification, and is not necessarily used for deserialization.\n\n\n\n### Observed Examples\n- **CVE-2024-3283:** Application for using LLMs allows modification of a sensitive variable using mass assignment.\n- **CVE-2012-2054:** Mass assignment allows modification of arbitrary attributes using modified URL.\n- **CVE-2012-2055:** Source version control product allows modification of trusted key using mass assignment.\n\n\n\n\n## CWE-708: Incorrect Ownership Assignment\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product assigns an owner to a resource, but the owner is outside of the intended control sphere.\n\n### Extended Description\nThis may allow the resource to be manipulated by actors outside of the intended control sphere.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-282\nCanAlsoBe -> CWE-345\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** \n\nThis overlaps verification errors, permissions, and privileges.\n\n\nA closely related weakness is the incorrect assignment of groups to a resource. It is not clear whether it would fall under this entry or require a different entry.\n\n\n\n\n### Observed Examples\n- **CVE-2007-5101:** File system sets wrong ownership and group when creating a new file.\n- **CVE-2007-4238:** OS installs program with bin owner/group, allowing modification.\n- **CVE-2007-1716:** Manager does not properly restore ownership of a reusable resource when a user logs out, allowing privilege escalation.\n\n\n\n\n## CWE-863: Incorrect Authorization\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Terminology]** \n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\n\n\n### Observed Examples\n- **CVE-2021-39155:** Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations.\n- **CVE-2019-15900:** Chain: sscanf() call is used to check if a username and group exists, but the return value of sscanf() call is not checked (CWE-252), causing an uninitialized variable to be checked (CWE-457), returning success to allow authorization bypass for executing a privileged (CWE-863).\n- **CVE-2009-2213:** Gateway uses default \"Allow\" configuration for its authorization settings.\n\n Consider specifically these CWEs: CWE-266 CWE-280 CWE-274 CWE-708 CWE-732 CWE-639 CWE-285 CWE-282 CWE-863",
  "keyphrases": {
    "original_query": "## Vulnerability Description\n**Incorrect Privilege Assignment** in M-Files Web (Classic) in M-Files before 22.8.11691.0 allows low privilege user to change some configuration.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **Incorrect Privilege Assignment**\n- **impact:** change some configuration\n- **attacker:** low privilege user\n- **product:** M-Files Web (Classic)\n- **version:** before 22.8.11691.0\n\n## CVE Reference Links Content Summary\nBased on the provided content, here's a breakdown of the vulnerability:\n\n**CVE ID:** CVE-2022-4264\n\n**Root Cause:** Incorrect privilege assignment in M-Files Web (Classic).\n\n**Weaknesses/Vulnerabilities:**\n*   Improper Privilege Management (CWE-269): The system allows users with low privileges to modify certain configuration settings.\n\n**Impact of Exploitation:**\n*   Low-privilege users can change some limited local web configuration data.\n*   This could lead to changes in the behavior of M-Files Web.\n*   The impact is classified as a high impact to integrity (I:H) according to CVSS vector but there is no impact to Confidentiality(C:N) or Availability(A:N).\n\n**Attack Vectors:**\n*   Network (AV:N): The vulnerability is exploitable over the network.\n*   Low-privilege user access (PR:L): Requires a low-privilege user account.\n*   No user interaction required (UI:N).\n\n**Required Attacker Capabilities/Position:**\n*   An attacker needs to have a low privilege user account on the affected M-Files system.\n*   The attacker needs network access to the M-Files Web (Classic) interface.\n\n**Affected Products:**\n*   M-Files Web Classic versions prior to 22.8.11691.0.\n\n**CVSS Score:** 6.5\n**CVSS Vector:** CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N\n\n**Additional Notes:**\n* CAPEC-176: Configuration/Environment Manipulation is noted as related to this vulnerability\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 266 | Incorrect Privilege Assignment | Base | Allowed | sparse | 0.263 |\n| 2 | 732 | Incorrect Permission Assignment for Critical Resource | Class | Allowed-with-Review | sparse | 0.161 |\n| 3 | 269 | Improper Privilege Management | Class | Discouraged | sparse | 0.125 |\n| 4 | 284 | Improper Access Control | Pillar | Discouraged | sparse | 0.123 |\n| 5 | 276 | Incorrect Default Permissions | Base | Allowed | sparse | 0.117 |\n| 6 | 286 | Incorrect User Management | Class | Allowed-with-Review | dense | 0.530 |\n| 7 | 842 | Placement of User into Incorrect Group | Base | Allowed | graph | 0.002 |\n| 8 | 915 | Improperly Controlled Modification of Dynamically-Determined Object Attributes | Base | Allowed | sparse | 0.114 |\n| 9 | 708 | Incorrect Ownership Assignment | Base | Allowed | sparse | 0.113 |\n| 10 | 863 | Incorrect Authorization | Class | Allowed-with-Review | sparse | 0.108 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-269\nCanAlsoBe -> CWE-286\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1193:** untrusted user placed in unix \"wheel\" group\n- **CVE-2005-2741:** Product allows users to grant themselves certain rights that can be used to escalate privileges.\n- **CVE-2005-2496:** Product uses group ID of a user instead of the group, causing it to run with different privileges. This is resultant from some other unknown issue.\n\n\n\n\n## CWE-732: Incorrect Permission Assignment for Critical Resource\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\n\n### Extended Description\nWhen a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution, or sensitive user data. For example, consider a misconfigured storage account for the cloud that can be read or written by a public or anonymous user.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-668\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** While the name itself indicates an assignment of permissions for resources, this is often misused for vulnerabilities in which \"permissions\" are not checked, which is an \"authorization\" weakness (CWE-285 or descendants) within CWE's model [REF-1287].\n**Comments:** Closely analyze the specific mistake that is allowing the resource to be exposed, and perform a CWE mapping for that mistake.\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n\n\n### Observed Examples\n- **CVE-2022-29527:** Go application for cloud management creates a world-writable sudoers file that allows local attackers to inject sudo rules and escalate privileges to root by winning a race condition.\n- **CVE-2009-3482:** Anti-virus product sets insecure \"Everyone: Full Control\" permissions for files under the \"Program Files\" folder, allowing attackers to replace executables with Trojan horses.\n- **CVE-2009-3897:** Product creates directories with 0777 permissions at installation, allowing users to gain privileges and access a socket used for authentication.\n\n\n\n\n## CWE-269: Improper Privilege Management\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-269 is commonly misused. It can be conflated with \"privilege escalation,\" which is a technical impact that is listed in many low-information vulnerability reports [REF-1287]. It is not useful for trend analysis.\n**Comments:** If an error or mistake allows privilege escalation, then use the CWE ID for that mistake. Avoid using CWE-269 when only phrases such as \"privilege escalation\" or \"gain privileges\" are available, as these indicate technical impact of the vulnerability - not the root cause weakness. If the root cause seems to be directly related to privileges, then examine the children of CWE-269 for additional hints, such as Execution with Unnecessary Privileges (CWE-250) or Incorrect Privilege Assignment (CWE-266).\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n\n\n### Observed Examples\n- **CVE-2001-1555:** Terminal privileges are not reset when a user logs out.\n- **CVE-2001-1514:** Does not properly pass security context to child processes in certain cases, allows privilege escalation.\n- **CVE-2001-0128:** Does not properly compute roles.\n\n\n\n\n## CWE-284: Improper Access Control\n**Abstraction:** Pillar\n**Status:** Incomplete\n\n### Description\nThe product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.\n\n### Extended Description\n\n\nAccess control involves the use of several protection mechanisms such as:\n\n\n  - Authentication (proving the identity of an actor)\n\n  - Authorization (ensuring that a given actor can access a resource), and\n\n  - Accountability (tracking of activities that were performed)\n\nWhen any mechanism is not applied or otherwise fails, attackers can compromise the security of the product by gaining privileges, reading sensitive information, executing commands, evading detection, etc.\n\nThere are two distinct behaviors that can introduce access control weaknesses:\n\n\n  - Specification: incorrect privileges, permissions, ownership, etc. are explicitly specified for either the user or the resource (for example, setting a password file to be world-writable, or giving administrator capabilities to a guest user). This action could be performed by the program or the administrator.\n\n  - Enforcement: the mechanism contains errors that prevent it from properly enforcing the specified access control requirements (e.g., allowing the user to specify their own privileges, or allowing a syntactically-incorrect ACL to produce insecure settings). This problem occurs within the program itself, in that it does not actually enforce the intended security policy that the administrator specifies.\n\n\n\n### Alternative Terms\nAuthorization: The terms \"access control\" and \"authorization\" are often used interchangeably, although many people have distinct definitions. The CWE usage of \"access control\" is intended as a general term for the various mechanisms that restrict which users can access which resources, and \"authorization\" is more narrowly defined. It is unlikely that there will be community consensus on the use of these terms.\n\n### Relationships\nNone\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-284 is extremely high-level, a Pillar. Its name, \"Improper Access Control,\" is often misused in low-information vulnerability reports [REF-1287] or by active use of the OWASP Top Ten, such as \"A01:2021-Broken Access Control\". It is not useful for trend analysis.\n**Comments:** Consider using descendants of CWE-284 that are more specific to the kind of access control involved, such as those involving authorization (Missing Authorization (CWE-862), Incorrect Authorization (CWE-863), Incorrect Permission Assignment for Critical Resource (CWE-732), etc.); authentication (Missing Authentication (CWE-306) or Weak Authentication (CWE-1390)); Incorrect User Management (CWE-286); Improper Restriction of Communication Channel to Intended Endpoints (CWE-923); etc.\n**Reasons:**\n- Frequent Misuse\n- Abstraction\n**Suggested Alternatives:**\n- CWE-862: Missing Authorization\n- CWE-863: Incorrect Authorization\n- CWE-732: Incorrect Permission Assignment for Critical Resource\n- CWE-306: Missing Authentication\n- CWE-1390: Weak Authentication\n- CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n\n\n### Additional Notes\n**[Maintenance]** \n\nThis entry needs more work. Possible sub-categories include:\n\n\n  - Trusted group includes undesired entities (partially covered by CWE-286)\n\n  - Group can perform undesired actions\n\n  - ACL parse error does not fail closed\n\n\n\n\n\n### Observed Examples\n- **CVE-2022-24985:** A form hosting website only checks the session authentication status for a single form, making it possible to bypass authentication when there are multiple forms\n- **CVE-2022-29238:** Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.\n- **CVE-2022-23607:** Python-based HTTP library did not scope cookies to a particular domain such that \"supercookies\" could be sent to any domain on redirect\n\n\n\n\n## CWE-276: Incorrect Default Permissions\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nDuring installation, installed file permissions are set to allow anyone to modify those files.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-732\nChildOf -> CWE-732\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2005-1941:** Executables installed world-writable.\n- **CVE-2002-1713:** Home directories installed world-readable.\n- **CVE-2001-1550:** World-writable log files allow information loss; world-readable file has cleartext passwords.\n\n\n\n\n## CWE-286: Incorrect User Management\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product does not properly manage a user within its environment.\n\n### Extended Description\nUsers can be assigned to the wrong group (class) of permissions resulting in unintended access rights to sensitive objects.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n**[Maintenance]** This item needs more work. Possible sub-categories include: user in wrong group, and user with insecure profile or \"configuration\". It also might be better expressed as a category than a weakness.\n\n\n\n### Observed Examples\n- **CVE-2022-36109:** Containerization product does not record a user's supplementary group ID, allowing bypass of group restrictions.\n- **CVE-1999-1193:** Operating system assigns user to privileged wheel group, allowing the user to gain root privileges.\n\n\n\n\n## CWE-842: Placement of User into Incorrect Group\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product or the administrator places a user into an incorrect group.\n\n### Extended Description\nIf the incorrect group has more access or privileges than the intended group, the user might be able to bypass intended security policy to access unexpected resources or perform unexpected actions. The access-control system might not be able to detect malicious usage of this group membership.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-286\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1193:** Operating system assigns user to privileged wheel group, allowing the user to gain root privileges.\n- **CVE-2010-3716:** Chain: drafted web request allows the creation of users with arbitrary group membership.\n- **CVE-2008-5397:** Chain: improper processing of configuration options causes users to contain unintended group memberships.\n\n\n\n\n## CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.\n\n### Extended Description\n\n\nIf the object contains attributes that were only intended for internal use, then their unexpected modification could lead to a vulnerability.\n\n\nThis weakness is sometimes known by the language-specific mechanisms that make it possible, such as mass assignment, autobinding, or object injection.\n\n\n### Alternative Terms\nMass Assignment: \"Mass assignment\" is the name of a feature in Ruby on Rails that allows simultaneous modification of multiple object attributes.\nAutoBinding: The \"Autobinding\" term is used in frameworks such as Spring MVC and ASP.NET MVC.\nPHP Object Injection: Some PHP application researchers use this term for attacking unsafe use of the unserialize() function, but it is also used for CWE-502.\n\n### Relationships\nChildOf -> CWE-913\nPeerOf -> CWE-502\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** The relationships between CWE-502 and CWE-915 need further exploration. CWE-915 is more narrowly scoped to object modification, and is not necessarily used for deserialization.\n\n\n\n### Observed Examples\n- **CVE-2024-3283:** Application for using LLMs allows modification of a sensitive variable using mass assignment.\n- **CVE-2012-2054:** Mass assignment allows modification of arbitrary attributes using modified URL.\n- **CVE-2012-2055:** Source version control product allows modification of trusted key using mass assignment.\n\n\n\n\n## CWE-708: Incorrect Ownership Assignment\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product assigns an owner to a resource, but the owner is outside of the intended control sphere.\n\n### Extended Description\nThis may allow the resource to be manipulated by actors outside of the intended control sphere.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-282\nCanAlsoBe -> CWE-345\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** \n\nThis overlaps verification errors, permissions, and privileges.\n\n\nA closely related weakness is the incorrect assignment of groups to a resource. It is not clear whether it would fall under this entry or require a different entry.\n\n\n\n\n### Observed Examples\n- **CVE-2007-5101:** File system sets wrong ownership and group when creating a new file.\n- **CVE-2007-4238:** OS installs program with bin owner/group, allowing modification.\n- **CVE-2007-1716:** Manager does not properly restore ownership of a reusable resource when a user logs out, allowing privilege escalation.\n\n\n\n\n## CWE-863: Incorrect Authorization\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Terminology]** \n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\n\n\n### Observed Examples\n- **CVE-2021-39155:** Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations.\n- **CVE-2019-15900:** Chain: sscanf() call is used to check if a username and group exists, but the return value of sscanf() call is not checked (CWE-252), causing an uninitialized variable to be checked (CWE-457), returning success to allow authorization bypass for executing a privileged (CWE-863).\n- **CVE-2009-2213:** Gateway uses default \"Allow\" configuration for its authorization settings.\n\n",
    "enhanced_query": "## Vulnerability Description\n**Incorrect Privilege Assignment** in M-Files Web (Classic) in M-Files before 22.8.11691.0 allows low privilege user to change some configuration.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **Incorrect Privilege Assignment**\n- **impact:** change some configuration\n- **attacker:** low privilege user\n- **product:** M-Files Web (Classic)\n- **version:** before 22.8.11691.0\n\n## CVE Reference Links Content Summary\nBased on the provided content, here's a breakdown of the vulnerability:\n\n**CVE ID:** CVE-2022-4264\n\n**Root Cause:** Incorrect privilege assignment in M-Files Web (Classic).\n\n**Weaknesses/Vulnerabilities:**\n*   Improper Privilege Management (CWE-269): The system allows users with low privileges to modify certain configuration settings.\n\n**Impact of Exploitation:**\n*   Low-privilege users can change some limited local web configuration data.\n*   This could lead to changes in the behavior of M-Files Web.\n*   The impact is classified as a high impact to integrity (I:H) according to CVSS vector but there is no impact to Confidentiality(C:N) or Availability(A:N).\n\n**Attack Vectors:**\n*   Network (AV:N): The vulnerability is exploitable over the network.\n*   Low-privilege user access (PR:L): Requires a low-privilege user account.\n*   No user interaction required (UI:N).\n\n**Required Attacker Capabilities/Position:**\n*   An attacker needs to have a low privilege user account on the affected M-Files system.\n*   The attacker needs network access to the M-Files Web (Classic) interface.\n\n**Affected Products:**\n*   M-Files Web Classic versions prior to 22.8.11691.0.\n\n**CVSS Score:** 6.5\n**CVSS Vector:** CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N\n\n**Additional Notes:**\n* CAPEC-176: Configuration/Environment Manipulation is noted as related to this vulnerability\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 266 | Incorrect Privilege Assignment | Base | Allowed | sparse | 0.263 |\n| 2 | 732 | Incorrect Permission Assignment for Critical Resource | Class | Allowed-with-Review | sparse | 0.161 |\n| 3 | 269 | Improper Privilege Management | Class | Discouraged | sparse | 0.125 |\n| 4 | 284 | Improper Access Control | Pillar | Discouraged | sparse | 0.123 |\n| 5 | 276 | Incorrect Default Permissions | Base | Allowed | sparse | 0.117 |\n| 6 | 286 | Incorrect User Management | Class | Allowed-with-Review | dense | 0.530 |\n| 7 | 842 | Placement of User into Incorrect Group | Base | Allowed | graph | 0.002 |\n| 8 | 915 | Improperly Controlled Modification of Dynamically-Determined Object Attributes | Base | Allowed | sparse | 0.114 |\n| 9 | 708 | Incorrect Ownership Assignment | Base | Allowed | sparse | 0.113 |\n| 10 | 863 | Incorrect Authorization | Class | Allowed-with-Review | sparse | 0.108 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-269\nCanAlsoBe -> CWE-286\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1193:** untrusted user placed in unix \"wheel\" group\n- **CVE-2005-2741:** Product allows users to grant themselves certain rights that can be used to escalate privileges.\n- **CVE-2005-2496:** Product uses group ID of a user instead of the group, causing it to run with different privileges. This is resultant from some other unknown issue.\n\n\n\n\n## CWE-732: Incorrect Permission Assignment for Critical Resource\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\n\n### Extended Description\nWhen a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution, or sensitive user data. For example, consider a misconfigured storage account for the cloud that can be read or written by a public or anonymous user.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-668\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** While the name itself indicates an assignment of permissions for resources, this is often misused for vulnerabilities in which \"permissions\" are not checked, which is an \"authorization\" weakness (CWE-285 or descendants) within CWE's model [REF-1287].\n**Comments:** Closely analyze the specific mistake that is allowing the resource to be exposed, and perform a CWE mapping for that mistake.\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n\n\n### Observed Examples\n- **CVE-2022-29527:** Go application for cloud management creates a world-writable sudoers file that allows local attackers to inject sudo rules and escalate privileges to root by winning a race condition.\n- **CVE-2009-3482:** Anti-virus product sets insecure \"Everyone: Full Control\" permissions for files under the \"Program Files\" folder, allowing attackers to replace executables with Trojan horses.\n- **CVE-2009-3897:** Product creates directories with 0777 permissions at installation, allowing users to gain privileges and access a socket used for authentication.\n\n\n\n\n## CWE-269: Improper Privilege Management\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-269 is commonly misused. It can be conflated with \"privilege escalation,\" which is a technical impact that is listed in many low-information vulnerability reports [REF-1287]. It is not useful for trend analysis.\n**Comments:** If an error or mistake allows privilege escalation, then use the CWE ID for that mistake. Avoid using CWE-269 when only phrases such as \"privilege escalation\" or \"gain privileges\" are available, as these indicate technical impact of the vulnerability - not the root cause weakness. If the root cause seems to be directly related to privileges, then examine the children of CWE-269 for additional hints, such as Execution with Unnecessary Privileges (CWE-250) or Incorrect Privilege Assignment (CWE-266).\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n\n\n### Observed Examples\n- **CVE-2001-1555:** Terminal privileges are not reset when a user logs out.\n- **CVE-2001-1514:** Does not properly pass security context to child processes in certain cases, allows privilege escalation.\n- **CVE-2001-0128:** Does not properly compute roles.\n\n\n\n\n## CWE-284: Improper Access Control\n**Abstraction:** Pillar\n**Status:** Incomplete\n\n### Description\nThe product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.\n\n### Extended Description\n\n\nAccess control involves the use of several protection mechanisms such as:\n\n\n  - Authentication (proving the identity of an actor)\n\n  - Authorization (ensuring that a given actor can access a resource), and\n\n  - Accountability (tracking of activities that were performed)\n\nWhen any mechanism is not applied or otherwise fails, attackers can compromise the security of the product by gaining privileges, reading sensitive information, executing commands, evading detection, etc.\n\nThere are two distinct behaviors that can introduce access control weaknesses:\n\n\n  - Specification: incorrect privileges, permissions, ownership, etc. are explicitly specified for either the user or the resource (for example, setting a password file to be world-writable, or giving administrator capabilities to a guest user). This action could be performed by the program or the administrator.\n\n  - Enforcement: the mechanism contains errors that prevent it from properly enforcing the specified access control requirements (e.g., allowing the user to specify their own privileges, or allowing a syntactically-incorrect ACL to produce insecure settings). This problem occurs within the program itself, in that it does not actually enforce the intended security policy that the administrator specifies.\n\n\n\n### Alternative Terms\nAuthorization: The terms \"access control\" and \"authorization\" are often used interchangeably, although many people have distinct definitions. The CWE usage of \"access control\" is intended as a general term for the various mechanisms that restrict which users can access which resources, and \"authorization\" is more narrowly defined. It is unlikely that there will be community consensus on the use of these terms.\n\n### Relationships\nNone\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-284 is extremely high-level, a Pillar. Its name, \"Improper Access Control,\" is often misused in low-information vulnerability reports [REF-1287] or by active use of the OWASP Top Ten, such as \"A01:2021-Broken Access Control\". It is not useful for trend analysis.\n**Comments:** Consider using descendants of CWE-284 that are more specific to the kind of access control involved, such as those involving authorization (Missing Authorization (CWE-862), Incorrect Authorization (CWE-863), Incorrect Permission Assignment for Critical Resource (CWE-732), etc.); authentication (Missing Authentication (CWE-306) or Weak Authentication (CWE-1390)); Incorrect User Management (CWE-286); Improper Restriction of Communication Channel to Intended Endpoints (CWE-923); etc.\n**Reasons:**\n- Frequent Misuse\n- Abstraction\n**Suggested Alternatives:**\n- CWE-862: Missing Authorization\n- CWE-863: Incorrect Authorization\n- CWE-732: Incorrect Permission Assignment for Critical Resource\n- CWE-306: Missing Authentication\n- CWE-1390: Weak Authentication\n- CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n\n\n### Additional Notes\n**[Maintenance]** \n\nThis entry needs more work. Possible sub-categories include:\n\n\n  - Trusted group includes undesired entities (partially covered by CWE-286)\n\n  - Group can perform undesired actions\n\n  - ACL parse error does not fail closed\n\n\n\n\n\n### Observed Examples\n- **CVE-2022-24985:** A form hosting website only checks the session authentication status for a single form, making it possible to bypass authentication when there are multiple forms\n- **CVE-2022-29238:** Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.\n- **CVE-2022-23607:** Python-based HTTP library did not scope cookies to a particular domain such that \"supercookies\" could be sent to any domain on redirect\n\n\n\n\n## CWE-276: Incorrect Default Permissions\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nDuring installation, installed file permissions are set to allow anyone to modify those files.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-732\nChildOf -> CWE-732\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2005-1941:** Executables installed world-writable.\n- **CVE-2002-1713:** Home directories installed world-readable.\n- **CVE-2001-1550:** World-writable log files allow information loss; world-readable file has cleartext passwords.\n\n\n\n\n## CWE-286: Incorrect User Management\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product does not properly manage a user within its environment.\n\n### Extended Description\nUsers can be assigned to the wrong group (class) of permissions resulting in unintended access rights to sensitive objects.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n**[Maintenance]** This item needs more work. Possible sub-categories include: user in wrong group, and user with insecure profile or \"configuration\". It also might be better expressed as a category than a weakness.\n\n\n\n### Observed Examples\n- **CVE-2022-36109:** Containerization product does not record a user's supplementary group ID, allowing bypass of group restrictions.\n- **CVE-1999-1193:** Operating system assigns user to privileged wheel group, allowing the user to gain root privileges.\n\n\n\n\n## CWE-842: Placement of User into Incorrect Group\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product or the administrator places a user into an incorrect group.\n\n### Extended Description\nIf the incorrect group has more access or privileges than the intended group, the user might be able to bypass intended security policy to access unexpected resources or perform unexpected actions. The access-control system might not be able to detect malicious usage of this group membership.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-286\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1193:** Operating system assigns user to privileged wheel group, allowing the user to gain root privileges.\n- **CVE-2010-3716:** Chain: drafted web request allows the creation of users with arbitrary group membership.\n- **CVE-2008-5397:** Chain: improper processing of configuration options causes users to contain unintended group memberships.\n\n\n\n\n## CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.\n\n### Extended Description\n\n\nIf the object contains attributes that were only intended for internal use, then their unexpected modification could lead to a vulnerability.\n\n\nThis weakness is sometimes known by the language-specific mechanisms that make it possible, such as mass assignment, autobinding, or object injection.\n\n\n### Alternative Terms\nMass Assignment: \"Mass assignment\" is the name of a feature in Ruby on Rails that allows simultaneous modification of multiple object attributes.\nAutoBinding: The \"Autobinding\" term is used in frameworks such as Spring MVC and ASP.NET MVC.\nPHP Object Injection: Some PHP application researchers use this term for attacking unsafe use of the unserialize() function, but it is also used for CWE-502.\n\n### Relationships\nChildOf -> CWE-913\nPeerOf -> CWE-502\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** The relationships between CWE-502 and CWE-915 need further exploration. CWE-915 is more narrowly scoped to object modification, and is not necessarily used for deserialization.\n\n\n\n### Observed Examples\n- **CVE-2024-3283:** Application for using LLMs allows modification of a sensitive variable using mass assignment.\n- **CVE-2012-2054:** Mass assignment allows modification of arbitrary attributes using modified URL.\n- **CVE-2012-2055:** Source version control product allows modification of trusted key using mass assignment.\n\n\n\n\n## CWE-708: Incorrect Ownership Assignment\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product assigns an owner to a resource, but the owner is outside of the intended control sphere.\n\n### Extended Description\nThis may allow the resource to be manipulated by actors outside of the intended control sphere.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-282\nCanAlsoBe -> CWE-345\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** \n\nThis overlaps verification errors, permissions, and privileges.\n\n\nA closely related weakness is the incorrect assignment of groups to a resource. It is not clear whether it would fall under this entry or require a different entry.\n\n\n\n\n### Observed Examples\n- **CVE-2007-5101:** File system sets wrong ownership and group when creating a new file.\n- **CVE-2007-4238:** OS installs program with bin owner/group, allowing modification.\n- **CVE-2007-1716:** Manager does not properly restore ownership of a reusable resource when a user logs out, allowing privilege escalation.\n\n\n\n\n## CWE-863: Incorrect Authorization\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Terminology]** \n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\n\n\n### Observed Examples\n- **CVE-2021-39155:** Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations.\n- **CVE-2019-15900:** Chain: sscanf() call is used to check if a username and group exists, but the return value of sscanf() call is not checked (CWE-252), causing an uninitialized variable to be checked (CWE-457), returning success to allow authorization bypass for executing a privileged (CWE-863).\n- **CVE-2009-2213:** Gateway uses default \"Allow\" configuration for its authorization settings.\n\n Consider specifically these CWEs: CWE-266 CWE-280 CWE-274 CWE-708 CWE-732 CWE-639 CWE-285 CWE-282 CWE-863",
    "cwe_mentions": [
      "CWE-266",
      "CWE-280",
      "CWE-274",
      "CWE-708",
      "CWE-732",
      "CWE-639",
      "CWE-285",
      "CWE-282",
      "CWE-863"
    ],
    "search_time": 3.225355625152588
  },
  "timestamp": "2025-03-30 12:08:24",
  "cve_id": "unknown",
  "result_count": 10,
  "results": [
    {
      "cwe_id": "178",
      "name": "Improper Handling of Case Sensitivity",
      "type": "base",
      "score": 3.6399999999999997,
      "relationship_count": 0
    },
    {
      "cwe_id": "502",
      "name": "Deserialization of Untrusted Data",
      "type": "base",
      "score": 3.6399999999999997,
      "relationship_count": 0
    },
    {
      "cwe_id": "1289",
      "name": "Improper Validation of Unsafe Equivalence in Input",
      "type": "base",
      "score": 3.6399999999999997,
      "relationship_count": 0
    },
    {
      "cwe_id": "322",
      "name": "Key Exchange without Entity Authentication",
      "type": "base",
      "score": 2.8651999999999997,
      "relationship_count": 0
    },
    {
      "cwe_id": "289",
      "name": "Authentication Bypass by Alternate Name",
      "type": "base",
      "score": 2.8651999999999997,
      "relationship_count": 0
    },
    {
      "cwe_id": "942",
      "name": "Permissive Cross-domain Policy with Untrusted Domains",
      "type": "variant",
      "score": 2.6784000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "252",
      "name": "Unchecked Return Value",
      "type": "base",
      "score": 2.6104000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "350",
      "name": "Reliance on Reverse DNS Resolution for a Security-Critical Action",
      "type": "variant",
      "score": 2.5507200000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "456",
      "name": "Missing Initialization of a Variable",
      "type": "variant",
      "score": 2.5507200000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "266",
      "name": "Incorrect Privilege Assignment",
      "type": "Base",
      "score": 2.4975487313209928,
      "relationship_count": 0
    }
  ]
}