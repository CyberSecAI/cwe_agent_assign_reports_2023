{
  "retriever": "dense",
  "query": "## Vulnerability Description\n**Logging of excessive data** vulnerability in telephony prior to SMR Feb-2022 Release 1 allows privileged attackers to get Cell Location Information through log of user device.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **Logging of excessive data**\n- **impact:** get Cell Location Information\n- **attacker:** privileged attackers\n- **product:** telephony\n- **version:** prior to SMR Feb-2022 Release 1\n\n## CVE Reference Links Content Summary\n```\n{\n  \"vulnerability_details\": [\n    {\n      \"cve_id\": \"CVE-2022-22291\",\n      \"relevance\": \"RELATED\",\n      \"root_cause\": \"Logging of excessive data vulnerability in telephony\",\n      \"weaknesses\": [\n        \"Logging of excessive data\"\n      ],\n      \"impact\": \"Privileged attackers can get Cell Location Information through log of user device.\",\n       \"attack_vectors\": [\n        \"Log access\"\n      ],\n      \"required_capabilities\": \"The attacker needs to be privileged\"\n    },\n     {\n      \"cve_id\": \"CVE-2022-23425\",\n      \"relevance\": \"RELATED\",\n      \"root_cause\": \"Improper input validation in Exynos baseband\",\n      \"weaknesses\": [\n        \"Improper input validation\"\n      ],\n       \"impact\": \"Attackers can send arbitrary NAS signaling messages with fake base station.\",\n      \"attack_vectors\": [\n        \"Fake base station\"\n      ],\n       \"required_capabilities\": \"The attacker needs to be in a position to create a fake base station\"\n    },\n    {\n      \"cve_id\": \"CVE-2022-23427\",\n       \"relevance\": \"RELATED\",\n       \"root_cause\": \"PendingIntent hijacking vulnerability in SettingsReceiver\",\n      \"weaknesses\": [\n        \"PendingIntent hijacking\"\n      ],\n       \"impact\": \"Local attackers to access media files without permission via implicit Intent.\",\n      \"attack_vectors\": [\n        \"Implicit Intent\"\n      ],\n       \"required_capabilities\": \"Local access to the device\"\n    },\n    {\n      \"cve_id\": \"CVE-2022-23426\",\n       \"relevance\": \"RELATED\",\n      \"root_cause\": \"PendingIntent hijacking vulnerability in DeX Home, DeX for PC and Accessibility\",\n      \"weaknesses\": [\n        \"PendingIntent hijacking\"\n      ],\n       \"impact\": \"Attackers to access files with system privilege.\",\n      \"attack_vectors\": [\n        \"PendingIntent\"\n      ],\n      \"required_capabilities\": \"Local access to the device\"\n    },\n     {\n      \"cve_id\": \"CVE-2022-23428\",\n       \"relevance\": \"RELATED\",\n      \"root_cause\": \"Unprotected dynamic receiver in Telecom\",\n       \"weaknesses\": [\n         \"Unprotected dynamic receiver\"\n      ],\n       \"impact\": \"Untrusted applications can launch arbitrary activity.\",\n      \"attack_vectors\": [\n         \"Dynamic receiver\",\n         \"untrusted application\"\n      ],\n      \"required_capabilities\": \"Local access to the device\"\n    },\n    {\n      \"cve_id\": \"CVE-2022-23429\",\n      \"relevance\": \"RELATED\",\n       \"root_cause\": \"Improper boundary check in audio hal service\",\n      \"weaknesses\": [\n         \"Improper boundary check\"\n      ],\n       \"impact\": \"Attackers to read invalid memory and it leads to application crash.\",\n      \"attack_vectors\": [\n        \"Hal service\"\n      ],\n       \"required_capabilities\": \"Local access to the device\"\n    },\n     {\n      \"cve_id\": \"CVE-2022-23431\",\n       \"relevance\": \"RELATED\",\n       \"root_cause\": \"Improper boundary check in RPMB ldfw\",\n      \"weaknesses\": [\n         \"Improper boundary check\"\n      ],\n      \"impact\": \"Allows arbitrary memory write and code execution.\",\n      \"attack_vectors\": [\n          \"RPMB ldfw\"\n      ],\n      \"required_capabilities\":\"Local access to the device with ability to interact with RPMB ldfw\"\n    },\n     {\n      \"cve_id\": \"CVE-2022-23432\",\n        \"relevance\": \"RELATED\",\n       \"root_cause\": \"Improper input validation in SMC_SRPMB_WSM handler of RPMB ldfw\",\n      \"weaknesses\": [\n        \"Improper input validation\"\n      ],\n       \"impact\": \"Allows arbitrary memory write and code execution.\",\n      \"attack_vectors\": [\n         \"SMC_SRPMB_WSM handler\"\n      ],\n        \"required_capabilities\":\"Local access to the device with ability to interact with RPMB ldfw\"\n    },\n      {\n        \"cve_id\":\"CVE-2022-23994\",\n        \"relevance\": \"RELATED\",\n         \"root_cause\":\"Improper access control vulnerability in StBedtimeModeReceiver\",\n         \"weaknesses\": [\n            \"Improper access control\"\n         ],\n        \"impact\":\"Allows untrusted applications to change bedtime mode without a proper permission\",\n        \"attack_vectors\":[\n           \"Application\",\n           \"Wear OS\"\n        ],\n         \"required_capabilities\":\"Local access to the device and ability to install an application\"\n    },\n    {\n        \"cve_id\":\"CVE-2022-23995\",\n        \"relevance\":\"RELATED\",\n        \"root_cause\":\"Unprotected component vulnerability in StBedtimeModeAlarmReceiver\",\n         \"weaknesses\": [\n           \"Unprotected component\"\n         ],\n        \"impact\":\"Allows untrusted applications to change bedtime mode without a proper permission.\",\n        \"attack_vectors\":[\n           \"Application\",\n           \"Wear OS\"\n        ],\n        \"required_capabilities\":\"Local access to the device and ability to install an application\"\n    },\n     {\n        \"cve_id\":\"CVE-2022-23996\",\n        \"relevance\":\"RELATED\",\n         \"root_cause\":\"Unprotected component vulnerability in StTheaterModeReceiver\",\n         \"weaknesses\": [\n           \"Unprotected component\"\n         ],\n        \"impact\":\"Allows untrusted applications to enable bedtime mode without a proper permission.\",\n         \"attack_vectors\":[\n             \"Application\",\n             \"Wear OS\"\n         ],\n         \"required_capabilities\":\"Local access to the device and ability to install an application\"\n     },\n     {\n        \"cve_id\":\"CVE-2022-23997\",\n        \"relevance\":\"RELATED\",\n         \"root_cause\":\"Unprotected component vulnerability in StTheaterModeDurationAlarmReceiver\",\n         \"weaknesses\": [\n           \"Unprotected component\"\n         ],\n        \"impact\":\"Allows untrusted applications to disable theater mode without a proper permission.\",\n          \"attack_vectors\":[\n              \"Application\",\n              \"Wear OS\"\n          ],\n        \"required_capabilities\":\"Local access to the device and ability to install an application\"\n    },\n     {\n        \"cve_id\":\"CVE-2022-23999\",\n        \"relevance\":\"RELATED\",\n         \"root_cause\":\"PendingIntent hijacking vulnerability in SettingsReceiver\",\n         \"weaknesses\": [\n            \"PendingIntent hijacking\"\n         ],\n         \"impact\": \"Local attackers to access media files without permission via implicit Intent.\",\n        \"attack_vectors\": [\n            \"Implicit intent\"\n         ],\n          \"required_capabilities\":\"Local access to the device\"\n    },\n    {\n         \"cve_id\":\"CVE-2022-24000\",\n         \"relevance\":\"RELATED\",\n         \"root_cause\":\"PendingIntent hijacking vulnerability in SettingsReceiver\",\n          \"weaknesses\": [\n              \"PendingIntent hijacking\"\n          ],\n         \"impact\": \"Local attackers to access media files without permission via implicit Intent.\",\n        \"attack_vectors\": [\n            \"Implicit intent\"\n         ],\n          \"required_capabilities\":\"Local access to the device\"\n    },\n     {\n      \"cve_id\": \"CVE-2022-22263\",\n      \"relevance\": \"RELATED\",\n       \"root_cause\": \"Unprotected dynamic receiver in SecSettings\",\n      \"weaknesses\": [\n        \"Unprotected dynamic receiver\"\n      ],\n       \"impact\": \"Allows untrusted applications to launch arbitrary activity.\",\n      \"attack_vectors\": [\n        \"Dynamic receiver\",\n        \"Application\"\n      ],\n       \"required_capabilities\": \"Local access to the device and ability to install an app\"\n    },\n     {\n      \"cve_id\": \"CVE-2022-22264\",\n       \"relevance\": \"RELATED\",\n      \"root_cause\": \"Improper sanitization of incoming intent in Dressroom\",\n       \"weaknesses\": [\n        \"Improper sanitization of incoming intent\"\n       ],\n       \"impact\": \"Allows local attackers to read and write arbitrary files without permission.\",\n      \"attack_vectors\": [\n        \"Incoming intent\"\n      ],\n        \"required_capabilities\": \"Local access to the device\"\n    },\n     {\n      \"cve_id\": \"CVE-2022-22265\",\n        \"relevance\": \"RELATED\",\n      \"root_cause\": \"Improper check or handling of exceptional conditions in NPU driver\",\n        \"weaknesses\": [\n            \"Improper check of exceptional conditions\",\n            \"Use-After-Free\"\n        ],\n      \"impact\": \"Allows arbitrary memory write and code execution.\",\n      \"attack_vectors\": [\n          \"NPU driver\"\n      ],\n        \"required_capabilities\": \"Local access to the device with ability to interact with NPU driver\"\n    },\n    {\n      \"cve_id\": \"CVE-2022-22266\",\n      \"relevance\": \"RELATED\",\n        \"root_cause\": \"Unprotected WifiEvaluationService in TencentWifiSecurity application\",\n      \"weaknesses\": [\n         \"Unprotected service\",\n         \"Information exposure\"\n      ],\n      \"impact\": \"Allows untrusted applications to get WiFi information without proper permission.\",\n      \"attack_vectors\": [\n        \"Application\"\n      ],\n      \"required_capabilities\": \"Local access to the device and ability to install an app\"\n    },\n    {\n      \"cve_id\": \"CVE-2022-22267\",\n        \"relevance\": \"RELATED\",\n      \"root_cause\": \"Implicit Intent hijacking vulnerability in ActivityMetricsLogger\",\n       \"weaknesses\": [\n           \"Implicit Intent hijacking\"\n      ],\n        \"impact\": \"Allows attackers to get running application information.\",\n      \"attack_vectors\": [\n        \"Implicit Intent\"\n      ],\n        \"required_capabilities\":\"Local access to the device\"\n    },\n     {\n        \"cve_id\":\"CVE-2022-22268\",\n          \"relevance\": \"RELATED\",\n          \"root_cause\": \"Incorrect implementation of Knox Guard\",\n          \"weaknesses\": [\n            \"Incorrect implementation\"\n         ],\n          \"impact\":\"Allows physically proximate attackers to temporary unlock the Knox Guard via Samsung DeX mode.\",\n        \"attack_vectors\":[\n           \"Samsung Dex\"\n        ],\n        \"required_capabilities\":\"Physical access to the device\"\n     },\n     {\n        \"cve_id\":\"CVE-2022-22269\",\n         \"relevance\": \"RELATED\",\n          \"root_cause\": \"Keeping sensitive data in unprotected BluetoothSettingsProvider\",\n           \"weaknesses\": [\n               \"Information Exposure\"\n           ],\n           \"impact\":\"Allows untrusted applications to get a local Bluetooth MAC address.\",\n         \"attack_vectors\": [\n           \"BluetoothSettingsProvider\"\n         ],\n          \"required_capabilities\":\"Local access to the device and ability to install an app\"\n     },\n      {\n         \"cve_id\":\"CVE-2022-22270\",\n         \"relevance\":\"RELATED\",\n          \"root_cause\":\"Implicit Intent hijacking vulnerability in Dialer\",\n          \"weaknesses\": [\n               \"Implicit Intent hijacking\"\n           ],\n           \"impact\":\"Allows unprivileged applications to access contact information.\",\n         \"attack_vectors\": [\n             \"Implicit Intent\"\n         ],\n         \"required_capabilities\":\"Local access to the device and ability to install an app\"\n      },\n      {\n         \"cve_id\":\"CVE-2022-22271\",\n          \"relevance\":\"RELATED\",\n         \"root_cause\":\"Missing input validation before memory copy in TIMA trustlet\",\n           \"weaknesses\": [\n              \"Missing input validation\"\n          ],\n         \"impact\":\"Allows attackers to copy data from arbitrary memory.\",\n        \"attack_vectors\": [\n           \"TIMA trustlet\"\n        ],\n          \"required_capabilities\":\"Local access to the device and ability to interact with TIMA trustlet\"\n      },\n     {\n       \"cve_id\":\"CVE-2022-22272\",\n         \"relevance\":\"RELATED\",\n        \"root_cause\":\"Improper authorization in TelephonyManager\",\n          \"weaknesses\":[\n             \"Improper authorization\"\n          ],\n          \"impact\":\"Allows attackers to get IMSI without READ_PRIVILEGED_PERMISSION\",\n         \"attack_vectors\":[\n            \"TelephonyManager\"\n         ],\n         \"required_capabilities\":\"Local access to the device and ability to install an app\"\n      }\n  ]\n}\n```\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 779 | Logging of Excessive Data | Base | Allowed | sparse | 0.303 |\n| 2 | 213 | Exposure of Sensitive Information Due to Incompatible Policies | Base | Allowed | sparse | 0.161 |\n| 3 | 532 | Insertion of Sensitive Information into Log File | Base | Allowed | sparse | 0.149 |\n| 4 | 285 | Improper Authorization | Class | Discouraged | sparse | 0.145 |\n| 5 | 926 | Improper Export of Android Application Components | Variant | Allowed | sparse | 0.136 |\n| 6 | 1295 | Debug Messages Revealing Unnecessary Information | Base | Allowed | dense | 0.537 |\n| 7 | 927 | Use of Implicit Intent for Sensitive Communication | Variant | Allowed | graph | 0.002 |\n| 8 | 303 | Incorrect Implementation of Authentication Algorithm | Base | Allowed | sparse | 0.133 |\n| 9 | 287 | Improper Authentication | Class | Discouraged | sparse | 0.133 |\n| 10 | 1285 | Improper Validation of Specified Index, Position, or Offset in Input | Base | Allowed | sparse | 0.132 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-779: Logging of Excessive Data\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product logs too much information, making log files hard to process and possibly hindering recovery efforts or forensic analysis after an attack.\n\n### Extended Description\nWhile logging is a good practice in general, and very high levels of logging are appropriate for debugging stages of development, too much logging in a production environment might hinder a system administrator's ability to detect anomalous conditions. This can provide cover for an attacker while attempting to penetrate a system, clutter the audit trail for forensic analysis, or make it more difficult to debug problems in a production environment.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-400\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2007-0421:** server records a large amount of data to the server log when it receives malformed headers\n- **CVE-2002-1154:** chain: application does not restrict access to front-end for updates, which allows attacker to fill the error log\n\n\n\n\n## CWE-213: Exposure of Sensitive Information Due to Incompatible Policies\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed.\n\n### Extended Description\n\n\nWhen handling information, the developer must consider whether the information is regarded as sensitive by different stakeholders, such as users or administrators. Each stakeholder effectively has its own intended security policy that the product is expected to uphold. When a developer does not treat that information as sensitive, this can introduce a vulnerability that violates the expectations of the product's users.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-200\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** This entry is being considered for deprecation. It overlaps many other entries related to information exposures. It might not be essential to preserve this entry, since other key stakeholder policies are covered elsewhere, e.g. personal privacy leaks (CWE-359) and system-level exposures that are important to system administrators (CWE-497).\n\n**[Theoretical]** In vulnerability theory terms, this covers cases in which the developer's Intended Policy allows the information to be made available, but the information might be in violation of a Universal Policy in which the product's administrator should have control over which information is considered sensitive and therefore should not be exposed.\n\n\n\n### Observed Examples\n- **CVE-2002-1725:** Script calls phpinfo()\n- **CVE-2004-0033:** Script calls phpinfo()\n- **CVE-2003-1181:** Script calls phpinfo()\n\n\n\n\n## CWE-532: Insertion of Sensitive Information into Log File\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product writes sensitive information to a log file.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-538\nChildOf -> CWE-200\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2017-9615:** verbose logging stores admin credentials in a world-readable log file\n- **CVE-2018-1999036:** SSH password for private key stored in build log\n\n\n\n\n## CWE-285: Improper Authorization\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n### Extended Description\n\n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\nWhen access control checks are not applied consistently - or not at all - users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposures, denial of service, and arbitrary code execution.\n\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-284\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Look at CWE-285's children and consider mapping to CWEs such as CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-732: Incorrect Permission Assignment for Critical Resource, or others.\n**Reasons:**\n- Abstraction\n**Suggested Alternatives:**\n- CWE-862: Missing Authorization\n- CWE-863: Incorrect Authorization\n- CWE-732: Incorrect Permission Assignment for Critical Resource\n\n\n\n### Observed Examples\n- **CVE-2022-24730:** Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information\n- **CVE-2009-3168:** Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.\n- **CVE-2009-2960:** Web application does not restrict access to admin scripts, allowing authenticated users to modify passwords of other users.\n\n\n\n\n## CWE-926: Improper Export of Android Application Components\n**Abstraction:** Variant\n**Status:** Incomplete\n\n### Description\nThe Android application exports a component for use by other applications, but does not properly restrict which applications can launch the component or access the data it contains.\n\n### Extended Description\n\n\nThe attacks and consequences of improperly exporting a component may depend on the exported component:\n\n\n  - If access to an exported Activity is not restricted, any application will be able to launch the activity. This may allow a malicious application to gain access to sensitive information, modify the internal state of the application, or trick a user into interacting with the victim application while believing they are still interacting with the malicious application.\n\n  - If access to an exported Service is not restricted, any application may start and bind to the Service. Depending on the exposed functionality, this may allow a malicious application to perform unauthorized actions, gain access to sensitive information, or corrupt the internal state of the application.\n\n  - If access to a Content Provider is not restricted to only the expected applications, then malicious applications might be able to access the sensitive data. Note that in Android before 4.2, the Content Provider is automatically exported unless it has been explicitly declared as NOT exported.\n\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-285\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n\n\n\n## CWE-1295: Debug Messages Revealing Unnecessary Information\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.\n\n### Extended Description\n\n\nDebug messages are messages that help troubleshoot an issue by revealing the internal state of the system. For example, debug data in design can be exposed through internal memory array dumps or boot logs through interfaces like UART via TAP commands, scan chain, etc. Thus, the more information contained in a debug message, the easier it is to debug. However, there is also the risk of revealing information that could help an attacker either decipher a vulnerability, and/or gain a better understanding of the system. Thus, this extra information could lower the \"security by obscurity\" factor. While \"security by obscurity\" alone is insufficient, it can help as a part of \"Defense-in-depth\". \n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-200\nPeerOf -> CWE-209\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2021-25476:** Digital Rights Management (DRM) capability for mobile platform leaks pointer information, simplifying ASLR bypass\n- **CVE-2020-24491:** Processor generates debug message that contains sensitive information (\"addresses of memory transactions\").\n- **CVE-2017-18326:** modem debug messages include cryptographic keys\n\n\n\n\n## CWE-927: Use of Implicit Intent for Sensitive Communication\n**Abstraction:** Variant\n**Status:** Incomplete\n\n### Description\nThe Android application uses an implicit intent for transmitting sensitive data to other applications.\n\n### Extended Description\n\n\nSince an implicit intent does not specify a particular application to receive the data, any application can process the intent by using an Intent Filter for that intent. This can allow untrusted applications to obtain sensitive data. There are two variations on the standard broadcast intent, ordered and sticky.\n\n\nOrdered broadcast intents are delivered to a series of registered receivers in order of priority as declared by the Receivers. A malicious receiver can give itself a high priority and cause a denial of service by stopping the broadcast from propagating further down the chain. There is also the possibility of malicious data modification, as a receiver may also alter the data within the Intent before passing it on to the next receiver. The downstream components have no way of asserting that the data has not been altered earlier in the chain.\n\n\nSticky broadcast intents remain accessible after the initial broadcast. An old sticky intent will be broadcast again to any new receivers that register for it in the future, greatly increasing the chances of information exposure over time. Also, sticky broadcasts cannot be protected by permissions that may apply to other kinds of intents.\n\n\nIn addition, any broadcast intent may include a URI that references data that the receiving component does not normally have the privileges to access. The sender of the intent can include special privileges that grant the receiver read or write access to the specific URI included in the intent. A malicious receiver that intercepts this intent will also gain those privileges and be able to read or write the resource at the specified URI.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-668\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2022-4903:** An Android application does not use FLAG_IMMUTABLE when creating a PendingIntent.\n\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n### Extended Description\nThis incorrect implementation may allow authentication to be bypassed.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2003-0750:** Conditional should have been an 'or' not an 'and'.\n\n\n\n\n## CWE-287: Improper Authentication\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nWhen an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nauthentification: An alternate term is \"authentification\", which appears to be most commonly used by people from non-English-speaking countries.\nAuthN: \"AuthN\" is typically used as an abbreviation of \"authentication\" within the web application security community. It is also distinct from \"AuthZ,\" which is an abbreviation of \"authorization.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\nAuthC: \"AuthC\" is used as an abbreviation of \"authentication,\" but it appears to used less frequently than \"AuthN.\"\n\n### Relationships\nChildOf -> CWE-284\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.\n**Reasons:**\n- Frequent Misuse\n**Suggested Alternatives:**\n- CWE-1390: Weak Authentication\n- CWE-306: Missing Authentication for Critical Function\n\n\n### Additional Notes\n**[Relationship]** This can be resultant from SQL injection vulnerabilities and other issues.\n\n**[Maintenance]** The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions.\n\n\n\n### Observed Examples\n- **CVE-2022-35248:** Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication\n- **CVE-2022-36436:** Python-based authentication proxy does not enforce password authentication during the initial handshake, allowing the client to bypass authentication by specifying a 'None' authentication type.\n- **CVE-2022-30034:** Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).\n\n\n\n\n## CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.\n\n### Extended Description\n\n\nOften, indexable resources such as memory buffers or files can be accessed using a specific position, index, or offset, such as an index for an array or a position for a file. When untrusted input is not properly validated before it is used as an index, attackers could access (or attempt to access) unauthorized portions of these resources. This could be used to cause buffer overflows, excessive resource allocation, or trigger unexpected failures. \n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-20\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** This entry is still under development and will continue to see updates and content improvements.\n\n\n\n### Observed Examples\n- **CVE-2005-0369:** large ID in packet used as array index\n- **CVE-2001-1009:** negative array index as argument to POP LIST command\n\n",
  "keyphrases": {},
  "timestamp": "2025-03-31 13:42:23",
  "cve_id": "unknown",
  "result_count": 10,
  "results": [
    {
      "cwe_id": "668",
      "name": "Exposure of Resource to Wrong Sphere",
      "type": "Class",
      "score": 0.7600080753896099
    },
    {
      "cwe_id": "203",
      "name": "Observable Discrepancy",
      "type": "Base",
      "score": 0.7594205520229985
    },
    {
      "cwe_id": "345",
      "name": "Insufficient Verification of Data Authenticity",
      "type": "Class",
      "score": 0.7577411629496402
    },
    {
      "cwe_id": "754",
      "name": "Improper Check for Unusual or Exceptional Conditions",
      "type": "Class",
      "score": 0.7569398441826785
    },
    {
      "cwe_id": "538",
      "name": "Insertion of Sensitive Information into Externally-Accessible File or Directory",
      "type": "Base",
      "score": 0.7536686789721226
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.7483647492759447
    },
    {
      "cwe_id": "755",
      "name": "Improper Handling of Exceptional Conditions",
      "type": "Class",
      "score": 0.7446252523510576
    },
    {
      "cwe_id": "807",
      "name": "Reliance on Untrusted Inputs in a Security Decision",
      "type": "Base",
      "score": 0.7432950659088718
    },
    {
      "cwe_id": "212",
      "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
      "type": "Base",
      "score": 0.7425946705924897
    },
    {
      "cwe_id": "226",
      "name": "Sensitive Information in Resource Not Removed Before Reuse",
      "type": "Base",
      "score": 0.7425284304442555
    }
  ]
}