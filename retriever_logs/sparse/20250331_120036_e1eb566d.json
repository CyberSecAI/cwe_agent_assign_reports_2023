{
  "retriever": "sparse",
  "query": "## Vulnerability Description\nThe PROFINET (PNIO) stack, when integrated with the Interniche IP stack, **improperly handles internal resources** for TCP segments where the minimum TCP-Header length is less than defined. This could allow an attacker to create a denial of service condition for TCP services on affected devices by sending specially crafted TCP segments.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **improperly handles internal resources**\n- **impact:** denial of service\n- **vector:** specially crafted TCP segments\n- **attacker:** attacker\n- **product:** PROFINET (PNIO) stack\n\n## CVE Reference Links Content Summary\n```\n{\n  \"vulnerability_details\": {\n    \"root_cause\": \"The PROFINET (PNIO) stack, when integrated with the Interniche IP stack, improperly handles internal resources for TCP segments where the minimum TCP-Header length is less than defined.\",\n    \"weaknesses\": [\n      \"Improper handling of TCP segments with short headers leading to resource exhaustion.\"\n    ],\n    \"impact\": \"An attacker can cause a denial of service condition for TCP services on affected devices by sending specially crafted TCP segments.\",\n    \"attack_vectors\": [\n      \"Sending specially crafted TCP segments over the network.\"\n    ],\n    \"attacker_capabilities\": \"An attacker with network access to the affected devices can send the crafted TCP segments.\"\n  },\n  \"affected_products\": [\n    {\n      \"name\": \"SIMATIC CFU DIQ (6ES7655-5PX31-1XX0)\",\n      \"versions\": \"All versions < V2.0.0\",\n      \"remediation\": \"Update to V2.0.0 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC CFU PA (6ES7655-5PX11-0XX0)\",\n      \"versions\": \"All versions < V2.0.0\",\n      \"remediation\": \"Update to V2.0.0 or later version\"\n    },\n      {\n      \"name\": \"SIMATIC ET200ecoPN, AI 8xRTD/TC, M12-L (6ES7144-6JF00-0BB0)\",\n      \"versions\": \"All versions >= V5.1.1 < V5.1.2\",\n       \"remediation\": \"Update to V5.1.2 or later version\"\n    },\n    {\n       \"name\": \"SIMATIC ET200ecoPN, CM 4x IO-Link, M12-L (6ES7148-6JE00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1\",\n        \"remediation\": \"No fix planned\"\n     },\n    {\n        \"name\": \"SIMATIC ET200ecoPN, CM 8x IO-Link, M12-L (6ES7148-6JG00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n        \"name\":\"SIMATIC ET200ecoPN, CM 8x IO-Link, M12-L (6ES7148-6JJ00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1\",\n         \"remediation\": \"No fix planned\"\n    },\n      {\n       \"name\": \"SIMATIC ET200ecoPN, DI 8x24VDC, M12-L (6ES7141-6BG00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1 < V5.1.2\",\n        \"remediation\": \"Update to V5.1.2 or later version\"\n    },\n    {\n        \"name\": \"SIMATIC ET200ecoPN, DI 16x24VDC, M12-L (6ES7141-6BH00-0BB0)\",\n        \"versions\":\"All versions >= V5.1.1 < V5.1.2\",\n        \"remediation\": \"Update to V5.1.2 or later version\"\n     },\n      {\n        \"name\": \"SIMATIC ET200ecoPN, DIQ 16x24VDC/2A, M12-L (6ES7143-6BH00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1 < V5.1.3\",\n        \"remediation\": \"Update to V5.1.3 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC ET200ecoPN, DQ 8x24VDC/0,5A, M12-L (6ES7142-6BG00-0BB0)\",\n       \"versions\": \"All versions >= V5.1.1 < V5.1.2\",\n        \"remediation\": \"Update to V5.1.2 or later version\"\n    },\n    {\n       \"name\": \"SIMATIC ET200ecoPN, DQ 8x24VDC/2A, M12-L (6ES7142-6BR00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1 < V5.1.2\",\n       \"remediation\":\"Update to V5.1.2 or later version\"\n     },\n     {\n       \"name\": \"SIMATIC ET 200AL IM 157-1 PN (6ES7157-1AB00-0AB0)\",\n        \"versions\": \"All versions\",\n        \"remediation\": \"No fix planned\"\n     },\n    {\n        \"name\": \"SIMATIC ET 200MP IM 155-5 PN HF (6ES7155-5AA00-0AC0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n     },\n     {\n      \"name\": \"SIPLUS ET 200MP IM 155-5 PN HF (6AG1155-5AA00-2AC0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n     },\n     {\n        \"name\": \"SIPLUS ET 200MP IM 155-5 PN HF (6AG1155-5AA00-7AC0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n      \"name\":\"SIPLUS ET 200MP IM 155-5 PN HF T1 RAIL (6AG2155-5AA00-1AC0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n      \"remediation\": \"No fix planned\"\n    },\n    {\n       \"name\": \"SIMATIC ET 200pro IM 154-8 PN/DP CPU (6ES7154-8AB01-0AB0)\",\n        \"versions\": \"All versions < V3.2.19\",\n       \"remediation\": \"Update to V3.2.19 or later version\"\n     },\n     {\n        \"name\":\"SIMATIC ET 200pro IM 154-8F PN/DP CPU (6ES7154-8FB01-0AB0)\",\n        \"versions\": \"All versions < V3.2.19\",\n        \"remediation\": \"Update to V3.2.19 or later version\"\n     },\n     {\n      \"name\": \"SIMATIC ET 200pro IM 154-8FX PN/DP CPU (6ES7154-8FX00-0AB0)\",\n      \"versions\": \"All versions < V3.2.19\",\n       \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC ET 200S IM 151-8 PN/DP CPU (6ES7151-8AB01-0AB0)\",\n      \"versions\": \"All versions < V3.2.19\",\n      \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC ET 200S IM 151-8F PN/DP CPU (6ES7151-8FB01-0AB0)\",\n      \"versions\": \"All versions < V3.2.19\",\n      \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC ET 200SP IM 155-6 MF HF (6ES7155-6MU00-0CN0)\",\n      \"versions\": \"All versions\",\n        \"remediation\": \"No fix planned\"\n    },\n     {\n        \"name\": \"SIMATIC ET 200SP IM 155-6 PN HA (incl. SIPLUS variants)\",\n        \"versions\":\"All versions\",\n        \"remediation\": \"No fix planned\"\n    },\n       {\n        \"name\": \"SIMATIC ET 200SP IM 155-6 PN HF (6ES7155-6AU00-0CN0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\":\"No fix planned\"\n    },\n    {\n        \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF (6AG1155-6AU00-4CN0)\",\n        \"versions\":\"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n       \"name\":\"SIPLUS ET 200SP IM 155-6 PN HF (6AG1155-6AU00-2CN0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n       \"remediation\": \"No fix planned\"\n     },\n    {\n      \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF T1 RAIL (6AG2155-6AU00-1CN0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n    },\n      {\n       \"name\": \"SIMATIC ET 200SP IM 155-6 PN/2 HF (6ES7155-6AU01-0CN0)\",\n        \"versions\":\"All versions >= V4.2.0\",\n       \"remediation\": \"No fix planned\"\n    },\n     {\n        \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF (6AG1155-6AU01-2CN0)\",\n        \"versions\":\"All versions >= V4.2.0\",\n         \"remediation\": \"No fix planned\"\n    },\n    {\n        \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF (6AG1155-6AU01-7CN0)\",\n        \"versions\":\"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n      \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF T1 RAIL (6AG2155-6AU01-1CN0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n       \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF TX RAIL (6AG2155-6AU01-4CN0)\",\n      \"versions\": \"All versions >= V4.2.0\",\n      \"remediation\":\"No fix planned\"\n     },\n    {\n      \"name\":\"SIMATIC ET 200SP IM 155-6 PN/3 HF (6ES7155-6AU30-0CN0)\",\n      \"versions\": \"All versions >= V4.2.0\",\n      \"remediation\":\"No fix planned\"\n    },\n    {\n      \"name\":\"SIMATIC PN/MF Coupler (6ES7158-3MU10-0XA0)\",\n        \"versions\": \"All versions\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n      \"name\": \"SIMATIC PN/PN Coupler (6ES7158-3AD10-0XA0)\",\n       \"versions\": \"All versions >= 4.2\",\n        \"remediation\":\"No fix planned\"\n     },\n     {\n      \"name\":\"SIMATIC S7-300 CPU 314C-2 PN/DP (6ES7314-6EH04-0AB0)\",\n       \"versions\": \"All versions < V3.3.19\",\n        \"remediation\": \"Update to V3.3.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC S7-300 CPU 315-2 PN/DP (6ES7315-2EH14-0AB0)\",\n      \"versions\": \"All versions < V3.2.19\",\n       \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC S7-300 CPU 315F-2 PN/DP (6ES7315-2FJ14-0AB0)\",\n      \"versions\": \"All versions < V3.2.19\",\n       \"remediation\":\"Update to V3.2.19 or later version\"\n     },\n     {\n      \"name\": \"SIMATIC S7-300 CPU 315T-3 PN/DP (6ES7315-7TJ10-0AB0)\",\n      \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\":\"SIMATIC S7-300 CPU 317-2 PN/DP (6ES7317-2EK14-0AB0)\",\n      \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n      {\n      \"name\": \"SIMATIC S7-300 CPU 317F-2 PN/DP (6ES7317-2FK14-0AB0)\",\n      \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n        \"name\":\"SIMATIC S7-300 CPU 317T-3 PN/DP (6ES7317-7TK10-0AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n        \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\":\"SIMATIC S7-300 CPU 317TF-3 PN/DP (6ES7317-7UL10-0AB0)\",\n       \"versions\":\"All versions < V3.2.19\",\n      \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n      {\n      \"name\": \"SIMATIC S7-300 CPU 319-3 PN/DP (6ES7318-3EL01-0AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC S7-300 CPU 319F-3 PN/DP (6ES7318-3FL01-0AB0)\",\n        \"versions\": \"All versions < V3.2.19\",\n        \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC S7-400 CPU 412-2 PN V7 (6ES7412-2EK07-0AB0)\",\n      \"versions\":\"All versions\",\n      \"remediation\":\"No fix planned\"\n    },\n     {\n      \"name\":\"SIMATIC S7-400 CPU 414-3 PN/DP V7 (6ES7414-3EM07-0AB0)\",\n       \"versions\": \"All versions\",\n       \"remediation\": \"No fix planned\"\n    },\n    {\n      \"name\":\"SIMATIC S7-400 CPU 414F-3 PN/DP V7 (6ES7414-3FM07-0AB0)\",\n       \"versions\":\"All versions\",\n       \"remediation\": \"No fix planned\"\n    },\n    {\n     \"name\": \"SIMATIC S7-400 CPU 416-3 PN/DP V7 (6ES7416-3ES07-0AB0)\",\n        \"versions\":\"All versions\",\n         \"remediation\":\"No fix planned\"\n    },\n     {\n      \"name\": \"SIMATIC S7-400 CPU 416F-3 PN/DP V7 (6ES7416-3FS07-0AB0)\",\n       \"versions\":\"All versions\",\n       \"remediation\":\"No fix planned\"\n    },\n    {\n      \"name\":\"SIMATIC S7-400 H V6 CPU family (incl. SIPLUS variants)\",\n       \"versions\":\"All versions < V6.0.10\",\n        \"remediation\":\"Update to V6.0.10 or later version\"\n    },\n     {\n       \"name\": \"SIMATIC S7-410 V8 CPU family (incl. SIPLUS variants)\",\n       \"versions\": \"All versions < V8.2.3\",\n        \"remediation\":\"Update to V8.2.3 or later version\"\n    },\n      {\n       \"name\":\"SIMATIC S7-410 V10 CPU family (incl. SIPLUS variants)\",\n        \"versions\":\"All versions < V10.1.1\",\n       \"remediation\": \"Update to V10.1.1 or later version\"\n    },\n    {\n       \"name\": \"SIMATIC S7-1500 CPU family (incl. related ET200 CPUs and SIPLUS variants)\",\n        \"versions\":\"All versions < V2.0.0\",\n        \"remediation\":\"Update to V2.0.0 or later version\"\n    },\n    {\n      \"name\":\"SIMATIC TDC CP51M1\",\n        \"versions\":\"All versions < V1.1.10\",\n      \"remediation\":\"Update to V1.1.10 or later version\"\n    },\n      {\n      \"name\":\"SIMATIC TDC CPU555\",\n       \"versions\": \"All versions < V1.2.1\",\n       \"remediation\":\"Update to V1.2.1 or later version\"\n    },\n    {\n       \"name\":\"SIMATIC WinAC RTX 2010 (6ES7671-0RC08-0YA0)\",\n      \"versions\":\"All versions\",\n      \"remediation\":\"No fix planned\"\n    },\n    {\n      \"name\":\"SIMATIC WinAC RTX F 2010 (6ES7671-1RC08-0YA0)\",\n      \"versions\":\"All versions\",\n       \"remediation\":\"No fix planned\"\n    },\n     {\n       \"name\":\"SINAMICS DCM\",\n       \"versions\":\"All versions < V1.5 SP1 with Ethernet interface\",\n       \"remediation\":\"Update to V1.5 SP1 or later version\"\n    },\n     {\n      \"name\":\"SINAMICS G110M\",\n      \"versions\":\"All versions < V4.7.14 with Ethernet interface\",\n        \"remediation\":\"Update to V4.7.14 or later version\"\n    },\n     {\n       \"name\":\"SINAMICS G115D\",\n       \"versions\":\"All versions < V4.7.14 with Ethernet interface\",\n       \"remediation\":\"Update to V4.7.14 or later version\"\n     },\n    {\n       \"name\": \"SINAMICS G120 (incl. SIPLUS variants)\",\n        \"versions\":\"All versions < V4.7 SP14 with Ethernet interface\",\n       \"remediation\":\"Update to V4.7 SP14 or later version\"\n    },\n    {\n      \"name\": \"SINAMICS G130\",\n        \"versions\":\"All versions < V5.2.3.13\",\n        \"remediation\":\"Update to V5.2.3.13 or later version\"\n    },\n    {\n      \"name\":\"SINAMICS G150\",\n      \"versions\":\"All versions < V5.2.3.13\",\n       \"remediation\":\"Update to V5.2.3.13 or later version\"\n    },\n    {\n        \"name\": \"SINAMICS S110\",\n        \"versions\": \"All versions with Ethernet interface\",\n         \"remediation\":\"No fix planned\"\n    },\n     {\n      \"name\":\"SINAMICS S120 (incl. SIPLUS variants)\",\n       \"versions\":\"All versions < V5.2 SP3 HF13\",\n        \"remediation\":\"Update to V5.2 SP3 HF13 or later version\"\n    },\n    {\n       \"name\":\"SINAMICS S150\",\n      \"versions\": \"All versions < V5.2.3.13\",\n      \"remediation\":\"Update to V5.2.3.13 or later version\"\n    },\n    {\n      \"name\":\"SINAMICS S210 (6SL5...)\",\n      \"versions\":\"All versions < V5.2 SP3 HF18\",\n        \"remediation\":\"Update to V5.2 SP3 HF18 or later version\"\n    },\n    {\n      \"name\":\"SINAMICS V90\",\n      \"versions\":\"All versions < V1.04.04 with Ethernet interface\",\n       \"remediation\": \"Update to V1.04.04 or later version\"\n    },\n    {\n      \"name\": \"SIPLUS ET 200S IM 151-8 PN/DP CPU (6AG1151-8AB01-7AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n       \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n        \"name\": \"SIPLUS ET 200S IM 151-8F PN/DP CPU (6AG1151-8FB01-2AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n       \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n     {\n      \"name\": \"SIPLUS HCS4200 CIM4210 (6BK1942-1AA00-0AA0)\",\n       \"versions\":\"All versions\",\n        \"remediation\":\"No fix planned\"\n    },\n     {\n        \"name\":\"SIPLUS HCS4200 CIM4210C (6BK1942-1AA00-0AA1)\",\n        \"versions\":\"All versions\",\n       \"remediation\":\"No fix planned\"\n     },\n    {\n      \"name\": \"SIPLUS HCS4300 CIM4310 (6BK1943-1AA00-0AA0)\",\n        \"versions\":\"All versions\",\n        \"remediation\":\"No fix planned\"\n    },\n      {\n        \"name\":\"SIPLUS NET PN/PN Coupler (6AG2158-3AD10-4XA0)\",\n        \"versions\":\"All versions >= 4.2\",\n       \"remediation\":\"No fix planned\"\n     },\n     {\n      \"name\":\"SIPLUS S7-300 CPU 314C-2 PN/DP (6AG1314-6EH04-7AB0)\",\n      \"versions\":\"All versions < V3.3.19\",\n      \"remediation\":\"Update to V3.3.19 or later version\"\n    },\n    {\n        \"name\":\"SIPLUS S7-300 CPU 315-2 PN/DP (6AG1315-2EH14-7AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n       \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n       \"name\": \"SIPLUS S7-300 CPU 315F-2 PN/DP (6AG1315-2FJ14-2AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n       \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\":\"SIPLUS S7-300 CPU 317-2 PN/DP (6AG1317-2EK14-7AB0)\",\n       \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\":\"SIPLUS S7-300 CPU 317F-2 PN/DP (6AG1317-2FK14-2AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n     {\n        \"name\":\"SIPLUS S7-400 CPU 414-3 PN/DP V7 (6AG1414-3EM07-7AB0)\",\n        \"versions\":\"All versions\",\n        \"remediation\":\"No fix planned\"\n    },\n    {\n       \"name\":\"SIPLUS S7-400 CPU 416-3 PN/DP V7 (6AG1416-3ES07-7AB0)\",\n        \"versions\":\"All versions\",\n        \"remediation\":\"No fix planned\"\n    }\n  ],\n  \"workarounds\": [\n    \"Limit access to port 102/tcp to trusted users and systems only.\"\n  ],\n    \"cvss_v3.1_base_score\": \"5.3\",\n    \"cvss_v3.1_vector\": \"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P/RL:O/RC:C\",\n    \"cwe\": \"CWE-400: Uncontrolled Resource Consumption\"\n}\n```\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 400 | Uncontrolled Resource Consumption | Class | Discouraged | sparse | 0.372 |\n| 2 | 1284 | Improper Validation of Specified Quantity in Input | Base | Allowed | sparse | 0.315 |\n| 3 | 789 | Memory Allocation with Excessive Size Value | Variant | Allowed | sparse | 0.299 |\n| 4 | 502 | Deserialization of Untrusted Data | Base | Allowed | sparse | 0.289 |\n| 5 | 120 | Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') | Base | Allowed-with-Review | sparse | 0.289 |\n| 6 | 1331 | Improper Isolation of Shared Resources in Network On Chip (NoC) | Base | Allowed | dense | 0.492 |\n| 7 | 410 | Insufficient Resource Pool | Base | Allowed | graph | 0.003 |\n| 8 | 401 | Missing Release of Memory after Effective Lifetime | Variant | Allowed | sparse | 0.286 |\n| 9 | 20 | Improper Input Validation | Class | Discouraged | sparse | 0.284 |\n| 10 | 835 | Loop with Unreachable Exit Condition ('Infinite Loop') | Base | Allowed | sparse | 0.283 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-400: Uncontrolled Resource Consumption\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.\n\n### Extended Description\n\n\nLimited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the product, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system.\n\n\nThere are at least three distinct scenarios which can commonly lead to resource exhaustion:\n\n\n  - Lack of throttling for the number of allocated resources\n\n  - Losing all references to a resource before reaching the shutdown stage\n\n  - Not closing/returning a resource after processing\n\nResource exhaustion problems are often result due to an incorrect implementation of the following situations:\n\n  - Error conditions and other exceptional circumstances.\n\n  - Confusion over which part of the program is responsible for releasing the resource.\n\n\n\n### Alternative Terms\nResource Exhaustion\n\n### Relationships\nChildOf -> CWE-664\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** \"Resource consumption\" could be interpreted as a consequence instead of an insecure behavior, so this entry is being considered for modification. It appears to be referenced too frequently when more precise mappings are available. Some of its children, such as CWE-771, might be better considered as a chain.\n\n**[Theoretical]** Vulnerability theory is largely about how behaviors and resources interact. \"Resource exhaustion\" can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect the underlying weaknesses that enable these attacks (or consequences) to take place.\n\n**[Other]** \n\nDatabase queries that take a long time to process are good DoS targets. An attacker would have to write a few lines of Perl code to generate enough traffic to exceed the site's ability to keep up. This would effectively prevent authorized users from using the site at all. Resources can be exploited simply by ensuring that the target machine must do much more work and consume more resources in order to service a request than the attacker must do to initiate a request.\n\n\nA prime example of this can be found in old switches that were vulnerable to \"macof\" attacks (so named for a tool developed by Dugsong). These attacks flooded a switch with random IP and MAC address combinations, therefore exhausting the switch's cache, which held the information of which port corresponded to which MAC addresses. Once this cache was exhausted, the switch would fail in an insecure way and would begin to act simply as a hub, broadcasting all traffic on all ports and allowing for basic sniffing attacks.\n\n\n**[Maintenance]** The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions.\n\n\n\n### Observed Examples\n- **CVE-2022-21668:** Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n- **CVE-2020-7218:** Go-based workload orchestrator does not limit resource usage with unauthenticated connections, allowing a DoS by flooding the service\n- **CVE-2020-3566:** Resource exhaustion in distributed OS because of \"insufficient\" IGMP queue management, as exploited in the wild per CISA KEV.\n\n\n\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.\n\n### Extended Description\n\n\nSpecified quantities include size, length, frequency, price, rate, number of operations, time, and others. Code may rely on specified quantities to allocate resources, perform calculations, control iteration, etc. When the quantity is not properly validated, then attackers can specify malicious quantities to cause excessive resource allocation, trigger unexpected failures, enable buffer overflows, etc.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-20\nChildOf -> CWE-20\nCanPrecede -> CWE-789\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** This entry is still under development and will continue to see updates and content improvements.\n\n\n\n### Observed Examples\n- **CVE-2022-21668:** Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n- **CVE-2008-1440:** lack of validation of length field leads to infinite loop\n- **CVE-2008-2374:** lack of validation of string length fields allows memory consumption or buffer over-read\n\n\n\n\n## CWE-789: Memory Allocation with Excessive Size Value\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nStack Exhaustion: When a weakness allocates excessive memory on the stack, it is often described as \"stack exhaustion,\" which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 and/or CWE-1325.\n\n### Relationships\nChildOf -> CWE-770\nCanPrecede -> CWE-476\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** This weakness can be closely associated with integer overflows (CWE-190). Integer overflow attacks would concentrate on providing an extremely large number that triggers an overflow that causes less memory to be allocated than expected. By providing a large value that does not trigger an integer overflow, the attacker could still cause excessive amounts of memory to be allocated.\n\n**[Applicable Platform]** \n\nUncontrolled memory allocation is possible in many languages, such as dynamic array allocation in perl or initial size parameters in Collections in Java. However, languages like C and C++ where programmers have the power to more directly control memory management will be more susceptible.\n\n\n\n\n### Observed Examples\n- **CVE-2022-21668:** Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n- **CVE-2010-3701:** program uses ::alloca() for encoding messages, but large messages trigger segfault\n- **CVE-2008-1708:** memory consumption and daemon exit by specifying a large value in a length field\n\n\n\n\n## CWE-502: Deserialization of Untrusted Data\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nMarshaling, Unmarshaling: Marshaling and unmarshaling are effectively synonyms for serialization and deserialization, respectively.\nPickling, Unpickling: In Python, the \"pickle\" functionality is used to perform serialization and deserialization.\nPHP Object Injection: Some PHP application researchers use this term when attacking unsafe use of the unserialize() function; but it is also used for CWE-915.\n\n### Relationships\nChildOf -> CWE-913\nChildOf -> CWE-913\nPeerOf -> CWE-915\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** The relationships between CWE-502 and CWE-915 need further exploration. CWE-915 is more narrowly scoped to object modification, and is not necessarily used for deserialization.\n\n\n\n### Observed Examples\n- **CVE-2019-12799:** chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183)\n- **CVE-2015-8103:** Deserialization issue in commonly-used Java library allows remote execution.\n- **CVE-2015-4852:** Deserialization issue in commonly-used Java library allows remote execution.\n\n\n\n\n## CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.\n\n### Extended Description\nA buffer overflow condition exists when a product attempts to put more data in a buffer than it can hold, or when it attempts to put data in a memory area outside of the boundaries of a buffer. The simplest type of error, and the most common cause of buffer overflows, is the \"classic\" case in which the product copies the buffer without restricting how much is copied. Other variants exist, but the existence of a classic overflow strongly suggests that the programmer is not considering even the most basic of security protections.\n\n### Alternative Terms\nClassic Buffer Overflow: This term was frequently used by vulnerability researchers during approximately 1995 to 2005 to differentiate buffer copies without length checks (which had been known about for decades) from other emerging weaknesses that still involved invalid accesses of buffers, as vulnerability researchers began to develop advanced exploitation techniques.\nUnbounded Transfer\n\n### Relationships\nChildOf -> CWE-119\nChildOf -> CWE-119\nChildOf -> CWE-119\nChildOf -> CWE-119\nCanPrecede -> CWE-123\nChildOf -> CWE-20\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.\n**Comments:** If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Relationship]** At the code level, stack-based and heap-based overflows do not differ significantly, so there usually is not a need to distinguish them. From the attacker perspective, they can be quite different, since different techniques are required to exploit them.\n\n**[Terminology]** Many issues that are now called \"buffer overflows\" are substantively different than the \"classic\" overflow, including entirely different bug types that rely on overflow exploit techniques, such as integer signedness errors, integer overflows, and format string bugs. This imprecise terminology can make it difficult to determine which variant is being reported.\n\n\n\n### Observed Examples\n- **CVE-2000-1094:** buffer overflow using command with long argument\n- **CVE-1999-0046:** buffer overflow in local program using long environment variable\n- **CVE-2002-1337:** buffer overflow in comment characters, when product increments a counter for a \">\" but does not decrement for \"<\"\n\n\n\n\n## CWE-1331: Improper Isolation of Shared Resources in Network On Chip (NoC)\n**Abstraction:** Base\n**Status:** Stable\n\n### Description\nThe Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.\n\n### Extended Description\n\n\nTypically, network on chips (NoC) have many internal resources that are shared between packets from different trust domains. These resources include internal buffers, crossbars and switches, individual ports, and channels. The sharing of resources causes contention and introduces interference between differently trusted domains, which poses a security threat via a timing channel, allowing attackers to infer data that belongs to a trusted agent. This may also result in introducing network interference, resulting in degraded throughput and latency.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-653\nChildOf -> CWE-668\nPeerOf -> CWE-1189\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2021-33096:** Improper isolation of shared resource in a network-on-chip leads to denial of service\n\n\n\n\n## CWE-410: Insufficient Resource Pool\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.\n\n### Extended Description\nFrequently the consequence is a \"flood\" of connection or sessions.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-664\nCanPrecede -> CWE-400\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1363:** Large number of locks on file exhausts the pool and causes crash.\n- **CVE-2001-1340:** Product supports only one connection and does not disconnect a user who does not provide credentials.\n- **CVE-2002-0406:** Large number of connections without providing credentials allows connection exhaustion.\n\n\n\n\n## CWE-401: Missing Release of Memory after Effective Lifetime\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.\n\n### Extended Description\nThis is often triggered by improper handling of malformed data or unexpectedly interrupted sessions. In some languages, developers are responsible for tracking memory allocation and releasing the memory. If there are no more pointers or references to the memory, then it can no longer be tracked and identified for release.\n\n### Alternative Terms\nMemory Leak\n\n### Relationships\nChildOf -> CWE-772\nChildOf -> CWE-404\nChildOf -> CWE-404\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** This is often a resultant weakness due to improper handling of malformed data or early termination of sessions.\n\n**[Terminology]** \"memory leak\" has sometimes been used to describe other kinds of issues, e.g. for information leaks in which the contents of memory are inadvertently leaked (CVE-2003-0400 is one such example of this terminology conflict).\n\n\n\n### Observed Examples\n- **CVE-2005-3119:** Memory leak because function does not free() an element of a data structure.\n- **CVE-2004-0427:** Memory leak when counter variable is not decremented.\n- **CVE-2002-0574:** chain: reference count is not decremented, leading to memory leak in OS by sending ICMP packets.\n\n\n\n\n## CWE-20: Improper Input Validation\n**Abstraction:** Class\n**Status:** Stable\n\n### Description\nThe product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.\n\n### Extended Description\n\n\nInput validation is a frequently-used technique for checking potentially dangerous inputs in order to ensure that the inputs are safe for processing within the code, or when communicating with other components. When software does not validate input properly, an attacker is able to craft the input in a form that is not expected by the rest of the application. This will lead to parts of the system receiving unintended input, which may result in altered control flow, arbitrary control of a resource, or arbitrary code execution.\n\n\nInput validation is not the only technique for processing input, however. Other techniques attempt to transform potentially-dangerous input into something safe, such as filtering (CWE-790) - which attempts to remove dangerous inputs - or encoding/escaping (CWE-116), which attempts to ensure that the input is not misinterpreted when it is included in output to another component. Other techniques exist as well (see CWE-138 for more examples.)\n\n\nInput validation can be applied to:\n\n\n  - raw data - strings, numbers, parameters, file contents, etc.\n\n  - metadata - information about the raw data, such as headers or size\n\nData can be simple or structured. Structured data can be composed of many nested layers, composed of combinations of metadata and raw data, with other simple or structured data.\n\nMany properties of raw data or metadata may need to be validated upon entry into the code, such as:\n\n\n  - specified quantities such as size, length, frequency, price, rate, number of operations, time, etc.\n\n  - implied or derived quantities, such as the actual size of a file instead of a specified size\n\n  - indexes, offsets, or positions into more complex data structures\n\n  - symbolic keys or other elements into hash tables, associative arrays, etc.\n\n  - well-formedness, i.e. syntactic correctness - compliance with expected syntax \n\n  - lexical token correctness - compliance with rules for what is treated as a token\n\n  - specified or derived type - the actual type of the input (or what the input appears to be)\n\n  - consistency - between individual data elements, between raw data and metadata, between references, etc.\n\n  - conformance to domain-specific rules, e.g. business logic \n\n  - equivalence - ensuring that equivalent inputs are treated the same\n\n  - authenticity, ownership, or other attestations about the input, e.g. a cryptographic signature to prove the source of the data\n\nImplied or derived properties of data must often be calculated or inferred by the code itself. Errors in deriving properties may be considered a contributing factor to improper input validation. \n\nNote that \"input validation\" has very different meanings to different people, or within different classification schemes. Caution must be used when referencing this CWE entry or mapping to it. For example, some weaknesses might involve inadvertently giving control to an attacker over an input when they should not be able to provide an input at all, but sometimes this is referred to as input validation.\n\n\nFinally, it is important to emphasize that the distinctions between input validation and output escaping are often blurred, and developers must be careful to understand the difference, including how input validation is not always sufficient to prevent vulnerabilities, especially when less stringent data types must be supported, such as free-form text. Consider a SQL injection scenario in which a person's last name is inserted into a query. The name \"O'Reilly\" would likely pass the validation step since it is a common last name in the English language. However, this valid name cannot be directly inserted into the database because it contains the \"'\" apostrophe character, which would need to be escaped or otherwise transformed. In this case, removing the apostrophe might reduce the risk of SQL injection, but it would produce incorrect behavior because the wrong name would be recorded.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-707\nPeerOf -> CWE-345\nCanPrecede -> CWE-22\nCanPrecede -> CWE-41\nCanPrecede -> CWE-74\nCanPrecede -> CWE-119\nCanPrecede -> CWE-770\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).\n**Reasons:**\n- Frequent Misuse\n**Suggested Alternatives:**\n- CWE-1284: Specified Quantity\n- CWE-1285: Specified Index, Position, or Offset\n- CWE-1286: Syntactic Correctness\n- CWE-1287: Specified Type\n- CWE-1288: Consistency within Input\n- CWE-1289: Unsafe Equivalence\n- CWE-116: Improper Encoding or Escaping of Output\n\n\n### Additional Notes\n**[Relationship]** \n\nCWE-116 and CWE-20 have a close association because, depending on the nature of the structured message, proper input validation can indirectly prevent special characters from changing the meaning of a structured message. For example, by validating that a numeric ID field should only contain the 0-9 characters, the programmer effectively prevents injection attacks.\n\n\n**[Maintenance]** As of 2020, this entry is used more often than preferred, and it is a source of frequent confusion. It is being actively modified for CWE 4.1 and subsequent versions.\n\n**[Maintenance]** Concepts such as validation, data transformation, and neutralization are being refined, so relationships between CWE-20 and other entries such as CWE-707 may change in future versions, along with an update to the Vulnerability Theory document.\n\n**[Maintenance]** Input validation - whether missing or incorrect - is such an essential and widespread part of secure development that it is implicit in many different weaknesses. Traditionally, problems such as buffer overflows and XSS have been classified as input validation problems by many security professionals. However, input validation is not necessarily the only protection mechanism available for avoiding such problems, and in some cases it is not even sufficient. The CWE team has begun capturing these subtleties in chains within the Research Concepts view (CWE-1000), but more work is needed.\n\n**[Terminology]** \n\nThe \"input validation\" term is extremely common, but it is used in many different ways. In some cases its usage can obscure the real underlying weakness or otherwise hide chaining and composite relationships.\n\n\nSome people use \"input validation\" as a general term that covers many different neutralization techniques for ensuring that input is appropriate, such as filtering, canonicalization, and escaping. Others use the term in a more narrow context to simply mean \"checking if an input conforms to expectations without changing it.\" CWE uses this more narrow interpretation.\n\n\n\n\n### Observed Examples\n- **CVE-2024-37032:** Large language model (LLM) management tool does not validate the format of a digest value (CWE-1287) from a private, untrusted model registry, enabling relative path traversal (CWE-23), a.k.a. Probllama\n- **CVE-2022-45918:** Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)\n- **CVE-2021-30860:** Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV.\n\n\n\n\n## CWE-835: Loop with Unreachable Exit Condition ('Infinite Loop')\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-834\nChildOf -> CWE-834\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2022-22224:** Chain: an operating system does not properly process malformed Open Shortest Path First (OSPF) Type/Length/Value Identifiers (TLV) (CWE-703), which can cause the process to enter an infinite loop (CWE-835)\n- **CVE-2022-25304:** A Python machine communication platform did not account for receiving a malformed packet with a null size, causing the receiving function to never update the message buffer and be caught in an infinite loop.\n- **CVE-2011-1027:** Chain: off-by-one error (CWE-193) leads to infinite loop (CWE-835) using invalid hex-encoded characters.\n\n",
  "keyphrases": {
    "base_query": "## Vulnerability Description\nThe PROFINET (PNIO) stack, when integrated with the Interniche IP stack, **improperly handles internal resources** for TCP segments where the minimum TCP-Header length is less than defined. This could allow an attacker to create a denial of service condition for TCP services on affected devices by sending specially crafted TCP segments.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **improperly handles internal resources**\n- **impact:** denial of service\n- **vector:** specially crafted TCP segments\n- **attacker:** attacker\n- **product:** PROFINET (PNIO) stack\n\n## CVE Reference Links Content Summary\n```\n{\n  \"vulnerability_details\": {\n    \"root_cause\": \"The PROFINET (PNIO) stack, when integrated with the Interniche IP stack, improperly handles internal resources for TCP segments where the minimum TCP-Header length is less than defined.\",\n    \"weaknesses\": [\n      \"Improper handling of TCP segments with short headers leading to resource exhaustion.\"\n    ],\n    \"impact\": \"An attacker can cause a denial of service condition for TCP services on affected devices by sending specially crafted TCP segments.\",\n    \"attack_vectors\": [\n      \"Sending specially crafted TCP segments over the network.\"\n    ],\n    \"attacker_capabilities\": \"An attacker with network access to the affected devices can send the crafted TCP segments.\"\n  },\n  \"affected_products\": [\n    {\n      \"name\": \"SIMATIC CFU DIQ (6ES7655-5PX31-1XX0)\",\n      \"versions\": \"All versions < V2.0.0\",\n      \"remediation\": \"Update to V2.0.0 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC CFU PA (6ES7655-5PX11-0XX0)\",\n      \"versions\": \"All versions < V2.0.0\",\n      \"remediation\": \"Update to V2.0.0 or later version\"\n    },\n      {\n      \"name\": \"SIMATIC ET200ecoPN, AI 8xRTD/TC, M12-L (6ES7144-6JF00-0BB0)\",\n      \"versions\": \"All versions >= V5.1.1 < V5.1.2\",\n       \"remediation\": \"Update to V5.1.2 or later version\"\n    },\n    {\n       \"name\": \"SIMATIC ET200ecoPN, CM 4x IO-Link, M12-L (6ES7148-6JE00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1\",\n        \"remediation\": \"No fix planned\"\n     },\n    {\n        \"name\": \"SIMATIC ET200ecoPN, CM 8x IO-Link, M12-L (6ES7148-6JG00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n        \"name\":\"SIMATIC ET200ecoPN, CM 8x IO-Link, M12-L (6ES7148-6JJ00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1\",\n         \"remediation\": \"No fix planned\"\n    },\n      {\n       \"name\": \"SIMATIC ET200ecoPN, DI 8x24VDC, M12-L (6ES7141-6BG00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1 < V5.1.2\",\n        \"remediation\": \"Update to V5.1.2 or later version\"\n    },\n    {\n        \"name\": \"SIMATIC ET200ecoPN, DI 16x24VDC, M12-L (6ES7141-6BH00-0BB0)\",\n        \"versions\":\"All versions >= V5.1.1 < V5.1.2\",\n        \"remediation\": \"Update to V5.1.2 or later version\"\n     },\n      {\n        \"name\": \"SIMATIC ET200ecoPN, DIQ 16x24VDC/2A, M12-L (6ES7143-6BH00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1 < V5.1.3\",\n        \"remediation\": \"Update to V5.1.3 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC ET200ecoPN, DQ 8x24VDC/0,5A, M12-L (6ES7142-6BG00-0BB0)\",\n       \"versions\": \"All versions >= V5.1.1 < V5.1.2\",\n        \"remediation\": \"Update to V5.1.2 or later version\"\n    },\n    {\n       \"name\": \"SIMATIC ET200ecoPN, DQ 8x24VDC/2A, M12-L (6ES7142-6BR00-0BB0)\",\n        \"versions\": \"All versions >= V5.1.1 < V5.1.2\",\n       \"remediation\":\"Update to V5.1.2 or later version\"\n     },\n     {\n       \"name\": \"SIMATIC ET 200AL IM 157-1 PN (6ES7157-1AB00-0AB0)\",\n        \"versions\": \"All versions\",\n        \"remediation\": \"No fix planned\"\n     },\n    {\n        \"name\": \"SIMATIC ET 200MP IM 155-5 PN HF (6ES7155-5AA00-0AC0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n     },\n     {\n      \"name\": \"SIPLUS ET 200MP IM 155-5 PN HF (6AG1155-5AA00-2AC0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n     },\n     {\n        \"name\": \"SIPLUS ET 200MP IM 155-5 PN HF (6AG1155-5AA00-7AC0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n      \"name\":\"SIPLUS ET 200MP IM 155-5 PN HF T1 RAIL (6AG2155-5AA00-1AC0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n      \"remediation\": \"No fix planned\"\n    },\n    {\n       \"name\": \"SIMATIC ET 200pro IM 154-8 PN/DP CPU (6ES7154-8AB01-0AB0)\",\n        \"versions\": \"All versions < V3.2.19\",\n       \"remediation\": \"Update to V3.2.19 or later version\"\n     },\n     {\n        \"name\":\"SIMATIC ET 200pro IM 154-8F PN/DP CPU (6ES7154-8FB01-0AB0)\",\n        \"versions\": \"All versions < V3.2.19\",\n        \"remediation\": \"Update to V3.2.19 or later version\"\n     },\n     {\n      \"name\": \"SIMATIC ET 200pro IM 154-8FX PN/DP CPU (6ES7154-8FX00-0AB0)\",\n      \"versions\": \"All versions < V3.2.19\",\n       \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC ET 200S IM 151-8 PN/DP CPU (6ES7151-8AB01-0AB0)\",\n      \"versions\": \"All versions < V3.2.19\",\n      \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC ET 200S IM 151-8F PN/DP CPU (6ES7151-8FB01-0AB0)\",\n      \"versions\": \"All versions < V3.2.19\",\n      \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC ET 200SP IM 155-6 MF HF (6ES7155-6MU00-0CN0)\",\n      \"versions\": \"All versions\",\n        \"remediation\": \"No fix planned\"\n    },\n     {\n        \"name\": \"SIMATIC ET 200SP IM 155-6 PN HA (incl. SIPLUS variants)\",\n        \"versions\":\"All versions\",\n        \"remediation\": \"No fix planned\"\n    },\n       {\n        \"name\": \"SIMATIC ET 200SP IM 155-6 PN HF (6ES7155-6AU00-0CN0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\":\"No fix planned\"\n    },\n    {\n        \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF (6AG1155-6AU00-4CN0)\",\n        \"versions\":\"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n       \"name\":\"SIPLUS ET 200SP IM 155-6 PN HF (6AG1155-6AU00-2CN0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n       \"remediation\": \"No fix planned\"\n     },\n    {\n      \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF T1 RAIL (6AG2155-6AU00-1CN0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n    },\n      {\n       \"name\": \"SIMATIC ET 200SP IM 155-6 PN/2 HF (6ES7155-6AU01-0CN0)\",\n        \"versions\":\"All versions >= V4.2.0\",\n       \"remediation\": \"No fix planned\"\n    },\n     {\n        \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF (6AG1155-6AU01-2CN0)\",\n        \"versions\":\"All versions >= V4.2.0\",\n         \"remediation\": \"No fix planned\"\n    },\n    {\n        \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF (6AG1155-6AU01-7CN0)\",\n        \"versions\":\"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n      \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF T1 RAIL (6AG2155-6AU01-1CN0)\",\n        \"versions\": \"All versions >= V4.2.0\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n       \"name\": \"SIPLUS ET 200SP IM 155-6 PN HF TX RAIL (6AG2155-6AU01-4CN0)\",\n      \"versions\": \"All versions >= V4.2.0\",\n      \"remediation\":\"No fix planned\"\n     },\n    {\n      \"name\":\"SIMATIC ET 200SP IM 155-6 PN/3 HF (6ES7155-6AU30-0CN0)\",\n      \"versions\": \"All versions >= V4.2.0\",\n      \"remediation\":\"No fix planned\"\n    },\n    {\n      \"name\":\"SIMATIC PN/MF Coupler (6ES7158-3MU10-0XA0)\",\n        \"versions\": \"All versions\",\n        \"remediation\": \"No fix planned\"\n    },\n    {\n      \"name\": \"SIMATIC PN/PN Coupler (6ES7158-3AD10-0XA0)\",\n       \"versions\": \"All versions >= 4.2\",\n        \"remediation\":\"No fix planned\"\n     },\n     {\n      \"name\":\"SIMATIC S7-300 CPU 314C-2 PN/DP (6ES7314-6EH04-0AB0)\",\n       \"versions\": \"All versions < V3.3.19\",\n        \"remediation\": \"Update to V3.3.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC S7-300 CPU 315-2 PN/DP (6ES7315-2EH14-0AB0)\",\n      \"versions\": \"All versions < V3.2.19\",\n       \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC S7-300 CPU 315F-2 PN/DP (6ES7315-2FJ14-0AB0)\",\n      \"versions\": \"All versions < V3.2.19\",\n       \"remediation\":\"Update to V3.2.19 or later version\"\n     },\n     {\n      \"name\": \"SIMATIC S7-300 CPU 315T-3 PN/DP (6ES7315-7TJ10-0AB0)\",\n      \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\":\"SIMATIC S7-300 CPU 317-2 PN/DP (6ES7317-2EK14-0AB0)\",\n      \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n      {\n      \"name\": \"SIMATIC S7-300 CPU 317F-2 PN/DP (6ES7317-2FK14-0AB0)\",\n      \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n        \"name\":\"SIMATIC S7-300 CPU 317T-3 PN/DP (6ES7317-7TK10-0AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n        \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\":\"SIMATIC S7-300 CPU 317TF-3 PN/DP (6ES7317-7UL10-0AB0)\",\n       \"versions\":\"All versions < V3.2.19\",\n      \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n      {\n      \"name\": \"SIMATIC S7-300 CPU 319-3 PN/DP (6ES7318-3EL01-0AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC S7-300 CPU 319F-3 PN/DP (6ES7318-3FL01-0AB0)\",\n        \"versions\": \"All versions < V3.2.19\",\n        \"remediation\": \"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\": \"SIMATIC S7-400 CPU 412-2 PN V7 (6ES7412-2EK07-0AB0)\",\n      \"versions\":\"All versions\",\n      \"remediation\":\"No fix planned\"\n    },\n     {\n      \"name\":\"SIMATIC S7-400 CPU 414-3 PN/DP V7 (6ES7414-3EM07-0AB0)\",\n       \"versions\": \"All versions\",\n       \"remediation\": \"No fix planned\"\n    },\n    {\n      \"name\":\"SIMATIC S7-400 CPU 414F-3 PN/DP V7 (6ES7414-3FM07-0AB0)\",\n       \"versions\":\"All versions\",\n       \"remediation\": \"No fix planned\"\n    },\n    {\n     \"name\": \"SIMATIC S7-400 CPU 416-3 PN/DP V7 (6ES7416-3ES07-0AB0)\",\n        \"versions\":\"All versions\",\n         \"remediation\":\"No fix planned\"\n    },\n     {\n      \"name\": \"SIMATIC S7-400 CPU 416F-3 PN/DP V7 (6ES7416-3FS07-0AB0)\",\n       \"versions\":\"All versions\",\n       \"remediation\":\"No fix planned\"\n    },\n    {\n      \"name\":\"SIMATIC S7-400 H V6 CPU family (incl. SIPLUS variants)\",\n       \"versions\":\"All versions < V6.0.10\",\n        \"remediation\":\"Update to V6.0.10 or later version\"\n    },\n     {\n       \"name\": \"SIMATIC S7-410 V8 CPU family (incl. SIPLUS variants)\",\n       \"versions\": \"All versions < V8.2.3\",\n        \"remediation\":\"Update to V8.2.3 or later version\"\n    },\n      {\n       \"name\":\"SIMATIC S7-410 V10 CPU family (incl. SIPLUS variants)\",\n        \"versions\":\"All versions < V10.1.1\",\n       \"remediation\": \"Update to V10.1.1 or later version\"\n    },\n    {\n       \"name\": \"SIMATIC S7-1500 CPU family (incl. related ET200 CPUs and SIPLUS variants)\",\n        \"versions\":\"All versions < V2.0.0\",\n        \"remediation\":\"Update to V2.0.0 or later version\"\n    },\n    {\n      \"name\":\"SIMATIC TDC CP51M1\",\n        \"versions\":\"All versions < V1.1.10\",\n      \"remediation\":\"Update to V1.1.10 or later version\"\n    },\n      {\n      \"name\":\"SIMATIC TDC CPU555\",\n       \"versions\": \"All versions < V1.2.1\",\n       \"remediation\":\"Update to V1.2.1 or later version\"\n    },\n    {\n       \"name\":\"SIMATIC WinAC RTX 2010 (6ES7671-0RC08-0YA0)\",\n      \"versions\":\"All versions\",\n      \"remediation\":\"No fix planned\"\n    },\n    {\n      \"name\":\"SIMATIC WinAC RTX F 2010 (6ES7671-1RC08-0YA0)\",\n      \"versions\":\"All versions\",\n       \"remediation\":\"No fix planned\"\n    },\n     {\n       \"name\":\"SINAMICS DCM\",\n       \"versions\":\"All versions < V1.5 SP1 with Ethernet interface\",\n       \"remediation\":\"Update to V1.5 SP1 or later version\"\n    },\n     {\n      \"name\":\"SINAMICS G110M\",\n      \"versions\":\"All versions < V4.7.14 with Ethernet interface\",\n        \"remediation\":\"Update to V4.7.14 or later version\"\n    },\n     {\n       \"name\":\"SINAMICS G115D\",\n       \"versions\":\"All versions < V4.7.14 with Ethernet interface\",\n       \"remediation\":\"Update to V4.7.14 or later version\"\n     },\n    {\n       \"name\": \"SINAMICS G120 (incl. SIPLUS variants)\",\n        \"versions\":\"All versions < V4.7 SP14 with Ethernet interface\",\n       \"remediation\":\"Update to V4.7 SP14 or later version\"\n    },\n    {\n      \"name\": \"SINAMICS G130\",\n        \"versions\":\"All versions < V5.2.3.13\",\n        \"remediation\":\"Update to V5.2.3.13 or later version\"\n    },\n    {\n      \"name\":\"SINAMICS G150\",\n      \"versions\":\"All versions < V5.2.3.13\",\n       \"remediation\":\"Update to V5.2.3.13 or later version\"\n    },\n    {\n        \"name\": \"SINAMICS S110\",\n        \"versions\": \"All versions with Ethernet interface\",\n         \"remediation\":\"No fix planned\"\n    },\n     {\n      \"name\":\"SINAMICS S120 (incl. SIPLUS variants)\",\n       \"versions\":\"All versions < V5.2 SP3 HF13\",\n        \"remediation\":\"Update to V5.2 SP3 HF13 or later version\"\n    },\n    {\n       \"name\":\"SINAMICS S150\",\n      \"versions\": \"All versions < V5.2.3.13\",\n      \"remediation\":\"Update to V5.2.3.13 or later version\"\n    },\n    {\n      \"name\":\"SINAMICS S210 (6SL5...)\",\n      \"versions\":\"All versions < V5.2 SP3 HF18\",\n        \"remediation\":\"Update to V5.2 SP3 HF18 or later version\"\n    },\n    {\n      \"name\":\"SINAMICS V90\",\n      \"versions\":\"All versions < V1.04.04 with Ethernet interface\",\n       \"remediation\": \"Update to V1.04.04 or later version\"\n    },\n    {\n      \"name\": \"SIPLUS ET 200S IM 151-8 PN/DP CPU (6AG1151-8AB01-7AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n       \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n        \"name\": \"SIPLUS ET 200S IM 151-8F PN/DP CPU (6AG1151-8FB01-2AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n       \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n     {\n      \"name\": \"SIPLUS HCS4200 CIM4210 (6BK1942-1AA00-0AA0)\",\n       \"versions\":\"All versions\",\n        \"remediation\":\"No fix planned\"\n    },\n     {\n        \"name\":\"SIPLUS HCS4200 CIM4210C (6BK1942-1AA00-0AA1)\",\n        \"versions\":\"All versions\",\n       \"remediation\":\"No fix planned\"\n     },\n    {\n      \"name\": \"SIPLUS HCS4300 CIM4310 (6BK1943-1AA00-0AA0)\",\n        \"versions\":\"All versions\",\n        \"remediation\":\"No fix planned\"\n    },\n      {\n        \"name\":\"SIPLUS NET PN/PN Coupler (6AG2158-3AD10-4XA0)\",\n        \"versions\":\"All versions >= 4.2\",\n       \"remediation\":\"No fix planned\"\n     },\n     {\n      \"name\":\"SIPLUS S7-300 CPU 314C-2 PN/DP (6AG1314-6EH04-7AB0)\",\n      \"versions\":\"All versions < V3.3.19\",\n      \"remediation\":\"Update to V3.3.19 or later version\"\n    },\n    {\n        \"name\":\"SIPLUS S7-300 CPU 315-2 PN/DP (6AG1315-2EH14-7AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n       \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n       \"name\": \"SIPLUS S7-300 CPU 315F-2 PN/DP (6AG1315-2FJ14-2AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n       \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\":\"SIPLUS S7-300 CPU 317-2 PN/DP (6AG1317-2EK14-7AB0)\",\n       \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n    {\n      \"name\":\"SIPLUS S7-300 CPU 317F-2 PN/DP (6AG1317-2FK14-2AB0)\",\n        \"versions\":\"All versions < V3.2.19\",\n        \"remediation\":\"Update to V3.2.19 or later version\"\n    },\n     {\n        \"name\":\"SIPLUS S7-400 CPU 414-3 PN/DP V7 (6AG1414-3EM07-7AB0)\",\n        \"versions\":\"All versions\",\n        \"remediation\":\"No fix planned\"\n    },\n    {\n       \"name\":\"SIPLUS S7-400 CPU 416-3 PN/DP V7 (6AG1416-3ES07-7AB0)\",\n        \"versions\":\"All versions\",\n        \"remediation\":\"No fix planned\"\n    }\n  ],\n  \"workarounds\": [\n    \"Limit access to port 102/tcp to trusted users and systems only.\"\n  ],\n    \"cvss_v3.1_base_score\": \"5.3\",\n    \"cvss_v3.1_vector\": \"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P/RL:O/RC:C\",\n    \"cwe\": \"CWE-400: Uncontrolled Resource Consumption\"\n}\n```\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 400 | Uncontrolled Resource Consumption | Class | Discouraged | sparse | 0.372 |\n| 2 | 1284 | Improper Validation of Specified Quantity in Input | Base | Allowed | sparse | 0.315 |\n| 3 | 789 | Memory Allocation with Excessive Size Value | Variant | Allowed | sparse | 0.299 |\n| 4 | 502 | Deserialization of Untrusted Data | Base | Allowed | sparse | 0.289 |\n| 5 | 120 | Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') | Base | Allowed-with-Review | sparse | 0.289 |\n| 6 | 1331 | Improper Isolation of Shared Resources in Network On Chip (NoC) | Base | Allowed | dense | 0.492 |\n| 7 | 410 | Insufficient Resource Pool | Base | Allowed | graph | 0.003 |\n| 8 | 401 | Missing Release of Memory after Effective Lifetime | Variant | Allowed | sparse | 0.286 |\n| 9 | 20 | Improper Input Validation | Class | Discouraged | sparse | 0.284 |\n| 10 | 835 | Loop with Unreachable Exit Condition ('Infinite Loop') | Base | Allowed | sparse | 0.283 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-400: Uncontrolled Resource Consumption\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.\n\n### Extended Description\n\n\nLimited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the product, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system.\n\n\nThere are at least three distinct scenarios which can commonly lead to resource exhaustion:\n\n\n  - Lack of throttling for the number of allocated resources\n\n  - Losing all references to a resource before reaching the shutdown stage\n\n  - Not closing/returning a resource after processing\n\nResource exhaustion problems are often result due to an incorrect implementation of the following situations:\n\n  - Error conditions and other exceptional circumstances.\n\n  - Confusion over which part of the program is responsible for releasing the resource.\n\n\n\n### Alternative Terms\nResource Exhaustion\n\n### Relationships\nChildOf -> CWE-664\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** \"Resource consumption\" could be interpreted as a consequence instead of an insecure behavior, so this entry is being considered for modification. It appears to be referenced too frequently when more precise mappings are available. Some of its children, such as CWE-771, might be better considered as a chain.\n\n**[Theoretical]** Vulnerability theory is largely about how behaviors and resources interact. \"Resource exhaustion\" can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect the underlying weaknesses that enable these attacks (or consequences) to take place.\n\n**[Other]** \n\nDatabase queries that take a long time to process are good DoS targets. An attacker would have to write a few lines of Perl code to generate enough traffic to exceed the site's ability to keep up. This would effectively prevent authorized users from using the site at all. Resources can be exploited simply by ensuring that the target machine must do much more work and consume more resources in order to service a request than the attacker must do to initiate a request.\n\n\nA prime example of this can be found in old switches that were vulnerable to \"macof\" attacks (so named for a tool developed by Dugsong). These attacks flooded a switch with random IP and MAC address combinations, therefore exhausting the switch's cache, which held the information of which port corresponded to which MAC addresses. Once this cache was exhausted, the switch would fail in an insecure way and would begin to act simply as a hub, broadcasting all traffic on all ports and allowing for basic sniffing attacks.\n\n\n**[Maintenance]** The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions.\n\n\n\n### Observed Examples\n- **CVE-2022-21668:** Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n- **CVE-2020-7218:** Go-based workload orchestrator does not limit resource usage with unauthenticated connections, allowing a DoS by flooding the service\n- **CVE-2020-3566:** Resource exhaustion in distributed OS because of \"insufficient\" IGMP queue management, as exploited in the wild per CISA KEV.\n\n\n\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.\n\n### Extended Description\n\n\nSpecified quantities include size, length, frequency, price, rate, number of operations, time, and others. Code may rely on specified quantities to allocate resources, perform calculations, control iteration, etc. When the quantity is not properly validated, then attackers can specify malicious quantities to cause excessive resource allocation, trigger unexpected failures, enable buffer overflows, etc.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-20\nChildOf -> CWE-20\nCanPrecede -> CWE-789\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** This entry is still under development and will continue to see updates and content improvements.\n\n\n\n### Observed Examples\n- **CVE-2022-21668:** Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n- **CVE-2008-1440:** lack of validation of length field leads to infinite loop\n- **CVE-2008-2374:** lack of validation of string length fields allows memory consumption or buffer over-read\n\n\n\n\n## CWE-789: Memory Allocation with Excessive Size Value\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nStack Exhaustion: When a weakness allocates excessive memory on the stack, it is often described as \"stack exhaustion,\" which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 and/or CWE-1325.\n\n### Relationships\nChildOf -> CWE-770\nCanPrecede -> CWE-476\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** This weakness can be closely associated with integer overflows (CWE-190). Integer overflow attacks would concentrate on providing an extremely large number that triggers an overflow that causes less memory to be allocated than expected. By providing a large value that does not trigger an integer overflow, the attacker could still cause excessive amounts of memory to be allocated.\n\n**[Applicable Platform]** \n\nUncontrolled memory allocation is possible in many languages, such as dynamic array allocation in perl or initial size parameters in Collections in Java. However, languages like C and C++ where programmers have the power to more directly control memory management will be more susceptible.\n\n\n\n\n### Observed Examples\n- **CVE-2022-21668:** Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n- **CVE-2010-3701:** program uses ::alloca() for encoding messages, but large messages trigger segfault\n- **CVE-2008-1708:** memory consumption and daemon exit by specifying a large value in a length field\n\n\n\n\n## CWE-502: Deserialization of Untrusted Data\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nMarshaling, Unmarshaling: Marshaling and unmarshaling are effectively synonyms for serialization and deserialization, respectively.\nPickling, Unpickling: In Python, the \"pickle\" functionality is used to perform serialization and deserialization.\nPHP Object Injection: Some PHP application researchers use this term when attacking unsafe use of the unserialize() function; but it is also used for CWE-915.\n\n### Relationships\nChildOf -> CWE-913\nChildOf -> CWE-913\nPeerOf -> CWE-915\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** The relationships between CWE-502 and CWE-915 need further exploration. CWE-915 is more narrowly scoped to object modification, and is not necessarily used for deserialization.\n\n\n\n### Observed Examples\n- **CVE-2019-12799:** chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183)\n- **CVE-2015-8103:** Deserialization issue in commonly-used Java library allows remote execution.\n- **CVE-2015-4852:** Deserialization issue in commonly-used Java library allows remote execution.\n\n\n\n\n## CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.\n\n### Extended Description\nA buffer overflow condition exists when a product attempts to put more data in a buffer than it can hold, or when it attempts to put data in a memory area outside of the boundaries of a buffer. The simplest type of error, and the most common cause of buffer overflows, is the \"classic\" case in which the product copies the buffer without restricting how much is copied. Other variants exist, but the existence of a classic overflow strongly suggests that the programmer is not considering even the most basic of security protections.\n\n### Alternative Terms\nClassic Buffer Overflow: This term was frequently used by vulnerability researchers during approximately 1995 to 2005 to differentiate buffer copies without length checks (which had been known about for decades) from other emerging weaknesses that still involved invalid accesses of buffers, as vulnerability researchers began to develop advanced exploitation techniques.\nUnbounded Transfer\n\n### Relationships\nChildOf -> CWE-119\nChildOf -> CWE-119\nChildOf -> CWE-119\nChildOf -> CWE-119\nCanPrecede -> CWE-123\nChildOf -> CWE-20\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.\n**Comments:** If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Relationship]** At the code level, stack-based and heap-based overflows do not differ significantly, so there usually is not a need to distinguish them. From the attacker perspective, they can be quite different, since different techniques are required to exploit them.\n\n**[Terminology]** Many issues that are now called \"buffer overflows\" are substantively different than the \"classic\" overflow, including entirely different bug types that rely on overflow exploit techniques, such as integer signedness errors, integer overflows, and format string bugs. This imprecise terminology can make it difficult to determine which variant is being reported.\n\n\n\n### Observed Examples\n- **CVE-2000-1094:** buffer overflow using command with long argument\n- **CVE-1999-0046:** buffer overflow in local program using long environment variable\n- **CVE-2002-1337:** buffer overflow in comment characters, when product increments a counter for a \">\" but does not decrement for \"<\"\n\n\n\n\n## CWE-1331: Improper Isolation of Shared Resources in Network On Chip (NoC)\n**Abstraction:** Base\n**Status:** Stable\n\n### Description\nThe Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.\n\n### Extended Description\n\n\nTypically, network on chips (NoC) have many internal resources that are shared between packets from different trust domains. These resources include internal buffers, crossbars and switches, individual ports, and channels. The sharing of resources causes contention and introduces interference between differently trusted domains, which poses a security threat via a timing channel, allowing attackers to infer data that belongs to a trusted agent. This may also result in introducing network interference, resulting in degraded throughput and latency.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-653\nChildOf -> CWE-668\nPeerOf -> CWE-1189\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2021-33096:** Improper isolation of shared resource in a network-on-chip leads to denial of service\n\n\n\n\n## CWE-410: Insufficient Resource Pool\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.\n\n### Extended Description\nFrequently the consequence is a \"flood\" of connection or sessions.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-664\nCanPrecede -> CWE-400\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1363:** Large number of locks on file exhausts the pool and causes crash.\n- **CVE-2001-1340:** Product supports only one connection and does not disconnect a user who does not provide credentials.\n- **CVE-2002-0406:** Large number of connections without providing credentials allows connection exhaustion.\n\n\n\n\n## CWE-401: Missing Release of Memory after Effective Lifetime\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.\n\n### Extended Description\nThis is often triggered by improper handling of malformed data or unexpectedly interrupted sessions. In some languages, developers are responsible for tracking memory allocation and releasing the memory. If there are no more pointers or references to the memory, then it can no longer be tracked and identified for release.\n\n### Alternative Terms\nMemory Leak\n\n### Relationships\nChildOf -> CWE-772\nChildOf -> CWE-404\nChildOf -> CWE-404\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** This is often a resultant weakness due to improper handling of malformed data or early termination of sessions.\n\n**[Terminology]** \"memory leak\" has sometimes been used to describe other kinds of issues, e.g. for information leaks in which the contents of memory are inadvertently leaked (CVE-2003-0400 is one such example of this terminology conflict).\n\n\n\n### Observed Examples\n- **CVE-2005-3119:** Memory leak because function does not free() an element of a data structure.\n- **CVE-2004-0427:** Memory leak when counter variable is not decremented.\n- **CVE-2002-0574:** chain: reference count is not decremented, leading to memory leak in OS by sending ICMP packets.\n\n\n\n\n## CWE-20: Improper Input Validation\n**Abstraction:** Class\n**Status:** Stable\n\n### Description\nThe product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.\n\n### Extended Description\n\n\nInput validation is a frequently-used technique for checking potentially dangerous inputs in order to ensure that the inputs are safe for processing within the code, or when communicating with other components. When software does not validate input properly, an attacker is able to craft the input in a form that is not expected by the rest of the application. This will lead to parts of the system receiving unintended input, which may result in altered control flow, arbitrary control of a resource, or arbitrary code execution.\n\n\nInput validation is not the only technique for processing input, however. Other techniques attempt to transform potentially-dangerous input into something safe, such as filtering (CWE-790) - which attempts to remove dangerous inputs - or encoding/escaping (CWE-116), which attempts to ensure that the input is not misinterpreted when it is included in output to another component. Other techniques exist as well (see CWE-138 for more examples.)\n\n\nInput validation can be applied to:\n\n\n  - raw data - strings, numbers, parameters, file contents, etc.\n\n  - metadata - information about the raw data, such as headers or size\n\nData can be simple or structured. Structured data can be composed of many nested layers, composed of combinations of metadata and raw data, with other simple or structured data.\n\nMany properties of raw data or metadata may need to be validated upon entry into the code, such as:\n\n\n  - specified quantities such as size, length, frequency, price, rate, number of operations, time, etc.\n\n  - implied or derived quantities, such as the actual size of a file instead of a specified size\n\n  - indexes, offsets, or positions into more complex data structures\n\n  - symbolic keys or other elements into hash tables, associative arrays, etc.\n\n  - well-formedness, i.e. syntactic correctness - compliance with expected syntax \n\n  - lexical token correctness - compliance with rules for what is treated as a token\n\n  - specified or derived type - the actual type of the input (or what the input appears to be)\n\n  - consistency - between individual data elements, between raw data and metadata, between references, etc.\n\n  - conformance to domain-specific rules, e.g. business logic \n\n  - equivalence - ensuring that equivalent inputs are treated the same\n\n  - authenticity, ownership, or other attestations about the input, e.g. a cryptographic signature to prove the source of the data\n\nImplied or derived properties of data must often be calculated or inferred by the code itself. Errors in deriving properties may be considered a contributing factor to improper input validation. \n\nNote that \"input validation\" has very different meanings to different people, or within different classification schemes. Caution must be used when referencing this CWE entry or mapping to it. For example, some weaknesses might involve inadvertently giving control to an attacker over an input when they should not be able to provide an input at all, but sometimes this is referred to as input validation.\n\n\nFinally, it is important to emphasize that the distinctions between input validation and output escaping are often blurred, and developers must be careful to understand the difference, including how input validation is not always sufficient to prevent vulnerabilities, especially when less stringent data types must be supported, such as free-form text. Consider a SQL injection scenario in which a person's last name is inserted into a query. The name \"O'Reilly\" would likely pass the validation step since it is a common last name in the English language. However, this valid name cannot be directly inserted into the database because it contains the \"'\" apostrophe character, which would need to be escaped or otherwise transformed. In this case, removing the apostrophe might reduce the risk of SQL injection, but it would produce incorrect behavior because the wrong name would be recorded.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-707\nPeerOf -> CWE-345\nCanPrecede -> CWE-22\nCanPrecede -> CWE-41\nCanPrecede -> CWE-74\nCanPrecede -> CWE-119\nCanPrecede -> CWE-770\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).\n**Reasons:**\n- Frequent Misuse\n**Suggested Alternatives:**\n- CWE-1284: Specified Quantity\n- CWE-1285: Specified Index, Position, or Offset\n- CWE-1286: Syntactic Correctness\n- CWE-1287: Specified Type\n- CWE-1288: Consistency within Input\n- CWE-1289: Unsafe Equivalence\n- CWE-116: Improper Encoding or Escaping of Output\n\n\n### Additional Notes\n**[Relationship]** \n\nCWE-116 and CWE-20 have a close association because, depending on the nature of the structured message, proper input validation can indirectly prevent special characters from changing the meaning of a structured message. For example, by validating that a numeric ID field should only contain the 0-9 characters, the programmer effectively prevents injection attacks.\n\n\n**[Maintenance]** As of 2020, this entry is used more often than preferred, and it is a source of frequent confusion. It is being actively modified for CWE 4.1 and subsequent versions.\n\n**[Maintenance]** Concepts such as validation, data transformation, and neutralization are being refined, so relationships between CWE-20 and other entries such as CWE-707 may change in future versions, along with an update to the Vulnerability Theory document.\n\n**[Maintenance]** Input validation - whether missing or incorrect - is such an essential and widespread part of secure development that it is implicit in many different weaknesses. Traditionally, problems such as buffer overflows and XSS have been classified as input validation problems by many security professionals. However, input validation is not necessarily the only protection mechanism available for avoiding such problems, and in some cases it is not even sufficient. The CWE team has begun capturing these subtleties in chains within the Research Concepts view (CWE-1000), but more work is needed.\n\n**[Terminology]** \n\nThe \"input validation\" term is extremely common, but it is used in many different ways. In some cases its usage can obscure the real underlying weakness or otherwise hide chaining and composite relationships.\n\n\nSome people use \"input validation\" as a general term that covers many different neutralization techniques for ensuring that input is appropriate, such as filtering, canonicalization, and escaping. Others use the term in a more narrow context to simply mean \"checking if an input conforms to expectations without changing it.\" CWE uses this more narrow interpretation.\n\n\n\n\n### Observed Examples\n- **CVE-2024-37032:** Large language model (LLM) management tool does not validate the format of a digest value (CWE-1287) from a private, untrusted model registry, enabling relative path traversal (CWE-23), a.k.a. Probllama\n- **CVE-2022-45918:** Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)\n- **CVE-2021-30860:** Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV.\n\n\n\n\n## CWE-835: Loop with Unreachable Exit Condition ('Infinite Loop')\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-834\nChildOf -> CWE-834\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2022-22224:** Chain: an operating system does not properly process malformed Open Shortest Path First (OSPF) Type/Length/Value Identifiers (TLV) (CWE-703), which can cause the process to enter an infinite loop (CWE-835)\n- **CVE-2022-25304:** A Python machine communication platform did not account for receiving a malformed packet with a null size, causing the receiving function to never update the message buffer and be caught in an infinite loop.\n- **CVE-2011-1027:** Chain: off-by-one error (CWE-193) leads to infinite loop (CWE-835) using invalid hex-encoded characters.\n\n"
  },
  "timestamp": "2025-03-31 12:00:36",
  "cve_id": "unknown",
  "result_count": 5,
  "results": [
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "score": 9666.483108955363,
      "search_source": "unknown"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "score": 9248.725106750633,
      "search_source": "unknown"
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "score": 9086.511235023645,
      "search_source": "unknown"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 8964.421030709802,
      "search_source": "unknown"
    },
    {
      "cwe_id": "116",
      "name": "Improper Encoding or Escaping of Output",
      "score": 8939.11451542875,
      "search_source": "unknown"
    }
  ]
}