{
  "retriever": "sparse",
  "query": "## Vulnerability Description\nAn issue was discovered on Olivetti d-COLOR MF3555 2XD_S000.002.271 devices. The Web Application is affected by Broken Access Control. It does not properly validate requests for access to data and functionality under the /mngset/authset path. By not verifying permissions for access to resources, it allows a potential attacker to view pages that are not allowed.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **broken access control**\n- **impact:** view unauthorized pages\n- **product:** Olivetti d-COLOR MF3555\n- **version:** 2XD_S000.002.271\n- **component:** /mngset/authset path\n\n## CVE Reference Links Content Summary\nBased on the provided content, here's a breakdown of the vulnerability information related to CVE-2022-25342:\n\n**CVE-2022-25342**\n\n*   **Root Cause of Vulnerability:** Improper Access Control. The web application does not properly validate requests for access to data and functionality under the `/mngset/authset` path.\n*   **Weaknesses/Vulnerabilities Present:** Broken access control, insufficient authorization checks. The application allows unauthorized access to restricted resources.\n*   **Impact of Exploitation:** A potential attacker can view pages and modify user details (including passwords) that should be restricted to administrative users. This can lead to privilege escalation where an attacker gains full control of the system by modifying admin user details.\n*  **Attack Vectors:** The vulnerability is exploitable by sending a crafted HTTP GET request to specific endpoints under the `/mngset/authset` path.\n*   **Required Attacker Capabilities/Position:** The attacker needs to be an authenticated user with at least one system administrator permission. The attacker needs to intercept a request from a privileged user and modify it to access administrative panels.\n\n**Summary of Vulnerabilities from the Document (Excluding CVE-2022-25342):**\n\nThe document provides detailed information regarding several CVEs. Here's a summary:\n\n**Stack-based Buffer Overflow:**\n\n*   **CVE-2024-52949 (iptraf-ng):** A stack-based buffer overflow vulnerability in `iptraf-ng` (version 1.2.1) can be exploited by an attacker providing a malicious configuration file through the `-C` argument. This leads to arbitrary code execution with root privileges.\n\n**Plaintext Password Storage:**\n\n*   **CVE-2024-49351 (IBM Workload Scheduler):** Passwords for engine connections are stored in cleartext in the connection properties panel, accessible to authenticated remote administrators which can cause privilege escalation and data breaches.\n*   **CVE-2023-38328 (eGroupWare):** The database password is stored in cleartext accessible to admin users through the setup panel, potentially leading to database data access.\n*    **CVE-2024-31840 (Italtel Embrace):** Plaintext passwords for the email server are displayed within the HTML source code when editing email server configuration.\n\n**Improper Parameter Handling/Open Redirect:**\n*   **CVE-2024-9329 (Eclipse Glassfish):** Improper handling of the `Host` HTTP parameter allows for open redirection to a malicious site which could be used for phishing attacks.\n*   **CVE-2024-43683 (Microchip TP4100):** Open redirect vulnerability occurs due to the lack of proper validation of the Host header.\n*    **CVE-2022-46407 (Ericsson Network Manager):**  Open redirect through the editprofile endpoint.\n\n**Remote Code Execution:**\n\n*   **CVE-2024-9054 (Microchip TP4100):** Remote command execution is possible by uploading a configuration file with malicious bash commands in the \"secret_key\" parameter.\n*  **CVE-2024-31843 (Italtel Embrace):** OS command injection is possible by exploiting a lack of input validation in the `/removeBackup` endpoint.\n*   **CVE-2023-49328 (Wolters Kluwer B.POINT):** Remote code execution vulnerability exists in a server-to-server communication module due to argument injection.\n*   **CVE-2022-47531 (Ericsson EPG):** Missing input validation leading to arbitrary command execution via system CLI.\n*   **CVE-2022-39819 (Nokia 1350 OMS):** OS command injection is possible for authenticated users.\n*  **CVE-2022-39818 (NOKIA NFM-T VM Manager WebUI):** Authenticated users can inject system commands in log.pl using the `cmd` parameter.\n*   **CVE-2022-41763 (NOKIA AMS):** Remote code execution via debugger in `ipAddress` variable, allowing command injection in the PING function.\n*   **CVE-2020-27583 (IBM InfoSphere Information Server):** Remote unauthenticated arbitrary code execution due to deserialization of untrusted data.\n*    **CVE-2022-39815 (Nokia 1350 OMS):**  OS command injection vulnerability with unauthenticated access.\n\n**SQL Injection:**\n\n*   **CVE-2024-7801 (Microchip TP4100):** Unauthenticated SQL injection vulnerability in the `get_chart_data` endpoint through the `channelId` parameter, allowing information extraction.\n*   **CVE-2022-39822 (NOKIA NFM-T VM Manager WebUI):** Authenticated users can inject SQL code in `easy1350.pl` using the `id` and `host` parameters.\n*   **CVE-2022-39817 (Nokia 1350 OMS):** Multiple SQL Injection Vulnerabilities with authenticated access.\n*   **CVE-2019-19986 (Selesta Visual Access Manager):**  SQL injection vulnerability with unauthenticated access.\n*   **CVE-2022-28862 (ARCHIBUS Web Central):** Multiple SQL injection vulnerabilities in workflow execution endpoint, this is fixed in all recent versions.\n\n**Cross-Site Scripting (XSS):**\n\n*   **CVE-2024-5532 (OpenText Operations Agent):** Stored XSS is possible by adding a malicious payload in the CORE\\_ID value of the agent configuration file which results in arbitrary Javascript code execution.\n*   **CVE-2024-43687 (Microchip TP4100):** Stored XSS in the \"Custom Banner\" field.\n*   **CVE-2024-43686 (Microchip TP4100):** Reflected XSS in the `channelId` parameter of the `get_chart_data` endpoint.\n*   **CVE-2024-31847 (Italtel Embrace):** Stored XSS vulnerability through an unvalidated `HTTP/GET` parameter logged in the activity log.\n*   **CVE-2024-28804 (Italtel i-MCS NFV):** Stored XSS through `j_username` parameter in the login endpoint.\n*   **CVE-2024-20906 (Oracle ILOM):** Reflected XSS vulnerability with network access through ICMP.\n*   **CVE-2024-40680 (Fortinet FortiOS):** Stored XSS in replacement messages.\n*   **CVE-2022-45179 (LiveBox Collaboration vDesk):** Stored XSS by injecting arbitrary HTML code in the reminder section title.\n*   **CVE-2022-45176 (LiveBox Collaboration vDesk):** Stored XSS using malicious files in vShare functionality.\n*   **CVE-2022-43675 (NOKIA NFM-T):** Multiple reflected XSS vulnerabilities using GET parameters\n*   **CVE-2022-41762 (NOKIA NFM-T):** Multiple reflected XSS vulnerabilities through various GET parameters.\n*   **CVE-2022-40714 (Nokia 1350 OMS):** Reflected XSS on multiple endpoints.\n*   **CVE-2022-40712 (Nokia 1350 OMS):** Reflected XSS on multiple endpoints.\n*   **CVE-2022-39813 (Italtel NetMatch-S CI):** Reflected and stored XSS via `j_username`, `name` and `actLine` parameters.\n*    **CVE-2022-39810 (WSO2 Enterprise Integrator):** Reflected XSS in the Management Console via the `driver` parameter.\n*   **CVE-2022-39809 (WSO2 Enterprise Integrator):** Reflected XSS in the Management Console via the `name` parameter.\n*   **CVE-2022-45179 (LiveBox Collaboration vDesk):** Reflected XSS using the reminder functionality.\n*   **CVE-2022-28867 (Nokia NetAct):** Stored XSS through modification of the `templateName` parameter.\n*    **CVE-2022-28865 (Nokia NetAct):** Stored XSS with arbitrary uploaded filename.\n*    **CVE-2022-40680 (Fortinet FortiOS):** Stored XSS by injecting malicious code into replacement messages.\n*   **CVE-2022-27880 (F5 Traffix Signal Delivery Controller):** Stored XSS through the \"User Name\" parameter\n*   **CVE-2022-25344 (Olivetti d-COLOR MF3555):** Stored XSS via the `arg01.Hostname` parameter.\n*    **CVE-2021-43080 (Fortinet FortiOS):** Stored XSS using the URI parameter for threat feed IP addresses\n*   **CVE-2021-41555 (ARCHIBUS Web Central):** Multiple stored XSS in `workflow.runWorkflowRule.dwr` (fixed in recent versions).\n*   **CVE-2021-35490 (Thruk):** Stored XSS in a specific parameter.\n*   **CVE-2021-35489 (Thruk):** Reflected XSS via `host` and `service` parameters in `extinfo.cgi`.\n*   **CVE-2021-35488 (Thruk):** Reflected XSS via `host` and `title` parameters in `status.cgi`.\n*   **CVE-2021-29661 (Softing AG OPC Toolbox):** Stored XSS via `ITEMLISTVALUES##ITEMID` parameter.\n*    **CVE-2021-41762 (NOKIA NFM-T Network Element Manager):** Multiple reflected XSS using various GET parameters.\n*   **CVE-2021-26596 (NOKIA NetAct):** Stored XSS through the filename parameter in the Site Configuration Tool section.\n*   **CVE-2021-3314 (Oracle GlassFish Server):** Stored XSS via `logViewer.jsf` (unsupported).\n*   **CVE-2020-17458 (MultiUX):** Stored XSS via multiple parameters in the mailbox creation page.\n*   **CVE-2020-17457 (Fujitsu ServerView Suite iRMC):** Reflected XSS via the `PSCU_FILE_INIT` parameter.\n*   **CVE-2020-35589 (WordPress Plugin Limit Login Attempts Reloaded):** Reflected XSS in the plugin's settings page.\n*   **CVE-2022-29540 (RESI S.p.A):**  Multiple Reflected XSS via various GET parameters.\n*   **CVE-2019-19991 (Selesta Visual Access Manager):**  Multiple reflected XSS on various GET/POST parameters.\n*   **CVE-2019-19990 (Selesta Visual Access Manager):** Multiple stored XSS on various GET/POST parameters.\n*   **CVE-2020-14690 (ORACLE Business Intelligence):** Stored and Reflected XSS through the Analytics Actions component.\n*    **CVE-2019-17405 (NOKIA IMPACT):** Reflected XSS in the manual page of Nokia CDP.\n*    **CVE-2019-19456 (WOWZA Streaming Engine):** Reflected XSS on the server selection box of the login page.\n*   **CVE-2022-26483 (Veritas Operations Manager):** Reflected XSS through the GET parameter\n    \n**Cross-Site Request Forgery (CSRF):**\n\n*   **CVE-2024-43684 (Microchip TP4100):** CSRF vulnerability due to the lack of anti-CSRF tokens.\n*   **CVE-2022-30280 (Nokia NetAct):** CSRF vulnerability which allows creation of arbitrary user accounts through the createuser endpoint.\n*    **CVE-2021-35491 (Wowza Streaming Engine):** CSRF, allowing deletion of users by tricking an admin into visiting a malicious page.\n*   **CVE-2021-29660 (Softing AG OPC Toolbox):**  CSRF allowing password reset by tricking an administrator into visiting a controlled URL.\n*    **CVE-2019-19987 (Selesta Visual Access Manager):**  Multiple CSRF vulnerabilities on the web application without authentication.\n\n**Improper Access Control/Privilege Escalation:**\n\n*   **CVE-2024-31846 (Italtel Embrace):** Improper access control leads to exposure of client data without authentication.\n*    **CVE-2024-28805 (Italtel i-MCS NFV):** Improper access control, with some features accessible by unauthorized roles/unauthenticated users.\n*    **CVE-2022-45180 (LiveBox Collaboration vDesk):** Broken access control to export user information for an authenticated user.\n*    **CVE-2022-45178 (LiveBox Collaboration vDesk):**  Privilege escalation from FGM to GGU user using specific endpoints.\n*   **CVE-2022-45172 (LiveBox Collaboration vDesk):** Improper access control enabling creation and stealing of user accounts including administrator accounts.\n*   **CVE-2022-26062 (Nokia Web Element Manager):** Improper access control allows unprivileged users to execute admin functions by modifying the HTTP response of the login request.\n*   **CVE-2023-39909 (Ericsson Network Manager):** Improper access control allows unauthenticated users to access the NCM application.\n*  **CVE-2022-28866 (Nokia AirFrame BMC):** Improper access control through multiple endpoints, allowing for privilege escalation from an operator to administrator role.\n*  **CVE-2022-39811 (Italtel NetMatch-S CI):** Improper Access control to view unauthorized pages or modify configurations.\n*   **CVE-2021-41554 (ARCHIBUS Web Central):**  Broken access control in multiple endpoints allowing unauthorized modification of users (fixed in recent versions).\n*   **CVE-2021-36200 (Johnson Controls Metasys MREWeb Service):** Unauthenticated access to user enumeration.\n*  **CVE-2020-7573 (Schneider Electric StruxureWare Building Operation WebReports):** Improper access control, with a resource accessible by unauthorized users.\n*   **CVE-2021-28488 (Ericsson Network Manager):** Exposure of user data to other users within the same authorization group.\n*    **CVE-2019-19989 (Selesta Visual Access Manager):** Broken access control with unauthenticated access to various parts of the application\n*   **CVE-2022-45175 (LiveBox Collaboration vDesk):**  Insecure direct object reference in OnlyOffice file caching, allowing unauthorized access.\n*   **CVE-2022-39811 (Italtel NetMatch-S CI):** Multiple improper access control on different endpoints without any authentication.\n\n**Authentication Bypass:**\n\n*   **CVE-2022-45174 (LiveBox Collaboration vDesk):** Bypass of Two-Factor Authentication for SAML Users, using any string as a backup code.\n*   **CVE-2022-45173 (LiveBox Collaboration vDesk):** Two-Factor Authentication bypass by modifying the server response, due to client side validation.\n*   **CVE-2022-45168 (Livebox Collaboration vDesk):** Two-factor authentication bypass by generating backup codes before authenticating with TOTP.\n*  **CVE-2024-34399 (BMC Remedy Mid Tier):** Unauthenticated remote access of any user account without a password (unsupported product).\n\n**Path Traversal:**\n\n*   **CVE-2024-31841 (Italtel Embrace):** Multiple relative path traversal vulnerabilities by manipulating the `filename` parameter, allowing unauthorized file access.\n*  **CVE-2024-28806 (Italtel i-MCS NFV):**  Absolute Path Traversal vulnerability, allowing arbitrary file uploads via the `uploadDir` parameter.\n*    **CVE-2022-41761 (NOKIA NFM-T VM Manager WebUI):** Arbitrary file reading due to absolute path traversal via logfile parameter.\n*   **CVE-2022-41760 (NOKIA NFM-T Network Element Manager):** Relative Path Traversal using the filename parameter.\n*  **CVE-2022-40715 (Nokia 1350 OMS):**  Absolute Path Traversal via the `logfile` parameter\n*    **CVE-2022-40713 (Nokia 1350 OMS):**  Relative Path Traversal via the `file` parameter on multiple endpoints.\n*  **CVE-2022-39812 (Italtel NetMatch-S CI):** Absolute path traversal using the uploadDir parameter.\n*    **CVE-2022-26484 (Veritas Operations Manager):** Absolute path traversal to read arbitrary files via GET request parameters.\n*   **CVE-2021-28485 (Ericsson MSC):** Relative Path Traversal via a request parameter to read files from the system.\n*  **CVE-2020-12081 (FlexNet Publisher):** Arbitrary file reading through full path traversal.\n*   **CVE-2020-9050 (Johnson Controls Metasys MREWeb Service):** Absolute path traversal allows downloading files through the `/MREService/Download.aspx` endpoint without authentication.\n*   **CVE-2019-17406 (NOKIA IMPACT):** Path traversal with arbitrary file saving via the `filename` parameter.\n*    **CVE-2022-41761 (NOKIA NFM-T VM Manager WebUI):**  Absolute path traversal through `logfile` parameter.\n*     **CVE-2019-19993 (Selesta Visual Access Manager):**  Multiple full path disclosure vulnerabilities with unauthenticated access.\n\n**Other vulnerabilities:**\n\n*   **CVE-2024-31845 (Italtel Embrace):** Log forging vulnerability due to improper output neutralization for logs.\n*  **CVE-2024-31844 (Italtel Embrace):** Generation of error messages containing sensitive information like absolute paths of the source code, aiding attackers in subsequent attacks.\n*    **CVE-2024-25007 (Ericsson Network Manager):** CSV Injection through the export function.\n*   **CVE-2024-22063 (ZENIC-ONE ZTE R58):** XLSX Injection in cloned job report generation.\n*   **CVE-2023-50811 (Selesta Visual Access Manager):** Authorization bypass through user controlled key allowing control of many other receptions than the assigned one.\n*    **CVE-2023-26071 (HarpaItalia Mcubo ICT):** User enumeration vulnerability through Observable Response Discrepancy in the login page.\n*   **CVE-2022-45177 (LiveBox Collaboration vDesk):** User enumeration through response discrepancies on multiple endpoints.\n*   **CVE-2022-45171 (Livebox Collaboration vDESK):** Unrestricted file upload which can be used to upload malware.\n*   **CVE-2022-45170 (LiveBox Collaboration vDesk):** Cryptographic issue allowing decryption of files without the correct encryption key.\n*    **CVE-2022-45169 (Livebox Collaboration vDesk):** Open Redirect via push notifications, allowing phishing attacks.\n*   **CVE-2022-46408 (Ericsson Network Manager):** CSV Injection in the Network Connectivity Manager.\n*   **CVE-2022-39821 (Nokia 1350 OMS):** Insertion of sensitive data into world-readable application log files.\n*   **CVE-2022-39820 (NOKIA NFM-T Network Element Manager):** Cleartext credentials in the file system, enabling unauthorized access to the web application.\n*    **CVE-2022-27662 (F5 Traffix Signal Delivery Controller):** Client-side template injection leading to arbitrary code execution by an authenticated user.\n*    **CVE-2021-35492 (Wowza Streaming Engine):** Uncontrolled resource consumption, resulting in a DoS by creating new virtual host logs.\n*   **CVE-2021-31540 (WOWZA Streaming Engine):** Incorrect file permissions on configuration files, allowing any user to read/write.\n*    **CVE-2021-31539 (WOWZA Streaming Engine):** Cleartext password storage in the configuration files.\n*  **CVE-2021-28979 (Thales SafeNet KeySecure Management Console):** Cleartext password storage in HTTP responses.\n*   **CVE-2021-32571 (Ericsson OSS-RC):** Incomplete cleanup leading to storage of passwords in accessible files.\n*  **CVE-2021-32570 (Ericsson Network Manager):**  Exposure of data from log files to unauthorized users.\n*    **CVE-2021-32569 (Ericsson OSS-RC):** Reflected XSS in customer documentation browsing library.\n*    **CVE-2021-28250 (CA eHealth Performance Manager):** Privilege escalation via SUID/GUID file execution.\n*    **CVE-2021-28249 (CA eHealth Performance Manager):** Privilege escalation via dynamically linked shared object library execution as root.\n*  **CVE-2021-28248 (CA eHealth Performance Manager):** Excessive authentication attempts are not restricted allowing for password brute-force attacks.\n*    **CVE-2021-28246 (CA eHealth Performance Manager):** Privilege escalation via dynamically linked shared object library execution as the ehealth user.\n*  **CVE-2021-28250 (CA eHealth Performance Manager):**  Privilege escalation using setuid file execution as the ehealth user.\n*    **CVE-2020-35590 (WordPress Plugin Limit Login Attempts Reloaded):** Rate limit bypass by forging X-Forwarded-For Header.\n*   **CVE-2020-28209 (Schneider Electric StruxureWare):** Unquoted search path allows for privilege escalation by writing malicious files to service subfolders.\n*  **CVE-2020-2505 (QNAP QES):** Type confusion leading to information disclosure.\n*    **CVE-2020-2504 (QNAP QES):** Arbitrary File Download through an escape of the webroot\n*   **CVE-2020-2503 (QNAP QES):** Stored XSS through arbitrary file uploads in File Station.\n*   **CVE-2019-19994 (Selesta Visual Access Manager):** OS command injection with unauthenticated access.\n*   **CVE-2019-19455 (WOWZA Streaming Engine):** Local Privilege Escalation on Linux using the manager files.\n*   **CVE-2019-19454 (WOWZA Streaming Engine):** Arbitrary file download in \"Download Log\" functionality.\n*   **CVE-2020-15794 (Siemens Desigo Insight):** Full path disclosure through error messages.\n*   **CVE-2020-15793 (Siemens Desigo Insight):** Lack of X-Frame-Options header leading to clickjacking vulnerability.\n*   **CVE-2020-15792 (Siemens Desigo Insight):** Blind SQL Injection via ID parameter.\n*   **CVE-2020-2505 (QNAP QES):** Information disclosure using type confusion\n*     **CVE-2019-19992 (Selesta Visual Access Manager):** Arbitrary file reading via the web interface.\n*     **CVE-2019-19988 (Selesta Visual Access Manager):** Arbitrary file writing via the web interface.\n*    **CVE-2021-26597 (NOKIA NetAct):** Unrestricted file upload using the Site Configuration Tool web site.\n*    **CVE-2021-31539 (WOWZA Streaming Engine):** cleartext password stored in `conf/admin.password`\n*    **CVE-2021-31540 (WOWZA Streaming Engine):** incorrect file permissions, which allows any user to read and write configuration files.\n*   **CVE-2019-17403 (NOKIA IMPACT):** Arbitrary file upload vulnerability.\n*  **CVE-2021-28250 (CA eHealth Performance Manager):** Privilege escalation through a setuid file.\n* **CVE-2021-28485 (Ericsson MSC):** Relative path traversal for authenticated users using the SIS web app.\n*   **CVE-2020-28209 (Schneider Electric StruxureWare):** Windows Unquoted search path, that can be exploited by an attacker.\n*    **CVE-2020-14843 (ORACLE Business Intelligence):**  Unrestricted upload of dangerous file types.\n*    **CVE-2020-14842 (ORACLE Business Intelligence):** Stored XSS and Unrestricted file upload.\n*     **CVE-2020-7570 (Schneider Electric StruxureWare Building Operation WebReports):** Stored XSS on WebReport.\n*   **CVE-2020-7571 (Schneider Electric StruxureWare Building Operation WebReports):** Reflected XSS on WebReport.\n*   **CVE-2020-7569 (Schneider Electric StruxureWare Building Operation WebReports):** Unrestricted file upload of dangerous types on WebReports.\n*  **CVE-2020-7572 (Schneider Electric StruxureWare Building Operation WebReports):** Improper restriction of XML External Entity Reference on the server XML parser in WebReports.\n*  **CVE-2020-14843 (ORACLE Business Intelligence):** Arbitrary upload of a file.\n*   **CVE-2020-14842 (ORACLE Business Intelligence):** stored XSS with arbitrary file upload\n*   **CVE-2020-14690 (ORACLE Business Intelligence):** Reflected and stored XSS\n*     **CVE-2020-17457 (Fujitsu ServerView Suite iRMC):** Reflected XSS in the error message\n*     **CVE-2021-28488 (Ericsson Network Manager):** Exposure of information within the same authorization group.\n* **CVE-2019-17404 (NOKIA IMPACT):** Full path disclosure.\n*     **CVE-2019-17403 (NOKIA IMPACT):** Arbitrary File Upload.\n*    **CVE-2021-26597 (NOKIA NetAct):** Unrestricted File upload.\n*   **CVE-2019-19453 (WOWZA Streaming Engine):**  Stored XSS via proxy license editing.\n*    **CVE-2019-19455 (WOWZA Streaming Engine):** Local privilege escalation by writing arbitrary commands in specific files.\n*  **CVE-2020-35590 (WordPress Plugin Limit Login Attempts Reloaded):** Brute force attack bypass.\n*  **CVE-2020-35589 (WordPress Plugin Limit Login Attempts Reloaded):** Reflected Cross Site Scripting\n*   **CVE-2019-19994 (Selesta Visual Access Manager):** Pre-Auth OS command injection.\n*   **CVE-2019-19993 (Selesta Visual Access Manager):** Pre-Auth full path disclosure.\n*   **CVE-2019-19992 (Selesta Visual Access Manager):** Post-auth arbitrary file read.\n*   **CVE-2019-19988 (Selesta Visual Access Manager):** Post-Auth arbitrary file write.\n*   **CVE-2019-19989 (Selesta Visual Access Manager):** Pre-Auth broken access control\n*   **CVE-2019-19987 (Selesta Visual Access Manager):**  Pre authentication Cross-Site request forgery\n*   **CVE-2019-19986 (Selesta Visual Access Manager):** Pre-Auth SQL Injection.\n\nThe provided content details the vulnerabilities discovered by TIM's Vulnerability Research team and provides clear descriptions, attack vectors, and impacts of each CVE which is very useful for security analysis.\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 1390 | Weak Authentication | Class | Allowed-with-Review | sparse | 0.363 |\n| 2 | 639 | Authorization Bypass Through User-Controlled Key | Base | Allowed | sparse | 0.363 |\n| 3 | 306 | Missing Authentication for Critical Function | Base | Allowed | sparse | 0.362 |\n| 4 | 285 | Improper Authorization | Class | Discouraged | sparse | 0.359 |\n| 5 | 863 | Incorrect Authorization | Class | Allowed-with-Review | sparse | 0.357 |\n| 6 | 284 | Improper Access Control | Pillar | Discouraged | dense | 0.577 |\n| 7 | 471 | Modification of Assumed-Immutable Data (MAID) | Base | Allowed | graph | 0.002 |\n| 8 | 287 | Improper Authentication | Class | Discouraged | sparse | 0.351 |\n| 9 | 862 | Missing Authorization | Class | Allowed-with-Review | sparse | 0.347 |\n| 10 | 425 | Direct Request ('Forced Browsing') | Base | Allowed | sparse | 0.346 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-1390: Weak Authentication\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n### Extended Description\n\n\nAttackers may be able to bypass weak authentication faster and/or with less effort than expected.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-287\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2022-30034:** Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).\n- **CVE-2022-35248:** Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication\n- **CVE-2021-3116:** Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)\n\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n### Extended Description\n\n\nRetrieval of a user record occurs in the system based on some key value that is under user control. The key would typically identify a user-related record stored in the system and would be used to lookup that record for presentation to the user. It is likely that an attacker would have to be an authenticated user in the system. However, the authorization process would not properly check the data access operation to ensure that the authenticated user performing the operation has sufficient entitlements to perform the requested data access, hence bypassing any other authorization checks present in the system.\n\n\nFor example, attackers can look at places where user specific data is retrieved (e.g. search screens) and determine whether the key for the item being looked up is controllable externally. The key may be a hidden field in the HTML form field, might be passed as a URL parameter or as an unencrypted cookie variable, then in each of these cases it will be possible to tamper with the key value.\n\n\nOne manifestation of this weakness is when a system uses sequential or otherwise easily-guessable session IDs that would allow one user to easily switch to another user's session and read/modify their data.\n\n\n### Alternative Terms\nInsecure Direct Object Reference / IDOR: The \"Insecure Direct Object Reference\" term, as described in the OWASP Top Ten, is broader than this CWE because it also covers path traversal (CWE-22). Within the context of vulnerability theory, there is a similarity between the OWASP concept and CWE-706: Use of Incorrectly-Resolved Name or Reference.\nBroken Object Level Authorization / BOLA: BOLA is used in the 2019 OWASP API Security Top 10 and is said to be the same as IDOR.\nHorizontal Authorization: \"Horizontal Authorization\" is used to describe situations in which two users have the same privilege level, but must be prevented from accessing each other's resources. This is fairly common when using key-based access to resources in a multi-user context.\n\n### Relationships\nChildOf -> CWE-863\nChildOf -> CWE-863\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2021-36539:** An educational application does not appropriately restrict file IDs to a particular user. The attacker can brute-force guess IDs, indicating IDOR.\n\n\n\n\n## CWE-306: Missing Authentication for Critical Function\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-287\nChildOf -> CWE-287\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2022-31260:** Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306)\n- **CVE-2022-29951:** TCP-based protocol in Programmable Logic Controller (PLC) has no authentication.\n- **CVE-2022-29952:** Condition Monitor firmware uses a protocol that does not require authentication.\n\n\n\n\n## CWE-285: Improper Authorization\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n### Extended Description\n\n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\nWhen access control checks are not applied consistently - or not at all - users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposures, denial of service, and arbitrary code execution.\n\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-284\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Look at CWE-285's children and consider mapping to CWEs such as CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-732: Incorrect Permission Assignment for Critical Resource, or others.\n**Reasons:**\n- Abstraction\n**Suggested Alternatives:**\n- CWE-862: Missing Authorization\n- CWE-863: Incorrect Authorization\n- CWE-732: Incorrect Permission Assignment for Critical Resource\n\n\n\n### Observed Examples\n- **CVE-2022-24730:** Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information\n- **CVE-2009-3168:** Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.\n- **CVE-2009-2960:** Web application does not restrict access to admin scripts, allowing authenticated users to modify passwords of other users.\n\n\n\n\n## CWE-863: Incorrect Authorization\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Terminology]** \n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\n\n\n### Observed Examples\n- **CVE-2021-39155:** Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations.\n- **CVE-2019-15900:** Chain: sscanf() call is used to check if a username and group exists, but the return value of sscanf() call is not checked (CWE-252), causing an uninitialized variable to be checked (CWE-457), returning success to allow authorization bypass for executing a privileged (CWE-863).\n- **CVE-2009-2213:** Gateway uses default \"Allow\" configuration for its authorization settings.\n\n\n\n\n## CWE-284: Improper Access Control\n**Abstraction:** Pillar\n**Status:** Incomplete\n\n### Description\nThe product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.\n\n### Extended Description\n\n\nAccess control involves the use of several protection mechanisms such as:\n\n\n  - Authentication (proving the identity of an actor)\n\n  - Authorization (ensuring that a given actor can access a resource), and\n\n  - Accountability (tracking of activities that were performed)\n\nWhen any mechanism is not applied or otherwise fails, attackers can compromise the security of the product by gaining privileges, reading sensitive information, executing commands, evading detection, etc.\n\nThere are two distinct behaviors that can introduce access control weaknesses:\n\n\n  - Specification: incorrect privileges, permissions, ownership, etc. are explicitly specified for either the user or the resource (for example, setting a password file to be world-writable, or giving administrator capabilities to a guest user). This action could be performed by the program or the administrator.\n\n  - Enforcement: the mechanism contains errors that prevent it from properly enforcing the specified access control requirements (e.g., allowing the user to specify their own privileges, or allowing a syntactically-incorrect ACL to produce insecure settings). This problem occurs within the program itself, in that it does not actually enforce the intended security policy that the administrator specifies.\n\n\n\n### Alternative Terms\nAuthorization: The terms \"access control\" and \"authorization\" are often used interchangeably, although many people have distinct definitions. The CWE usage of \"access control\" is intended as a general term for the various mechanisms that restrict which users can access which resources, and \"authorization\" is more narrowly defined. It is unlikely that there will be community consensus on the use of these terms.\n\n### Relationships\nNone\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-284 is extremely high-level, a Pillar. Its name, \"Improper Access Control,\" is often misused in low-information vulnerability reports [REF-1287] or by active use of the OWASP Top Ten, such as \"A01:2021-Broken Access Control\". It is not useful for trend analysis.\n**Comments:** Consider using descendants of CWE-284 that are more specific to the kind of access control involved, such as those involving authorization (Missing Authorization (CWE-862), Incorrect Authorization (CWE-863), Incorrect Permission Assignment for Critical Resource (CWE-732), etc.); authentication (Missing Authentication (CWE-306) or Weak Authentication (CWE-1390)); Incorrect User Management (CWE-286); Improper Restriction of Communication Channel to Intended Endpoints (CWE-923); etc.\n**Reasons:**\n- Frequent Misuse\n- Abstraction\n**Suggested Alternatives:**\n- CWE-862: Missing Authorization\n- CWE-863: Incorrect Authorization\n- CWE-732: Incorrect Permission Assignment for Critical Resource\n- CWE-306: Missing Authentication\n- CWE-1390: Weak Authentication\n- CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n\n\n### Additional Notes\n**[Maintenance]** \n\nThis entry needs more work. Possible sub-categories include:\n\n\n  - Trusted group includes undesired entities (partially covered by CWE-286)\n\n  - Group can perform undesired actions\n\n  - ACL parse error does not fail closed\n\n\n\n\n\n### Observed Examples\n- **CVE-2022-24985:** A form hosting website only checks the session authentication status for a single form, making it possible to bypass authentication when there are multiple forms\n- **CVE-2022-29238:** Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.\n- **CVE-2022-23607:** Python-based HTTP library did not scope cookies to a particular domain such that \"supercookies\" could be sent to any domain on redirect\n\n\n\n\n## CWE-471: Modification of Assumed-Immutable Data (MAID)\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not properly protect an assumed-immutable element from being modified by an attacker.\n\n### Extended Description\nThis occurs when a particular input is critical enough to the functioning of the application that it should not be modifiable at all, but it is. Certain resources are often assumed to be immutable when they are not, such as hidden form fields in web applications, cookies, and reverse DNS lookups.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-664\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** MAID issues can be primary to many other weaknesses, and they are a major factor in languages that provide easy access to internal program constructs, such as PHP's register_globals and similar features. However, MAID issues can also be resultant from weaknesses that modify internal state; for example, a program might validate some data and store it in memory, but a buffer overflow could overwrite that validated data, leading to a change in program logic.\n\n**[Theoretical]** There are many examples where the MUTABILITY property is a major factor in a vulnerability.\n\n\n\n### Observed Examples\n- **CVE-2002-1757:** Relies on $PHP_SELF variable for authentication.\n- **CVE-2005-1905:** Gain privileges by modifying assumed-immutable code addresses that are accessed by a driver.\n\n\n\n\n## CWE-287: Improper Authentication\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nWhen an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nauthentification: An alternate term is \"authentification\", which appears to be most commonly used by people from non-English-speaking countries.\nAuthN: \"AuthN\" is typically used as an abbreviation of \"authentication\" within the web application security community. It is also distinct from \"AuthZ,\" which is an abbreviation of \"authorization.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\nAuthC: \"AuthC\" is used as an abbreviation of \"authentication,\" but it appears to used less frequently than \"AuthN.\"\n\n### Relationships\nChildOf -> CWE-284\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.\n**Reasons:**\n- Frequent Misuse\n**Suggested Alternatives:**\n- CWE-1390: Weak Authentication\n- CWE-306: Missing Authentication for Critical Function\n\n\n### Additional Notes\n**[Relationship]** This can be resultant from SQL injection vulnerabilities and other issues.\n\n**[Maintenance]** The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions.\n\n\n\n### Observed Examples\n- **CVE-2022-35248:** Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication\n- **CVE-2022-36436:** Python-based authentication proxy does not enforce password authentication during the initial handshake, allowing the client to bypass authentication by specifying a 'None' authentication type.\n- **CVE-2022-30034:** Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).\n\n\n\n\n## CWE-862: Missing Authorization\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Terminology]** Assuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\n\n### Observed Examples\n- **CVE-2022-24730:** Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information\n- **CVE-2009-3168:** Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.\n- **CVE-2009-3597:** Web application stores database file under the web root with insufficient access control (CWE-219), allowing direct request.\n\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n### Extended Description\nWeb applications susceptible to direct request attacks often make the false assumption that such resources can only be reached through a given navigation path and so only apply authorization at certain points in the path.\n\n### Alternative Terms\nforced browsing: The \"forced browsing\" term could be misinterpreted to include weaknesses such as CSRF or XSS, so its use is discouraged.\n\n### Relationships\nChildOf -> CWE-862\nChildOf -> CWE-862\nChildOf -> CWE-288\nChildOf -> CWE-424\nCanPrecede -> CWE-471\nCanPrecede -> CWE-98\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Overlaps Modification of Assumed-Immutable Data (MAID), authorization errors, container errors; often primary to other weaknesses such as XSS and SQL injection.\n\n**[Theoretical]** \"Forced browsing\" is a step-based manipulation involving the omission of one or more steps, whose order is assumed to be immutable. The application does not verify that the first step was performed successfully before the second step. The consequence is typically \"authentication bypass\" or \"path disclosure,\" although it can be primary to all kinds of weaknesses, especially in languages such as PHP, which allow external modification of assumed-immutable variables.\n\n\n\n### Observed Examples\n- **CVE-2022-29238:** Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.\n- **CVE-2022-23607:** Python-based HTTP library did not scope cookies to a particular domain such that \"supercookies\" could be sent to any domain on redirect.\n- **CVE-2004-2144:** Bypass authentication via direct request.\n\n",
  "keyphrases": {
    "base_query": "## Vulnerability Description\nAn issue was discovered on Olivetti d-COLOR MF3555 2XD_S000.002.271 devices. The Web Application is affected by Broken Access Control. It does not properly validate requests for access to data and functionality under the /mngset/authset path. By not verifying permissions for access to resources, it allows a potential attacker to view pages that are not allowed.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **broken access control**\n- **impact:** view unauthorized pages\n- **product:** Olivetti d-COLOR MF3555\n- **version:** 2XD_S000.002.271\n- **component:** /mngset/authset path\n\n## CVE Reference Links Content Summary\nBased on the provided content, here's a breakdown of the vulnerability information related to CVE-2022-25342:\n\n**CVE-2022-25342**\n\n*   **Root Cause of Vulnerability:** Improper Access Control. The web application does not properly validate requests for access to data and functionality under the `/mngset/authset` path.\n*   **Weaknesses/Vulnerabilities Present:** Broken access control, insufficient authorization checks. The application allows unauthorized access to restricted resources.\n*   **Impact of Exploitation:** A potential attacker can view pages and modify user details (including passwords) that should be restricted to administrative users. This can lead to privilege escalation where an attacker gains full control of the system by modifying admin user details.\n*  **Attack Vectors:** The vulnerability is exploitable by sending a crafted HTTP GET request to specific endpoints under the `/mngset/authset` path.\n*   **Required Attacker Capabilities/Position:** The attacker needs to be an authenticated user with at least one system administrator permission. The attacker needs to intercept a request from a privileged user and modify it to access administrative panels.\n\n**Summary of Vulnerabilities from the Document (Excluding CVE-2022-25342):**\n\nThe document provides detailed information regarding several CVEs. Here's a summary:\n\n**Stack-based Buffer Overflow:**\n\n*   **CVE-2024-52949 (iptraf-ng):** A stack-based buffer overflow vulnerability in `iptraf-ng` (version 1.2.1) can be exploited by an attacker providing a malicious configuration file through the `-C` argument. This leads to arbitrary code execution with root privileges.\n\n**Plaintext Password Storage:**\n\n*   **CVE-2024-49351 (IBM Workload Scheduler):** Passwords for engine connections are stored in cleartext in the connection properties panel, accessible to authenticated remote administrators which can cause privilege escalation and data breaches.\n*   **CVE-2023-38328 (eGroupWare):** The database password is stored in cleartext accessible to admin users through the setup panel, potentially leading to database data access.\n*    **CVE-2024-31840 (Italtel Embrace):** Plaintext passwords for the email server are displayed within the HTML source code when editing email server configuration.\n\n**Improper Parameter Handling/Open Redirect:**\n*   **CVE-2024-9329 (Eclipse Glassfish):** Improper handling of the `Host` HTTP parameter allows for open redirection to a malicious site which could be used for phishing attacks.\n*   **CVE-2024-43683 (Microchip TP4100):** Open redirect vulnerability occurs due to the lack of proper validation of the Host header.\n*    **CVE-2022-46407 (Ericsson Network Manager):**  Open redirect through the editprofile endpoint.\n\n**Remote Code Execution:**\n\n*   **CVE-2024-9054 (Microchip TP4100):** Remote command execution is possible by uploading a configuration file with malicious bash commands in the \"secret_key\" parameter.\n*  **CVE-2024-31843 (Italtel Embrace):** OS command injection is possible by exploiting a lack of input validation in the `/removeBackup` endpoint.\n*   **CVE-2023-49328 (Wolters Kluwer B.POINT):** Remote code execution vulnerability exists in a server-to-server communication module due to argument injection.\n*   **CVE-2022-47531 (Ericsson EPG):** Missing input validation leading to arbitrary command execution via system CLI.\n*   **CVE-2022-39819 (Nokia 1350 OMS):** OS command injection is possible for authenticated users.\n*  **CVE-2022-39818 (NOKIA NFM-T VM Manager WebUI):** Authenticated users can inject system commands in log.pl using the `cmd` parameter.\n*   **CVE-2022-41763 (NOKIA AMS):** Remote code execution via debugger in `ipAddress` variable, allowing command injection in the PING function.\n*   **CVE-2020-27583 (IBM InfoSphere Information Server):** Remote unauthenticated arbitrary code execution due to deserialization of untrusted data.\n*    **CVE-2022-39815 (Nokia 1350 OMS):**  OS command injection vulnerability with unauthenticated access.\n\n**SQL Injection:**\n\n*   **CVE-2024-7801 (Microchip TP4100):** Unauthenticated SQL injection vulnerability in the `get_chart_data` endpoint through the `channelId` parameter, allowing information extraction.\n*   **CVE-2022-39822 (NOKIA NFM-T VM Manager WebUI):** Authenticated users can inject SQL code in `easy1350.pl` using the `id` and `host` parameters.\n*   **CVE-2022-39817 (Nokia 1350 OMS):** Multiple SQL Injection Vulnerabilities with authenticated access.\n*   **CVE-2019-19986 (Selesta Visual Access Manager):**  SQL injection vulnerability with unauthenticated access.\n*   **CVE-2022-28862 (ARCHIBUS Web Central):** Multiple SQL injection vulnerabilities in workflow execution endpoint, this is fixed in all recent versions.\n\n**Cross-Site Scripting (XSS):**\n\n*   **CVE-2024-5532 (OpenText Operations Agent):** Stored XSS is possible by adding a malicious payload in the CORE\\_ID value of the agent configuration file which results in arbitrary Javascript code execution.\n*   **CVE-2024-43687 (Microchip TP4100):** Stored XSS in the \"Custom Banner\" field.\n*   **CVE-2024-43686 (Microchip TP4100):** Reflected XSS in the `channelId` parameter of the `get_chart_data` endpoint.\n*   **CVE-2024-31847 (Italtel Embrace):** Stored XSS vulnerability through an unvalidated `HTTP/GET` parameter logged in the activity log.\n*   **CVE-2024-28804 (Italtel i-MCS NFV):** Stored XSS through `j_username` parameter in the login endpoint.\n*   **CVE-2024-20906 (Oracle ILOM):** Reflected XSS vulnerability with network access through ICMP.\n*   **CVE-2024-40680 (Fortinet FortiOS):** Stored XSS in replacement messages.\n*   **CVE-2022-45179 (LiveBox Collaboration vDesk):** Stored XSS by injecting arbitrary HTML code in the reminder section title.\n*   **CVE-2022-45176 (LiveBox Collaboration vDesk):** Stored XSS using malicious files in vShare functionality.\n*   **CVE-2022-43675 (NOKIA NFM-T):** Multiple reflected XSS vulnerabilities using GET parameters\n*   **CVE-2022-41762 (NOKIA NFM-T):** Multiple reflected XSS vulnerabilities through various GET parameters.\n*   **CVE-2022-40714 (Nokia 1350 OMS):** Reflected XSS on multiple endpoints.\n*   **CVE-2022-40712 (Nokia 1350 OMS):** Reflected XSS on multiple endpoints.\n*   **CVE-2022-39813 (Italtel NetMatch-S CI):** Reflected and stored XSS via `j_username`, `name` and `actLine` parameters.\n*    **CVE-2022-39810 (WSO2 Enterprise Integrator):** Reflected XSS in the Management Console via the `driver` parameter.\n*   **CVE-2022-39809 (WSO2 Enterprise Integrator):** Reflected XSS in the Management Console via the `name` parameter.\n*   **CVE-2022-45179 (LiveBox Collaboration vDesk):** Reflected XSS using the reminder functionality.\n*   **CVE-2022-28867 (Nokia NetAct):** Stored XSS through modification of the `templateName` parameter.\n*    **CVE-2022-28865 (Nokia NetAct):** Stored XSS with arbitrary uploaded filename.\n*    **CVE-2022-40680 (Fortinet FortiOS):** Stored XSS by injecting malicious code into replacement messages.\n*   **CVE-2022-27880 (F5 Traffix Signal Delivery Controller):** Stored XSS through the \"User Name\" parameter\n*   **CVE-2022-25344 (Olivetti d-COLOR MF3555):** Stored XSS via the `arg01.Hostname` parameter.\n*    **CVE-2021-43080 (Fortinet FortiOS):** Stored XSS using the URI parameter for threat feed IP addresses\n*   **CVE-2021-41555 (ARCHIBUS Web Central):** Multiple stored XSS in `workflow.runWorkflowRule.dwr` (fixed in recent versions).\n*   **CVE-2021-35490 (Thruk):** Stored XSS in a specific parameter.\n*   **CVE-2021-35489 (Thruk):** Reflected XSS via `host` and `service` parameters in `extinfo.cgi`.\n*   **CVE-2021-35488 (Thruk):** Reflected XSS via `host` and `title` parameters in `status.cgi`.\n*   **CVE-2021-29661 (Softing AG OPC Toolbox):** Stored XSS via `ITEMLISTVALUES##ITEMID` parameter.\n*    **CVE-2021-41762 (NOKIA NFM-T Network Element Manager):** Multiple reflected XSS using various GET parameters.\n*   **CVE-2021-26596 (NOKIA NetAct):** Stored XSS through the filename parameter in the Site Configuration Tool section.\n*   **CVE-2021-3314 (Oracle GlassFish Server):** Stored XSS via `logViewer.jsf` (unsupported).\n*   **CVE-2020-17458 (MultiUX):** Stored XSS via multiple parameters in the mailbox creation page.\n*   **CVE-2020-17457 (Fujitsu ServerView Suite iRMC):** Reflected XSS via the `PSCU_FILE_INIT` parameter.\n*   **CVE-2020-35589 (WordPress Plugin Limit Login Attempts Reloaded):** Reflected XSS in the plugin's settings page.\n*   **CVE-2022-29540 (RESI S.p.A):**  Multiple Reflected XSS via various GET parameters.\n*   **CVE-2019-19991 (Selesta Visual Access Manager):**  Multiple reflected XSS on various GET/POST parameters.\n*   **CVE-2019-19990 (Selesta Visual Access Manager):** Multiple stored XSS on various GET/POST parameters.\n*   **CVE-2020-14690 (ORACLE Business Intelligence):** Stored and Reflected XSS through the Analytics Actions component.\n*    **CVE-2019-17405 (NOKIA IMPACT):** Reflected XSS in the manual page of Nokia CDP.\n*    **CVE-2019-19456 (WOWZA Streaming Engine):** Reflected XSS on the server selection box of the login page.\n*   **CVE-2022-26483 (Veritas Operations Manager):** Reflected XSS through the GET parameter\n    \n**Cross-Site Request Forgery (CSRF):**\n\n*   **CVE-2024-43684 (Microchip TP4100):** CSRF vulnerability due to the lack of anti-CSRF tokens.\n*   **CVE-2022-30280 (Nokia NetAct):** CSRF vulnerability which allows creation of arbitrary user accounts through the createuser endpoint.\n*    **CVE-2021-35491 (Wowza Streaming Engine):** CSRF, allowing deletion of users by tricking an admin into visiting a malicious page.\n*   **CVE-2021-29660 (Softing AG OPC Toolbox):**  CSRF allowing password reset by tricking an administrator into visiting a controlled URL.\n*    **CVE-2019-19987 (Selesta Visual Access Manager):**  Multiple CSRF vulnerabilities on the web application without authentication.\n\n**Improper Access Control/Privilege Escalation:**\n\n*   **CVE-2024-31846 (Italtel Embrace):** Improper access control leads to exposure of client data without authentication.\n*    **CVE-2024-28805 (Italtel i-MCS NFV):** Improper access control, with some features accessible by unauthorized roles/unauthenticated users.\n*    **CVE-2022-45180 (LiveBox Collaboration vDesk):** Broken access control to export user information for an authenticated user.\n*    **CVE-2022-45178 (LiveBox Collaboration vDesk):**  Privilege escalation from FGM to GGU user using specific endpoints.\n*   **CVE-2022-45172 (LiveBox Collaboration vDesk):** Improper access control enabling creation and stealing of user accounts including administrator accounts.\n*   **CVE-2022-26062 (Nokia Web Element Manager):** Improper access control allows unprivileged users to execute admin functions by modifying the HTTP response of the login request.\n*   **CVE-2023-39909 (Ericsson Network Manager):** Improper access control allows unauthenticated users to access the NCM application.\n*  **CVE-2022-28866 (Nokia AirFrame BMC):** Improper access control through multiple endpoints, allowing for privilege escalation from an operator to administrator role.\n*  **CVE-2022-39811 (Italtel NetMatch-S CI):** Improper Access control to view unauthorized pages or modify configurations.\n*   **CVE-2021-41554 (ARCHIBUS Web Central):**  Broken access control in multiple endpoints allowing unauthorized modification of users (fixed in recent versions).\n*   **CVE-2021-36200 (Johnson Controls Metasys MREWeb Service):** Unauthenticated access to user enumeration.\n*  **CVE-2020-7573 (Schneider Electric StruxureWare Building Operation WebReports):** Improper access control, with a resource accessible by unauthorized users.\n*   **CVE-2021-28488 (Ericsson Network Manager):** Exposure of user data to other users within the same authorization group.\n*    **CVE-2019-19989 (Selesta Visual Access Manager):** Broken access control with unauthenticated access to various parts of the application\n*   **CVE-2022-45175 (LiveBox Collaboration vDesk):**  Insecure direct object reference in OnlyOffice file caching, allowing unauthorized access.\n*   **CVE-2022-39811 (Italtel NetMatch-S CI):** Multiple improper access control on different endpoints without any authentication.\n\n**Authentication Bypass:**\n\n*   **CVE-2022-45174 (LiveBox Collaboration vDesk):** Bypass of Two-Factor Authentication for SAML Users, using any string as a backup code.\n*   **CVE-2022-45173 (LiveBox Collaboration vDesk):** Two-Factor Authentication bypass by modifying the server response, due to client side validation.\n*   **CVE-2022-45168 (Livebox Collaboration vDesk):** Two-factor authentication bypass by generating backup codes before authenticating with TOTP.\n*  **CVE-2024-34399 (BMC Remedy Mid Tier):** Unauthenticated remote access of any user account without a password (unsupported product).\n\n**Path Traversal:**\n\n*   **CVE-2024-31841 (Italtel Embrace):** Multiple relative path traversal vulnerabilities by manipulating the `filename` parameter, allowing unauthorized file access.\n*  **CVE-2024-28806 (Italtel i-MCS NFV):**  Absolute Path Traversal vulnerability, allowing arbitrary file uploads via the `uploadDir` parameter.\n*    **CVE-2022-41761 (NOKIA NFM-T VM Manager WebUI):** Arbitrary file reading due to absolute path traversal via logfile parameter.\n*   **CVE-2022-41760 (NOKIA NFM-T Network Element Manager):** Relative Path Traversal using the filename parameter.\n*  **CVE-2022-40715 (Nokia 1350 OMS):**  Absolute Path Traversal via the `logfile` parameter\n*    **CVE-2022-40713 (Nokia 1350 OMS):**  Relative Path Traversal via the `file` parameter on multiple endpoints.\n*  **CVE-2022-39812 (Italtel NetMatch-S CI):** Absolute path traversal using the uploadDir parameter.\n*    **CVE-2022-26484 (Veritas Operations Manager):** Absolute path traversal to read arbitrary files via GET request parameters.\n*   **CVE-2021-28485 (Ericsson MSC):** Relative Path Traversal via a request parameter to read files from the system.\n*  **CVE-2020-12081 (FlexNet Publisher):** Arbitrary file reading through full path traversal.\n*   **CVE-2020-9050 (Johnson Controls Metasys MREWeb Service):** Absolute path traversal allows downloading files through the `/MREService/Download.aspx` endpoint without authentication.\n*   **CVE-2019-17406 (NOKIA IMPACT):** Path traversal with arbitrary file saving via the `filename` parameter.\n*    **CVE-2022-41761 (NOKIA NFM-T VM Manager WebUI):**  Absolute path traversal through `logfile` parameter.\n*     **CVE-2019-19993 (Selesta Visual Access Manager):**  Multiple full path disclosure vulnerabilities with unauthenticated access.\n\n**Other vulnerabilities:**\n\n*   **CVE-2024-31845 (Italtel Embrace):** Log forging vulnerability due to improper output neutralization for logs.\n*  **CVE-2024-31844 (Italtel Embrace):** Generation of error messages containing sensitive information like absolute paths of the source code, aiding attackers in subsequent attacks.\n*    **CVE-2024-25007 (Ericsson Network Manager):** CSV Injection through the export function.\n*   **CVE-2024-22063 (ZENIC-ONE ZTE R58):** XLSX Injection in cloned job report generation.\n*   **CVE-2023-50811 (Selesta Visual Access Manager):** Authorization bypass through user controlled key allowing control of many other receptions than the assigned one.\n*    **CVE-2023-26071 (HarpaItalia Mcubo ICT):** User enumeration vulnerability through Observable Response Discrepancy in the login page.\n*   **CVE-2022-45177 (LiveBox Collaboration vDesk):** User enumeration through response discrepancies on multiple endpoints.\n*   **CVE-2022-45171 (Livebox Collaboration vDESK):** Unrestricted file upload which can be used to upload malware.\n*   **CVE-2022-45170 (LiveBox Collaboration vDesk):** Cryptographic issue allowing decryption of files without the correct encryption key.\n*    **CVE-2022-45169 (Livebox Collaboration vDesk):** Open Redirect via push notifications, allowing phishing attacks.\n*   **CVE-2022-46408 (Ericsson Network Manager):** CSV Injection in the Network Connectivity Manager.\n*   **CVE-2022-39821 (Nokia 1350 OMS):** Insertion of sensitive data into world-readable application log files.\n*   **CVE-2022-39820 (NOKIA NFM-T Network Element Manager):** Cleartext credentials in the file system, enabling unauthorized access to the web application.\n*    **CVE-2022-27662 (F5 Traffix Signal Delivery Controller):** Client-side template injection leading to arbitrary code execution by an authenticated user.\n*    **CVE-2021-35492 (Wowza Streaming Engine):** Uncontrolled resource consumption, resulting in a DoS by creating new virtual host logs.\n*   **CVE-2021-31540 (WOWZA Streaming Engine):** Incorrect file permissions on configuration files, allowing any user to read/write.\n*    **CVE-2021-31539 (WOWZA Streaming Engine):** Cleartext password storage in the configuration files.\n*  **CVE-2021-28979 (Thales SafeNet KeySecure Management Console):** Cleartext password storage in HTTP responses.\n*   **CVE-2021-32571 (Ericsson OSS-RC):** Incomplete cleanup leading to storage of passwords in accessible files.\n*  **CVE-2021-32570 (Ericsson Network Manager):**  Exposure of data from log files to unauthorized users.\n*    **CVE-2021-32569 (Ericsson OSS-RC):** Reflected XSS in customer documentation browsing library.\n*    **CVE-2021-28250 (CA eHealth Performance Manager):** Privilege escalation via SUID/GUID file execution.\n*    **CVE-2021-28249 (CA eHealth Performance Manager):** Privilege escalation via dynamically linked shared object library execution as root.\n*  **CVE-2021-28248 (CA eHealth Performance Manager):** Excessive authentication attempts are not restricted allowing for password brute-force attacks.\n*    **CVE-2021-28246 (CA eHealth Performance Manager):** Privilege escalation via dynamically linked shared object library execution as the ehealth user.\n*  **CVE-2021-28250 (CA eHealth Performance Manager):**  Privilege escalation using setuid file execution as the ehealth user.\n*    **CVE-2020-35590 (WordPress Plugin Limit Login Attempts Reloaded):** Rate limit bypass by forging X-Forwarded-For Header.\n*   **CVE-2020-28209 (Schneider Electric StruxureWare):** Unquoted search path allows for privilege escalation by writing malicious files to service subfolders.\n*  **CVE-2020-2505 (QNAP QES):** Type confusion leading to information disclosure.\n*    **CVE-2020-2504 (QNAP QES):** Arbitrary File Download through an escape of the webroot\n*   **CVE-2020-2503 (QNAP QES):** Stored XSS through arbitrary file uploads in File Station.\n*   **CVE-2019-19994 (Selesta Visual Access Manager):** OS command injection with unauthenticated access.\n*   **CVE-2019-19455 (WOWZA Streaming Engine):** Local Privilege Escalation on Linux using the manager files.\n*   **CVE-2019-19454 (WOWZA Streaming Engine):** Arbitrary file download in \"Download Log\" functionality.\n*   **CVE-2020-15794 (Siemens Desigo Insight):** Full path disclosure through error messages.\n*   **CVE-2020-15793 (Siemens Desigo Insight):** Lack of X-Frame-Options header leading to clickjacking vulnerability.\n*   **CVE-2020-15792 (Siemens Desigo Insight):** Blind SQL Injection via ID parameter.\n*   **CVE-2020-2505 (QNAP QES):** Information disclosure using type confusion\n*     **CVE-2019-19992 (Selesta Visual Access Manager):** Arbitrary file reading via the web interface.\n*     **CVE-2019-19988 (Selesta Visual Access Manager):** Arbitrary file writing via the web interface.\n*    **CVE-2021-26597 (NOKIA NetAct):** Unrestricted file upload using the Site Configuration Tool web site.\n*    **CVE-2021-31539 (WOWZA Streaming Engine):** cleartext password stored in `conf/admin.password`\n*    **CVE-2021-31540 (WOWZA Streaming Engine):** incorrect file permissions, which allows any user to read and write configuration files.\n*   **CVE-2019-17403 (NOKIA IMPACT):** Arbitrary file upload vulnerability.\n*  **CVE-2021-28250 (CA eHealth Performance Manager):** Privilege escalation through a setuid file.\n* **CVE-2021-28485 (Ericsson MSC):** Relative path traversal for authenticated users using the SIS web app.\n*   **CVE-2020-28209 (Schneider Electric StruxureWare):** Windows Unquoted search path, that can be exploited by an attacker.\n*    **CVE-2020-14843 (ORACLE Business Intelligence):**  Unrestricted upload of dangerous file types.\n*    **CVE-2020-14842 (ORACLE Business Intelligence):** Stored XSS and Unrestricted file upload.\n*     **CVE-2020-7570 (Schneider Electric StruxureWare Building Operation WebReports):** Stored XSS on WebReport.\n*   **CVE-2020-7571 (Schneider Electric StruxureWare Building Operation WebReports):** Reflected XSS on WebReport.\n*   **CVE-2020-7569 (Schneider Electric StruxureWare Building Operation WebReports):** Unrestricted file upload of dangerous types on WebReports.\n*  **CVE-2020-7572 (Schneider Electric StruxureWare Building Operation WebReports):** Improper restriction of XML External Entity Reference on the server XML parser in WebReports.\n*  **CVE-2020-14843 (ORACLE Business Intelligence):** Arbitrary upload of a file.\n*   **CVE-2020-14842 (ORACLE Business Intelligence):** stored XSS with arbitrary file upload\n*   **CVE-2020-14690 (ORACLE Business Intelligence):** Reflected and stored XSS\n*     **CVE-2020-17457 (Fujitsu ServerView Suite iRMC):** Reflected XSS in the error message\n*     **CVE-2021-28488 (Ericsson Network Manager):** Exposure of information within the same authorization group.\n* **CVE-2019-17404 (NOKIA IMPACT):** Full path disclosure.\n*     **CVE-2019-17403 (NOKIA IMPACT):** Arbitrary File Upload.\n*    **CVE-2021-26597 (NOKIA NetAct):** Unrestricted File upload.\n*   **CVE-2019-19453 (WOWZA Streaming Engine):**  Stored XSS via proxy license editing.\n*    **CVE-2019-19455 (WOWZA Streaming Engine):** Local privilege escalation by writing arbitrary commands in specific files.\n*  **CVE-2020-35590 (WordPress Plugin Limit Login Attempts Reloaded):** Brute force attack bypass.\n*  **CVE-2020-35589 (WordPress Plugin Limit Login Attempts Reloaded):** Reflected Cross Site Scripting\n*   **CVE-2019-19994 (Selesta Visual Access Manager):** Pre-Auth OS command injection.\n*   **CVE-2019-19993 (Selesta Visual Access Manager):** Pre-Auth full path disclosure.\n*   **CVE-2019-19992 (Selesta Visual Access Manager):** Post-auth arbitrary file read.\n*   **CVE-2019-19988 (Selesta Visual Access Manager):** Post-Auth arbitrary file write.\n*   **CVE-2019-19989 (Selesta Visual Access Manager):** Pre-Auth broken access control\n*   **CVE-2019-19987 (Selesta Visual Access Manager):**  Pre authentication Cross-Site request forgery\n*   **CVE-2019-19986 (Selesta Visual Access Manager):** Pre-Auth SQL Injection.\n\nThe provided content details the vulnerabilities discovered by TIM's Vulnerability Research team and provides clear descriptions, attack vectors, and impacts of each CVE which is very useful for security analysis.\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 1390 | Weak Authentication | Class | Allowed-with-Review | sparse | 0.363 |\n| 2 | 639 | Authorization Bypass Through User-Controlled Key | Base | Allowed | sparse | 0.363 |\n| 3 | 306 | Missing Authentication for Critical Function | Base | Allowed | sparse | 0.362 |\n| 4 | 285 | Improper Authorization | Class | Discouraged | sparse | 0.359 |\n| 5 | 863 | Incorrect Authorization | Class | Allowed-with-Review | sparse | 0.357 |\n| 6 | 284 | Improper Access Control | Pillar | Discouraged | dense | 0.577 |\n| 7 | 471 | Modification of Assumed-Immutable Data (MAID) | Base | Allowed | graph | 0.002 |\n| 8 | 287 | Improper Authentication | Class | Discouraged | sparse | 0.351 |\n| 9 | 862 | Missing Authorization | Class | Allowed-with-Review | sparse | 0.347 |\n| 10 | 425 | Direct Request ('Forced Browsing') | Base | Allowed | sparse | 0.346 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-1390: Weak Authentication\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n### Extended Description\n\n\nAttackers may be able to bypass weak authentication faster and/or with less effort than expected.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-287\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2022-30034:** Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).\n- **CVE-2022-35248:** Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication\n- **CVE-2021-3116:** Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)\n\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n### Extended Description\n\n\nRetrieval of a user record occurs in the system based on some key value that is under user control. The key would typically identify a user-related record stored in the system and would be used to lookup that record for presentation to the user. It is likely that an attacker would have to be an authenticated user in the system. However, the authorization process would not properly check the data access operation to ensure that the authenticated user performing the operation has sufficient entitlements to perform the requested data access, hence bypassing any other authorization checks present in the system.\n\n\nFor example, attackers can look at places where user specific data is retrieved (e.g. search screens) and determine whether the key for the item being looked up is controllable externally. The key may be a hidden field in the HTML form field, might be passed as a URL parameter or as an unencrypted cookie variable, then in each of these cases it will be possible to tamper with the key value.\n\n\nOne manifestation of this weakness is when a system uses sequential or otherwise easily-guessable session IDs that would allow one user to easily switch to another user's session and read/modify their data.\n\n\n### Alternative Terms\nInsecure Direct Object Reference / IDOR: The \"Insecure Direct Object Reference\" term, as described in the OWASP Top Ten, is broader than this CWE because it also covers path traversal (CWE-22). Within the context of vulnerability theory, there is a similarity between the OWASP concept and CWE-706: Use of Incorrectly-Resolved Name or Reference.\nBroken Object Level Authorization / BOLA: BOLA is used in the 2019 OWASP API Security Top 10 and is said to be the same as IDOR.\nHorizontal Authorization: \"Horizontal Authorization\" is used to describe situations in which two users have the same privilege level, but must be prevented from accessing each other's resources. This is fairly common when using key-based access to resources in a multi-user context.\n\n### Relationships\nChildOf -> CWE-863\nChildOf -> CWE-863\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2021-36539:** An educational application does not appropriately restrict file IDs to a particular user. The attacker can brute-force guess IDs, indicating IDOR.\n\n\n\n\n## CWE-306: Missing Authentication for Critical Function\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-287\nChildOf -> CWE-287\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2022-31260:** Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306)\n- **CVE-2022-29951:** TCP-based protocol in Programmable Logic Controller (PLC) has no authentication.\n- **CVE-2022-29952:** Condition Monitor firmware uses a protocol that does not require authentication.\n\n\n\n\n## CWE-285: Improper Authorization\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n### Extended Description\n\n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\nWhen access control checks are not applied consistently - or not at all - users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposures, denial of service, and arbitrary code execution.\n\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-284\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Look at CWE-285's children and consider mapping to CWEs such as CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-732: Incorrect Permission Assignment for Critical Resource, or others.\n**Reasons:**\n- Abstraction\n**Suggested Alternatives:**\n- CWE-862: Missing Authorization\n- CWE-863: Incorrect Authorization\n- CWE-732: Incorrect Permission Assignment for Critical Resource\n\n\n\n### Observed Examples\n- **CVE-2022-24730:** Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information\n- **CVE-2009-3168:** Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.\n- **CVE-2009-2960:** Web application does not restrict access to admin scripts, allowing authenticated users to modify passwords of other users.\n\n\n\n\n## CWE-863: Incorrect Authorization\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Terminology]** \n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\n\n\n### Observed Examples\n- **CVE-2021-39155:** Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations.\n- **CVE-2019-15900:** Chain: sscanf() call is used to check if a username and group exists, but the return value of sscanf() call is not checked (CWE-252), causing an uninitialized variable to be checked (CWE-457), returning success to allow authorization bypass for executing a privileged (CWE-863).\n- **CVE-2009-2213:** Gateway uses default \"Allow\" configuration for its authorization settings.\n\n\n\n\n## CWE-284: Improper Access Control\n**Abstraction:** Pillar\n**Status:** Incomplete\n\n### Description\nThe product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.\n\n### Extended Description\n\n\nAccess control involves the use of several protection mechanisms such as:\n\n\n  - Authentication (proving the identity of an actor)\n\n  - Authorization (ensuring that a given actor can access a resource), and\n\n  - Accountability (tracking of activities that were performed)\n\nWhen any mechanism is not applied or otherwise fails, attackers can compromise the security of the product by gaining privileges, reading sensitive information, executing commands, evading detection, etc.\n\nThere are two distinct behaviors that can introduce access control weaknesses:\n\n\n  - Specification: incorrect privileges, permissions, ownership, etc. are explicitly specified for either the user or the resource (for example, setting a password file to be world-writable, or giving administrator capabilities to a guest user). This action could be performed by the program or the administrator.\n\n  - Enforcement: the mechanism contains errors that prevent it from properly enforcing the specified access control requirements (e.g., allowing the user to specify their own privileges, or allowing a syntactically-incorrect ACL to produce insecure settings). This problem occurs within the program itself, in that it does not actually enforce the intended security policy that the administrator specifies.\n\n\n\n### Alternative Terms\nAuthorization: The terms \"access control\" and \"authorization\" are often used interchangeably, although many people have distinct definitions. The CWE usage of \"access control\" is intended as a general term for the various mechanisms that restrict which users can access which resources, and \"authorization\" is more narrowly defined. It is unlikely that there will be community consensus on the use of these terms.\n\n### Relationships\nNone\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-284 is extremely high-level, a Pillar. Its name, \"Improper Access Control,\" is often misused in low-information vulnerability reports [REF-1287] or by active use of the OWASP Top Ten, such as \"A01:2021-Broken Access Control\". It is not useful for trend analysis.\n**Comments:** Consider using descendants of CWE-284 that are more specific to the kind of access control involved, such as those involving authorization (Missing Authorization (CWE-862), Incorrect Authorization (CWE-863), Incorrect Permission Assignment for Critical Resource (CWE-732), etc.); authentication (Missing Authentication (CWE-306) or Weak Authentication (CWE-1390)); Incorrect User Management (CWE-286); Improper Restriction of Communication Channel to Intended Endpoints (CWE-923); etc.\n**Reasons:**\n- Frequent Misuse\n- Abstraction\n**Suggested Alternatives:**\n- CWE-862: Missing Authorization\n- CWE-863: Incorrect Authorization\n- CWE-732: Incorrect Permission Assignment for Critical Resource\n- CWE-306: Missing Authentication\n- CWE-1390: Weak Authentication\n- CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n\n\n### Additional Notes\n**[Maintenance]** \n\nThis entry needs more work. Possible sub-categories include:\n\n\n  - Trusted group includes undesired entities (partially covered by CWE-286)\n\n  - Group can perform undesired actions\n\n  - ACL parse error does not fail closed\n\n\n\n\n\n### Observed Examples\n- **CVE-2022-24985:** A form hosting website only checks the session authentication status for a single form, making it possible to bypass authentication when there are multiple forms\n- **CVE-2022-29238:** Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.\n- **CVE-2022-23607:** Python-based HTTP library did not scope cookies to a particular domain such that \"supercookies\" could be sent to any domain on redirect\n\n\n\n\n## CWE-471: Modification of Assumed-Immutable Data (MAID)\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not properly protect an assumed-immutable element from being modified by an attacker.\n\n### Extended Description\nThis occurs when a particular input is critical enough to the functioning of the application that it should not be modifiable at all, but it is. Certain resources are often assumed to be immutable when they are not, such as hidden form fields in web applications, cookies, and reverse DNS lookups.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-664\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** MAID issues can be primary to many other weaknesses, and they are a major factor in languages that provide easy access to internal program constructs, such as PHP's register_globals and similar features. However, MAID issues can also be resultant from weaknesses that modify internal state; for example, a program might validate some data and store it in memory, but a buffer overflow could overwrite that validated data, leading to a change in program logic.\n\n**[Theoretical]** There are many examples where the MUTABILITY property is a major factor in a vulnerability.\n\n\n\n### Observed Examples\n- **CVE-2002-1757:** Relies on $PHP_SELF variable for authentication.\n- **CVE-2005-1905:** Gain privileges by modifying assumed-immutable code addresses that are accessed by a driver.\n\n\n\n\n## CWE-287: Improper Authentication\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nWhen an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nauthentification: An alternate term is \"authentification\", which appears to be most commonly used by people from non-English-speaking countries.\nAuthN: \"AuthN\" is typically used as an abbreviation of \"authentication\" within the web application security community. It is also distinct from \"AuthZ,\" which is an abbreviation of \"authorization.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\nAuthC: \"AuthC\" is used as an abbreviation of \"authentication,\" but it appears to used less frequently than \"AuthN.\"\n\n### Relationships\nChildOf -> CWE-284\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).\n**Comments:** Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.\n**Reasons:**\n- Frequent Misuse\n**Suggested Alternatives:**\n- CWE-1390: Weak Authentication\n- CWE-306: Missing Authentication for Critical Function\n\n\n### Additional Notes\n**[Relationship]** This can be resultant from SQL injection vulnerabilities and other issues.\n\n**[Maintenance]** The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions.\n\n\n\n### Observed Examples\n- **CVE-2022-35248:** Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication\n- **CVE-2022-36436:** Python-based authentication proxy does not enforce password authentication during the initial handshake, allowing the client to bypass authentication by specifying a 'None' authentication type.\n- **CVE-2022-30034:** Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).\n\n\n\n\n## CWE-862: Missing Authorization\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nAuthZ: \"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization.\n\n### Relationships\nChildOf -> CWE-285\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Terminology]** Assuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\n\n### Observed Examples\n- **CVE-2022-24730:** Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information\n- **CVE-2009-3168:** Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.\n- **CVE-2009-3597:** Web application stores database file under the web root with insufficient access control (CWE-219), allowing direct request.\n\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n### Extended Description\nWeb applications susceptible to direct request attacks often make the false assumption that such resources can only be reached through a given navigation path and so only apply authorization at certain points in the path.\n\n### Alternative Terms\nforced browsing: The \"forced browsing\" term could be misinterpreted to include weaknesses such as CSRF or XSS, so its use is discouraged.\n\n### Relationships\nChildOf -> CWE-862\nChildOf -> CWE-862\nChildOf -> CWE-288\nChildOf -> CWE-424\nCanPrecede -> CWE-471\nCanPrecede -> CWE-98\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Overlaps Modification of Assumed-Immutable Data (MAID), authorization errors, container errors; often primary to other weaknesses such as XSS and SQL injection.\n\n**[Theoretical]** \"Forced browsing\" is a step-based manipulation involving the omission of one or more steps, whose order is assumed to be immutable. The application does not verify that the first step was performed successfully before the second step. The consequence is typically \"authentication bypass\" or \"path disclosure,\" although it can be primary to all kinds of weaknesses, especially in languages such as PHP, which allow external modification of assumed-immutable variables.\n\n\n\n### Observed Examples\n- **CVE-2022-29238:** Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.\n- **CVE-2022-23607:** Python-based HTTP library did not scope cookies to a particular domain such that \"supercookies\" could be sent to any domain on redirect.\n- **CVE-2004-2144:** Bypass authentication via direct request.\n\n"
  },
  "timestamp": "2025-03-30 17:38:06",
  "cve_id": "unknown",
  "result_count": 5,
  "results": [
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "score": 9704.824801429466,
      "search_source": "unknown"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 9484.046835987507,
      "search_source": "unknown"
    },
    {
      "cwe_id": "425",
      "name": "Direct Request ('Forced Browsing')",
      "score": 9447.246183530398,
      "search_source": "unknown"
    },
    {
      "cwe_id": "285",
      "name": "Improper Authorization",
      "score": 9437.466920665052,
      "search_source": "unknown"
    },
    {
      "cwe_id": "22",
      "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "score": 9313.462613202197,
      "search_source": "unknown"
    }
  ]
}