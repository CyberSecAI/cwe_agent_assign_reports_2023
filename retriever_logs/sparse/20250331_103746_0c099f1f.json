{
  "retriever": "sparse",
  "query": "## Vulnerability Description\nVulnerability in the Advanced Networking Option component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 12.2.0.1 and 19c. Difficult to exploit vulnerability allows unauthenticated attacker with network access via Oracle Net to compromise Advanced Networking Option. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Advanced Networking Option, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Advanced Networking Option. Note The July 2021 Critical Patch Update introduces a number of Native Network Encryption changes to deal with vulnerability CVE-2021-2351 and prevent the use of weaker ciphers. Customers should review Changes in Native Network Encryption with the July 2021 Critical Patch Update (Doc ID 2791571.1). CVSS 3.1 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector (CVSS3.1/AVN/ACH/PRN/UIR/SC/CH/IH/AH).\n\n### Vulnerability Description Key Phrases\n- **impact:** takeover of Advanced Networking Option\n- **vector:** unauthenticated attacker with network access via Oracle Net\n- **attacker:** unauthenticated attacker\n- **product:** Oracle Database Server\n- **version:** 12.1.0.2, 12.2.0.1 and 19c\n- **component:** Advanced Networking Option component\n\n## CVE Reference Links Content Summary\n```\n{\n  \"CVE-2021-2351\": [\n    {\n      \"Root cause of vulnerability\": \"The Oracle Blockchain Platform has a vulnerability in its BCS Console due to inadequate handling of JDBC and OCCI.\",\n      \"Weaknesses/vulnerabilities present\": \"Improper Input Validation, Insufficient Security Controls\",\n      \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via Oracle Net.\",\n      \"Required attacker capabilities/position\": \"Attacker needs network access and must exploit vulnerabilities by sending malicious input to the vulnerable component\"\n    },\n    {\n      \"Root cause of vulnerability\": \"Oracle Communications Billing and Revenue Management has a vulnerability related to JDBC usage.\",\n       \"Weaknesses/vulnerabilities present\": \"Improper Input Validation, Insufficient Security Controls.\",\n      \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via Oracle Net.\",\n      \"Required attacker capabilities/position\": \"Attacker needs network access and must exploit vulnerabilities by sending malicious input to the vulnerable component\"\n    },\n    {\n      \"Root cause of vulnerability\": \"Oracle Communications IP Service Activator is vulnerable in its service activator component due to inadequate handling of OCCI.\",\n       \"Weaknesses/vulnerabilities present\": \"Improper Input Validation, Insufficient Security Controls.\",\n      \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via Oracle Net.\",\n      \"Required attacker capabilities/position\": \"Attacker needs network access and must exploit vulnerabilities by sending malicious input to the vulnerable component\"\n    },\n    {\n      \"Root cause of vulnerability\": \"Oracle Communications Pricing Design Center is vulnerable in its Cloud Native Deployment due to inadequate handling of JDBC.\",\n       \"Weaknesses/vulnerabilities present\": \"Improper Input Validation, Insufficient Security Controls.\",\n      \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via Oracle Net.\",\n      \"Required attacker capabilities/position\": \"Attacker needs network access and must exploit vulnerabilities by sending malicious input to the vulnerable component\"\n    },\n   {\n      \"Root cause of vulnerability\": \"Oracle GoldenGate Application Adapters are vulnerable in its general component due to inadequate handling of OCCI.\",\n       \"Weaknesses/vulnerabilities present\": \"Improper Input Validation, Insufficient Security Controls.\",\n      \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via Oracle Net.\",\n      \"Required attacker capabilities/position\": \"Attacker needs network access and must exploit vulnerabilities by sending malicious input to the vulnerable component\"\n   },\n      {\n      \"Root cause of vulnerability\": \"Oracle Documaker's Development Tools component is vulnerable due to inadequate handling of JDBC and OCCI.\",\n       \"Weaknesses/vulnerabilities present\": \"Improper Input Validation, Insufficient Security Controls.\",\n      \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via Oracle Net.\",\n      \"Required attacker capabilities/position\": \"Attacker needs network access and must exploit vulnerabilities by sending malicious input to the vulnerable component\"\n   },\n     {\n      \"Root cause of vulnerability\": \"Oracle Communications Billing and Revenue Management is vulnerable in its Pipeline Configuration Center, Oracle Data Manager, and Rated Event Loader due to inadequate handling of JDBC.\",\n       \"Weaknesses/vulnerabilities present\": \"Improper Input Validation, Insufficient Security Controls.\",\n      \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via Oracle Net.\",\n      \"Required attacker capabilities/position\": \"Attacker needs network access and must exploit vulnerabilities by sending malicious input to the vulnerable component\"\n    },\n    {\n      \"Root cause of vulnerability\": \"Oracle GoldenGate has a vulnerability in its OGG Core Library related to unspecified issues. This vulnerability is not remotely exploitable without authentication, i.e., may not be exploited over a network without requiring user credentials\",\n       \"Weaknesses/vulnerabilities present\": \"Unspecified.\",\n      \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized local privilege escalation or local access of sensitive information.\",\n       \"Attack vectors\": \"Local system\",\n       \"Required attacker capabilities/position\": \"Attacker needs a local logon and must have low privileges.\"\n    },\n      {\n      \"Root cause of vulnerability\": \"The Engineered Systems Utilities component of Oracle Autonomous Health Framework is vulnerable due to unspecified issues.\",\n       \"Weaknesses/vulnerabilities present\": \"Unspecified.\",\n      \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized local privilege escalation or local access of sensitive information.\",\n      \"Attack vectors\": \"Local system\",\n       \"Required attacker capabilities/position\": \"Attacker needs a local logon and must have low privileges.\"\n    },\n       {\n      \"Root cause of vulnerability\": \"Oracle SQL Developer is vulnerable due to third party library database support issues.\",\n       \"Weaknesses/vulnerabilities present\": \"Insecure third party library\",\n       \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via HTTP.\",\n       \"Required attacker capabilities/position\": \"Attacker needs network access and must exploit vulnerabilities by sending malicious input to the vulnerable component\"\n    },\n    {\n      \"Root cause of vulnerability\": \"Oracle REST Data Services has a vulnerability in its Apache Commons IO.\",\n      \"Weaknesses/vulnerabilities present\": \"Improper Input Validation, Insufficient Security Controls.\",\n      \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via HTTP.\",\n       \"Required attacker capabilities/position\": \"Attacker needs network access.\"\n    },\n       {\n      \"Root cause of vulnerability\": \"Oracle SQL Developer has a vulnerability in its installation process related to Apache Log4j\",\n       \"Weaknesses/vulnerabilities present\": \"Insecure third party library\",\n       \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via HTTP.\",\n       \"Required attacker capabilities/position\": \"Attacker needs network access and must exploit vulnerabilities by sending malicious input to the vulnerable component\"\n    },\n        {\n      \"Root cause of vulnerability\": \"Oracle Communications Pricing Design Center is vulnerable in its Cloud Native Deployment due to inadequate handling of JDBC.\",\n       \"Weaknesses/vulnerabilities present\": \"Improper Input Validation, Insufficient Security Controls.\",\n       \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via Oracle Net.\",\n       \"Required attacker capabilities/position\": \"Attacker needs network access and must exploit vulnerabilities by sending malicious input to the vulnerable component\"\n    },\n          {\n      \"Root cause of vulnerability\": \"Oracle GoldenGate is vulnerable due to insecure OCCI handling\",\n       \"Weaknesses/vulnerabilities present\": \"Improper Input Validation, Insufficient Security Controls.\",\n      \"Impact of exploitation\": \"Successful exploitation can lead to unauthorized data access, modification, or denial of service.\",\n      \"Attack vectors\": \"Network-based exploitation via Oracle Net.\",\n       \"Required attacker capabilities/position\": \"Attacker needs network access and must exploit vulnerabilities by sending malicious input to the vulnerable component\"\n   }\n  ]\n}\n```\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 327 | Use of a Broken or Risky Cryptographic Algorithm | Class | Allowed-with-Review | sparse | 0.315 |\n| 2 | 173 | Improper Handling of Alternate Encoding | Variant | Allowed | sparse | 0.257 |\n| 3 | 306 | Missing Authentication for Critical Function | Base | Allowed | sparse | 0.233 |\n| 4 | 347 | Improper Verification of Cryptographic Signature | Base | Allowed | sparse | 0.232 |\n| 5 | 611 | Improper Restriction of XML External Entity Reference | Base | Allowed | sparse | 0.232 |\n| 6 | 269 | Improper Privilege Management | Class | Discouraged | dense | 0.607 |\n| 7 | 208 | Observable Timing Discrepancy | Base | Allowed | graph | 0.003 |\n| 8 | 129 | Improper Validation of Array Index | Variant | Allowed | sparse | 0.231 |\n| 9 | 319 | Cleartext Transmission of Sensitive Information | Base | Allowed | sparse | 0.229 |\n| 10 | 502 | Deserialization of Untrusted Data | Base | Allowed | sparse | 0.223 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-327: Use of a Broken or Risky Cryptographic Algorithm\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product uses a broken or risky cryptographic algorithm or protocol.\n\n### Extended Description\n\n\nCryptographic algorithms are the methods by which data is scrambled to prevent observation or influence by unauthorized actors. Insecure cryptography can be exploited to expose sensitive information, modify data in unexpected ways, spoof identities of other users or devices, or other impacts.\n\n\nIt is very difficult to produce a secure algorithm, and even high-profile algorithms by accomplished cryptographic experts have been broken. Well-known techniques exist to break or weaken various kinds of cryptography. Accordingly, there are a small number of well-understood and heavily studied algorithms that should be used by most products. Using a non-standard or known-insecure algorithm is dangerous because a determined adversary may be able to break the algorithm and compromise whatever data has been protected.\n\n\nSince the state of cryptography advances so rapidly, it is common for an algorithm to be considered \"unsafe\" even if it was once thought to be strong. This can happen when new attacks are discovered, or if computing power increases so much that the cryptographic algorithm no longer provides the amount of protection that was originally thought.\n\n\nFor a number of reasons, this weakness is even more challenging to manage with hardware deployment of cryptographic algorithms as opposed to software implementation. First, if a flaw is discovered with hardware-implemented cryptography, the flaw cannot be fixed in most cases without a recall of the product, because hardware is not easily replaceable like software. Second, because the hardware product is expected to work for years, the adversary's computing power will only increase over time.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-693\nPeerOf -> CWE-311\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Maintenance]** Since CWE 4.4, various cryptography-related entries, including CWE-327 and CWE-1240, have been slated for extensive research, analysis, and community consultation to define consistent terminology, improve relationships, and reduce overlap or duplication. As of CWE 4.6, this work is still ongoing.\n\n**[Maintenance]** The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions.\n\n\n\n### Observed Examples\n- **CVE-2022-30273:** SCADA-based protocol supports a legacy encryption mode that uses Tiny Encryption Algorithm (TEA) in ECB mode, which leaks patterns in messages and cannot protect integrity\n- **CVE-2022-30320:** Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.\n- **CVE-2008-3775:** Product uses \"ROT-25\" to obfuscate the password in the registry.\n\n\n\n\n## CWE-173: Improper Handling of Alternate Encoding\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe product does not properly handle when an input uses an alternate encoding that is valid for the control sphere to which the input is being sent.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-172\nCanPrecede -> CWE-289\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n\n\n\n## CWE-306: Missing Authentication for Critical Function\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-287\nChildOf -> CWE-287\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2022-31260:** Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306)\n- **CVE-2022-29951:** TCP-based protocol in Programmable Logic Controller (PLC) has no authentication.\n- **CVE-2022-29952:** Condition Monitor firmware uses a protocol that does not require authentication.\n\n\n\n\n## CWE-347: Improper Verification of Cryptographic Signature\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not verify, or incorrectly verifies, the cryptographic signature for data.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-345\nChildOf -> CWE-345\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2002-1796:** Does not properly verify signatures for \"trusted\" entities.\n- **CVE-2005-2181:** Insufficient verification allows spoofing.\n- **CVE-2005-2182:** Insufficient verification allows spoofing.\n\n\n\n\n## CWE-611: Improper Restriction of XML External Entity Reference\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.\n\n### Extended Description\n\n\nXML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing.\n\n\nBy submitting an XML file that defines an external entity with a file:// URI, an attacker can cause the processing application to read the contents of a local file. For example, a URI such as \"file:///c:/winnt/win.ini\" designates (in Windows) the file C:\\Winnt\\win.ini, or file:///etc/passwd designates the password file in Unix-based systems. Using URIs with other schemes such as http://, the attacker can force the application to make outgoing requests to servers that the attacker cannot reach directly, which can be used to bypass firewall restrictions or hide the source of attacks such as port scanning.\n\n\nOnce the content of the URI is read, it is fed back into the application that is processing the XML. This application may echo back the data (e.g. in an error message), thereby exposing the file contents.\n\n\n### Alternative Terms\nXXE: An acronym used for the term \"XML eXternal Entities\"\n\n### Relationships\nChildOf -> CWE-610\nChildOf -> CWE-610\nPeerOf -> CWE-441\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** CWE-918 (SSRF) and CWE-611 (XXE) are closely related, because they both involve web-related technologies and can launch outbound requests to unexpected destinations. However, XXE can be performed client-side, or in other contexts in which the software is not acting directly as a server, so the \"Server\" portion of the SSRF acronym does not necessarily apply.\n\n\n\n### Observed Examples\n- **CVE-2022-42745:** Recruiter software allows reading arbitrary files using XXE\n- **CVE-2005-1306:** A browser control can allow remote attackers to determine the existence of files via Javascript containing XML script.\n- **CVE-2012-5656:** XXE during SVG image conversion\n\n\n\n\n## CWE-269: Improper Privilege Management\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-284\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-269 is commonly misused. It can be conflated with \"privilege escalation,\" which is a technical impact that is listed in many low-information vulnerability reports [REF-1287]. It is not useful for trend analysis.\n**Comments:** If an error or mistake allows privilege escalation, then use the CWE ID for that mistake. Avoid using CWE-269 when only phrases such as \"privilege escalation\" or \"gain privileges\" are available, as these indicate technical impact of the vulnerability - not the root cause weakness. If the root cause seems to be directly related to privileges, then examine the children of CWE-269 for additional hints, such as Execution with Unnecessary Privileges (CWE-250) or Incorrect Privilege Assignment (CWE-266).\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693).\n\n\n\n### Observed Examples\n- **CVE-2001-1555:** Terminal privileges are not reset when a user logs out.\n- **CVE-2001-1514:** Does not properly pass security context to child processes in certain cases, allows privilege escalation.\n- **CVE-2001-0128:** Does not properly compute roles.\n\n\n\n\n## CWE-208: Observable Timing Discrepancy\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nTwo separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.\n\n### Extended Description\nIn security-relevant contexts, even small variations in timing can be exploited by attackers to indirectly infer certain details about the product's internal operations. For example, in some cryptographic algorithms, attackers can use timing differences to infer certain properties about a private key, making the key easier to guess. Timing discrepancies effectively form a timing side channel.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-203\nCanPrecede -> CWE-385\nCanPrecede -> CWE-327\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** Often primary in cryptographic applications and algorithms.\n\n**[Maintenance]** CWE 4.16 removed a demonstrative example for a hardware module because it was inaccurate and unable to be adapted. The CWE team is developing an alternative.\n\n\n\n### Observed Examples\n- **CVE-2019-10071:** Java-oriented framework compares HMAC signatures using String.equals() instead of a constant-time algorithm, causing timing discrepancies\n- **CVE-2019-10482:** Smartphone OS uses comparison functions that are not in constant time, allowing side channels\n- **CVE-2014-0984:** Password-checking function in router terminates validation of a password entry when it encounters the first incorrect character, which allows remote attackers to obtain passwords via a brute-force attack that relies on timing differences in responses to incorrect password guesses, aka a timing side-channel attack.\n\n\n\n\n## CWE-129: Improper Validation of Array Index\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nout-of-bounds array index\nindex-out-of-range\narray index underflow\n\n### Relationships\nChildOf -> CWE-1285\nChildOf -> CWE-20\nCanPrecede -> CWE-119\nCanPrecede -> CWE-823\nCanPrecede -> CWE-789\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** This weakness can precede uncontrolled memory allocation (CWE-789) in languages that automatically expand an array when an index is used that is larger than the size of the array, such as JavaScript.\n\n**[Theoretical]** An improperly validated array index might lead directly to the always-incorrect behavior of \"access of array using out-of-bounds index.\"\n\n\n\n### Observed Examples\n- **CVE-2005-0369:** large ID in packet used as array index\n- **CVE-2001-1009:** negative array index as argument to POP LIST command\n- **CVE-2003-0721:** Integer signedness error leads to negative array index\n\n\n\n\n## CWE-319: Cleartext Transmission of Sensitive Information\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.\n\n### Extended Description\n\n\nMany communication channels can be \"sniffed\" (monitored) by adversaries during data transmission. For example, in networking, packets can traverse many intermediary nodes from the source to the destination, whether across the internet, an internal network, the cloud, etc. Some actors might have privileged access to a network interface or any link along the channel, such as a router, but they might not be authorized to collect the underlying data. As a result, network traffic could be sniffed by adversaries, spilling security-critical data.\n\n\nApplicable communication channels are not limited to software products. Applicable channels include hardware-specific technologies such as internal hardware networks and external debug channels, supporting remote JTAG debugging. When mitigations are not applied to combat adversaries within the product's threat model, this weakness significantly lowers the difficulty of exploitation by such adversaries.\n\n\nWhen full communications are recorded or logged, such as with a packet dump, an adversary could attempt to obtain the dump long after the transmission has occurred and try to \"sniff\" the cleartext from the recorded communications in the dump itself. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information. \n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-311\nChildOf -> CWE-311\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions.\n\n\n\n### Observed Examples\n- **CVE-2022-29519:** Programmable Logic Controller (PLC) sends sensitive information in plaintext, including passwords and session tokens.\n- **CVE-2022-30312:** Building Controller uses a protocol that transmits authentication credentials in plaintext.\n- **CVE-2022-31204:** Programmable Logic Controller (PLC) sends password in plaintext.\n\n\n\n\n## CWE-502: Deserialization of Untrusted Data\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nMarshaling, Unmarshaling: Marshaling and unmarshaling are effectively synonyms for serialization and deserialization, respectively.\nPickling, Unpickling: In Python, the \"pickle\" functionality is used to perform serialization and deserialization.\nPHP Object Injection: Some PHP application researchers use this term when attacking unsafe use of the unserialize() function; but it is also used for CWE-915.\n\n### Relationships\nChildOf -> CWE-913\nChildOf -> CWE-913\nPeerOf -> CWE-915\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** The relationships between CWE-502 and CWE-915 need further exploration. CWE-915 is more narrowly scoped to object modification, and is not necessarily used for deserialization.\n\n\n\n### Observed Examples\n- **CVE-2019-12799:** chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183)\n- **CVE-2015-8103:** Deserialization issue in commonly-used Java library allows remote execution.\n- **CVE-2015-4852:** Deserialization issue in commonly-used Java library allows remote execution.\n\n",
  "keyphrases": {},
  "timestamp": "2025-03-31 10:37:46",
  "cve_id": "unknown",
  "result_count": 5,
  "results": [
    {
      "cwe_id": "611",
      "name": "Improper Restriction of XML External Entity Reference",
      "score": 6516.926288851631,
      "search_source": "base_query"
    },
    {
      "cwe_id": "203",
      "name": "Observable Discrepancy",
      "score": 6446.312913756893,
      "search_source": "base_query"
    },
    {
      "cwe_id": "327",
      "name": "Use of a Broken or Risky Cryptographic Algorithm",
      "score": 6441.937436683434,
      "search_source": "base_query"
    },
    {
      "cwe_id": "502",
      "name": "Deserialization of Untrusted Data",
      "score": 6316.701721514776,
      "search_source": "base_query"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "score": 6243.646284511712,
      "search_source": "base_query"
    }
  ]
}